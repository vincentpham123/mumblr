[{"/Users/vincentpham/Documents/mumblr/frontend/src/index.js":"1","/Users/vincentpham/Documents/mumblr/frontend/src/App.js":"2","/Users/vincentpham/Documents/mumblr/frontend/src/store/csrf.js":"3","/Users/vincentpham/Documents/mumblr/frontend/src/store/session.js":"4","/Users/vincentpham/Documents/mumblr/frontend/src/components/Context/Modal.js":"5","/Users/vincentpham/Documents/mumblr/frontend/src/store/index.js":"6","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/LoginForm.js":"7","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/index.js":"8","/Users/vincentpham/Documents/mumblr/frontend/src/components/SignupFormPage/index.js":"9","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/EmailCheck.js":"10","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordSignUp.js":"11","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordLogin.js":"12","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/ProfileButton.js":"13","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/PostButton.js":"14","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/index.js":"15"},{"size":1171,"mtime":1687222048000,"results":"16","hashOfConfig":"17"},{"size":619,"mtime":1687225245649,"results":"18","hashOfConfig":"17"},{"size":865,"mtime":1687222048000,"results":"19","hashOfConfig":"17"},{"size":2326,"mtime":1687222048000,"results":"20","hashOfConfig":"17"},{"size":919,"mtime":1687222048000,"results":"21","hashOfConfig":"17"},{"size":681,"mtime":1687222048000,"results":"22","hashOfConfig":"17"},{"size":1867,"mtime":1687222048000,"results":"23","hashOfConfig":"17"},{"size":1046,"mtime":1687222048000,"results":"24","hashOfConfig":"17"},{"size":2261,"mtime":1687222048000,"results":"25","hashOfConfig":"17"},{"size":2460,"mtime":1687222048000,"results":"26","hashOfConfig":"17"},{"size":2890,"mtime":1687222048000,"results":"27","hashOfConfig":"17"},{"size":2392,"mtime":1687222048000,"results":"28","hashOfConfig":"17"},{"size":2743,"mtime":1687222048000,"results":"29","hashOfConfig":"17"},{"size":211,"mtime":1687222048000,"results":"30","hashOfConfig":"17"},{"size":501,"mtime":1687222048000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1mdl8js",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/vincentpham/Documents/mumblr/frontend/src/index.js",[],[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/App.js",["86","87","88","89","90"],[],"import {useState, useEffect} from 'react'\nimport { Route } from \"react-router-dom\"\nimport LoginForm from \"./components/LoginFormModal/LoginForm\";\nimport SignupFormPage from './components/SignupFormPage';\nimport Navigation from './components/Navigation';\nimport { useSelector } from \"react-redux\";\nfunction App() {\n  const sessionUser = useSelector(state=> state.session.user);\n  const [loggedIn,setLoggedIn] = useState(false);\n  \n  return (\n    <> \n   \n      <Navigation />\n      <Route path='/signup'>\n        <SignupFormPage />\n      </Route>\n      <Route path='/'>\n      </Route>\n    </>\n  );\n}\n\nexport default App;\n","/Users/vincentpham/Documents/mumblr/frontend/src/store/csrf.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/store/session.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Context/Modal.js",["91"],[],"import React,{ useRef, useState, useContext, useEffect,createContext} from \"react\";\nimport ReactDOM  from \"react-dom\";\nimport './Modal.css'\nconst ModalContext = React.createContext();\n\nconst ModalProvider = ({children})=>{\n    const modalRef = useRef();\n    const [value,setValue] = useState();\n\n    useEffect(()=>{\n        setValue(modalRef.current);\n    },[]);\n\n    return(\n        <>\n        <ModalContext.Provider value={value}>\n            {children}\n        </ModalContext.Provider>\n            <div ref={modalRef}></div>\n        </>\n    )\n\n\n\n}\n\n\nexport const Modal = ({onClose,children})=>{\n    const modalNode = useContext(ModalContext);\n    if (!modalNode) return null;\n    return ReactDOM.createPortal(\n        <div id='modal'>\n            <div id='modal-background' onClick={onClose}></div>\n            <div id='modal-content'>{children}</div>\n        </div>,modalNode\n    );\n}\n\nexport default ModalProvider;","/Users/vincentpham/Documents/mumblr/frontend/src/store/index.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/LoginForm.js",["92","93","94","95"],[],"\nimport './index.css'\nimport React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom'\nimport csrfFetch from '../../store/csrf';\nimport EmailCheck from './EmailCheck';\nimport PasswordLogin from './passwordLogin';\nimport PasswordSignUp from './passwordSignUp';\nconst LoginForm = ()=>{\n    const dispatch = useDispatch();\n    // grab user info from current logged in user\n    // most likely be blank\n    const sessionUser = useSelector(state=> state.session.user);\n    const [email,setEmail] = useState('')\n    const [errors,setErrors] = useState([]);\n    const [emailCheck,setEmailCheck] = useState(false);\n    const [emailExists,setEmailExists] = useState(null);\n    if (sessionUser) return <Redirect to=\"/\" />;\n    const checkEmail = async (email) => {\n        const response = await csrfFetch('./api/check-email',{\n            method:\"POST\",\n            body: JSON.stringify(email)\n        });\n        const exists = await response.json();\n        return exists;\n    }\n    // need to move fetch into on email click\n\n    const onEmailClick =async (email)=>{\n        let response = await checkEmail(email);\n        setEmailExists(response);\n        setEmailCheck(true);\n        \n    };\n\n\n    <ul>\n        {errors.map(error => <li key={error}>{error}</li>)}\n    </ul>\n\n    return (\n        // <ul>\n        //   {errors.map(error => <li key={error}>{error}</li>)}\n        // </ul>\n        <>\n        <div className='loginModal'>\n        {!emailCheck && <EmailCheck setEmail={setEmail} onEmailClick={onEmailClick} />}\n        {emailCheck===true && emailExists && <PasswordLogin email={email}/>}\n        {emailCheck===true && !emailExists && <PasswordSignUp email={email}/>}\n        </div>\n        </>\n    );\n}\n\nexport default LoginForm;","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/index.js",["96","97","98","99","100"],[],"\nimport React,{useState} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport { Redirect, NavLink } from 'react-router-dom'\nimport Profilebutton from './ProfileButton';\nimport PostButton from './PostButton';\nimport LoginFormModel from '../LoginFormModal';\n\nconst Navigation = ()=>{\n    const sessionUser = useSelector(state=> state.session.user);\n    let sessionLinks;\n    if (sessionUser){\n        sessionLinks=(\n            <>\n            <li>\n            <Profilebutton user={sessionUser} />\n            </li>\n            <li>\n            <PostButton />\n            </li>\n            </>\n        )\n    } else {\n        sessionLinks = (\n            <li>\n            <LoginFormModel />\n            </li>\n        )\n    };\n    return (\n        <>\n        <header>\n        <div className = 'navBody'>\n            <ul className='navButtons'>\n                    {sessionLinks}\n            </ul>\n        </div>\n        </header>\n        </>\n    )\n}\nexport default Navigation;","/Users/vincentpham/Documents/mumblr/frontend/src/components/SignupFormPage/index.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/EmailCheck.js",["101","102"],[],"import { useState,useEffect } from \"react\"\nimport './emailcheck.css'\nconst EmailCheck = ({setEmail,onEmailClick}) =>{\n        const [initialEmail,setInitialEmail] = useState('');\n        const [emailError,setEmailError] = useState('');\n        const [buttonColor,setButtonColor] = useState('');\n        const [fontColor,setFontColor] = useState('')\n        useEffect(()=>{\n        if (initialEmail.length) {\n            setButtonColor('white');\n        setFontColor('black')} else {\n            setButtonColor('');\n            setFontColor('');\n        } \n        }\n        ,[initialEmail]);\n        const validateEmail = (email) => {\n            const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n            return emailRegex.test(email);\n        }\n\n        const handleEmailSubmit = (event) =>{\n            event.preventDefault();\n            setEmailError('');\n            if (!validateEmail(initialEmail)){\n                setEmailError(\"That's not a valid email address. Please try again.\");\n                return;\n            }\n            onEmailClick(initialEmail);\n            setEmail(initialEmail);\n    \n        }\n        // const handleEmailClick = (event) =>{\n        //     setEmailError([]);\n\n        //     if(!validateEmail(event.target.value)){\n        //         emailError.push(\"That's not a valid email address. Please try again.\");\n                \n        //     }\n        // }\n        return (\n            <>\n            <div className='email-box'>\n                <div className='email-title'>mumblr</div>\n                <form className = 'email-form' onSubmit={handleEmailSubmit}>\n                <div className='email-instructions'><p>Enter your email to login or register:</p></div>\n                <input className= 'email-text' type='text' placeholder='Email' \n                    value={initialEmail} onChange={event=>setInitialEmail(event.target.value)} required\n                    />\n                \n                {<div>{emailError}</div>}\n                    <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='email-button' type='submit' >\n                    Next<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n                    </button>\n                </form>\n            </div>\n            </>\n        )\n}\nexport default EmailCheck;\n{/* <span>Next <i className=\"fa-solid fa-arrow-right\" style={{color:'#000000'}}></i> </span> */}","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordSignUp.js",["103","104"],[],"import { useState, useEffect} from \"react\"\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport './passwordSignup.css';\n\nconst PasswordSignUp = ({email}) =>{\n    const dispatch = useDispatch();\n    const [password,setPassword] = useState('');\n    const [confirmPassword,setConfirmPassword] = useState('');\n    const [errors,setErrors] = useState([]);\n    const [buttonColor,setButtonColor] = useState('');\n    const [fontColor,setFontColor] = useState('');\n    useEffect(()=>{\n        if (confirmPassword.length && password.length ){\n            setButtonColor('white');\n            setFontColor('black');\n        } else {\n            setButtonColor('');\n            setFontColor('');\n        }\n    },[password,confirmPassword]);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (password===confirmPassword) {\n        setErrors([]);\n        return dispatch(sessionActions.login({email, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n\n            });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    }\n    \n    return (\n        <>\n             <div className='passwordsignup-box'>\n                <div className='password-title'>mumblr</div>\n                <form className = 'password-form' onSubmit={handleSubmit}>\n                    <div className='password-instructions'><p>Welcome to your corner of the internet. Glad you're here</p></div>\n                    <input className= 'password-text' type='password' placeholder='Password' \n                    value={password} onChange={event=>setPassword(event.target.value)} required\n                    />\n                    <input className= 'password-text' type='password' placeholder='Repeat password' \n                    value={confirmPassword} onChange={event=>setConfirmPassword(event.target.value)} required\n                    />\n                    \n                    <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='password-button' type='submit' >\n                    Sign Up<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n                    </button>\n                </form>\n                <ul>\n                    {errors.map(error => <li key={error}>{error}</li>)}\n                </ul>\n            </div>\n        </>\n    )\n\n}\n\nexport default PasswordSignUp;","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordLogin.js",["105","106"],[],"import { useState, useEffect} from \"react\"\nimport './index.css'\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport './passwordLogin.css';\nconst PasswordLogin = ({email}) =>{\n    const dispatch = useDispatch();\n    const [password,setPassword] = useState('');\n    const [errors,setErrors] = useState([]);\n    const [buttonColor,setButtonColor] = useState('');\n    const [fontColor,setFontColor] = useState('');\n    useEffect(()=>{\n        if (password.length){\n            setButtonColor('white');\n            setFontColor('black');\n        } else {\n            setButtonColor('');\n            setFontColor('');\n        }\n    },[password]);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setErrors([]);\n        return dispatch(sessionActions.login({email, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n\n            });\n    }\n    return (\n        <>\n             <div className='passwordlogin-box'>\n                <div className='password-title'>mumblr</div>\n                <form className = 'password-form' onSubmit={handleSubmit}>\n                <div className='password-instructions'><p>Welcome back to your corner of the internet.</p></div>\n                <input className= 'password-text' type='password' placeholder='Password' \n                    value={password} onChange={event=>setPassword(event.target.value)} required\n                    />\n                \n                    <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='password-button' type='submit' >\n                    Log in<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n                    </button>\n                </form>\n                <ul>\n                    {errors.map(error => <li key={error}>{error}</li>)}\n                </ul>\n            </div>\n        </>\n    )\n\n}\n\nexport default PasswordLogin;","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/ProfileButton.js",["107","108"],[],"import './profilebutton.css';\nimport { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport LoginFormModel from '../LoginFormModal';\nconst Profilebutton = () =>{\n// work on dropdown menu that will bring down menu\nconst user = useSelector(state=>state.session.user)\nconst dispatch = useDispatch();\nconst [showMenu,setShowMenu] = useState(false);\nlet menu;\nconst openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n}\n\nuseEffect(()=>{\n    if (!showMenu) return;\n    const closeMenu=()=>{\n        setShowMenu(false);\n    };\n    document.addEventListener('click',closeMenu);\n    return ()=> document.removeEventListener(\"click\",closeMenu);\n},[showMenu]);\n\nconst logout=(e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n};\n\nlet sessionLinks;\nif(user){\n    sessionLinks=(\n        \n        <ul className='profile-dropdown'>\n            <li className='dropdownlink'>\n                <NavLink to='./likes' className='menu-link'>\n                    <div className='icon'>\n                        <i className=\"fa-solid fa-heart heart icons\" ></i>\n                    </div>\n                    <div className='menu-text'>\n                        <span>Likes</span>\n                        <span>0</span>\n                    </div>\n                </NavLink>\n                <NavLink to='./followers' className='menu-link'>\n                    <div className='icon'>\n                        <i className=\"fa-solid fa-user-plus heart icons\" ></i>\n                    </div>\n                    <div className='menu-text'>\n                        <span>Followers</span>\n                        <span>0</span>\n                    </div>\n                </NavLink>\n            </li>\n         </ul>\n    );\n} else {\n    sessionLinks=(\n        <>\n            {/* will trigger a modal when it is ready */}\n\n            <NavLink to='/signup'>Sign In</NavLink>\n        </>\n    );\n};\n    \n    return (\n        <>\n\n        <div className='profile'>\n            <button onClick={openMenu} style={{ backgroundColor: 'transparent', border: 'none', boxShadow: 'none' }}>\n                <i className=\"fa-solid fa-user\" style={{color:'#696969'}}></i>\n            </button>\n        {showMenu && (\n            <div className='profile-menu'>\n                <div className='profile-title'>\n                    <h3 id='account'>Account</h3>\n                    <button className='logout' onClick={e=>logout(e)}>Sign Out</button>\n                </div>\n                \n                {sessionLinks}\n            </div>\n        )}\n        </div>\n        </>\n    );\n}\n\nexport default Profilebutton;\n","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/PostButton.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/index.js",[],[],{"ruleId":"109","severity":1,"message":"110","line":1,"column":19,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"109","severity":1,"message":"113","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":17},{"ruleId":"109","severity":1,"message":"114","line":8,"column":9,"nodeType":"111","messageId":"112","endLine":8,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":18},{"ruleId":"109","severity":1,"message":"116","line":9,"column":19,"nodeType":"111","messageId":"112","endLine":9,"endColumn":30},{"ruleId":"109","severity":1,"message":"117","line":1,"column":56,"nodeType":"111","messageId":"112","endLine":1,"endColumn":69},{"ruleId":"109","severity":1,"message":"110","line":3,"column":24,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"118","line":5,"column":13,"nodeType":"111","messageId":"112","endLine":5,"endColumn":27},{"ruleId":"109","severity":1,"message":"119","line":12,"column":11,"nodeType":"111","messageId":"112","endLine":12,"endColumn":19},{"ruleId":"109","severity":1,"message":"120","line":17,"column":19,"nodeType":"111","messageId":"112","endLine":17,"endColumn":28},{"ruleId":"109","severity":1,"message":"121","line":2,"column":15,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"109","severity":1,"message":"122","line":3,"column":9,"nodeType":"111","messageId":"112","endLine":3,"endColumn":20},{"ruleId":"109","severity":1,"message":"118","line":4,"column":13,"nodeType":"111","messageId":"112","endLine":4,"endColumn":27},{"ruleId":"109","severity":1,"message":"123","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"124","line":5,"column":20,"nodeType":"111","messageId":"112","endLine":5,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":18,"column":38,"nodeType":"127","messageId":"128","endLine":18,"endColumn":39,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":61,"column":1,"nodeType":"132","messageId":"133","endLine":61,"endColumn":97},{"ruleId":"109","severity":1,"message":"134","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":17},{"ruleId":"109","severity":1,"message":"123","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":18},{"ruleId":"109","severity":1,"message":"134","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":17},{"ruleId":"109","severity":1,"message":"123","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"135","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":22},{"ruleId":"109","severity":1,"message":"136","line":12,"column":5,"nodeType":"111","messageId":"112","endLine":12,"endColumn":9},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'LoginForm' is defined but never used.","'sessionUser' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'createContext' is defined but never used.","'sessionActions' is defined but never used.","'dispatch' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["137","138"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'csrfFetch' is defined but never used.","'LoginFormModel' is defined but never used.","'menu' is defined but never used.",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},"removeEscape",{"range":"145","text":"146"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"147","text":"148"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[672,673],"",[672,672],"\\"]