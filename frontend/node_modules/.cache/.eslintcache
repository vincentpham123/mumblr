[{"/Users/vincentpham/Documents/mumblr/frontend/src/index.js":"1","/Users/vincentpham/Documents/mumblr/frontend/src/App.js":"2","/Users/vincentpham/Documents/mumblr/frontend/src/store/csrf.js":"3","/Users/vincentpham/Documents/mumblr/frontend/src/store/session.js":"4","/Users/vincentpham/Documents/mumblr/frontend/src/components/Context/Modal.js":"5","/Users/vincentpham/Documents/mumblr/frontend/src/store/index.js":"6","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/LoginForm.js":"7","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/index.js":"8","/Users/vincentpham/Documents/mumblr/frontend/src/components/SignupFormPage/index.js":"9","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/EmailCheck.js":"10","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordSignUp.js":"11","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordLogin.js":"12","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/ProfileButton.js":"13","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/PostButton.js":"14","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/index.js":"15","/Users/vincentpham/Documents/mumblr/frontend/src/store/posts.js":"16","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/loggedout.js":"17","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/loggedin.js":"18","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/dashboard.js":"19","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js":"20","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/showPost.js":"21","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostHeader.js":"22","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/index.js":"23","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostText.js":"24","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPost.js":"25","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostCircle.js":"26","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostSelection.js":"27","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/textposts/NewTextPost.js":"28","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/textposts/NewTextPostModal.js":"29","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPhotoPostModal.js":"30","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPhotoPost.js":"31","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPostInputs.js":"32","/Users/vincentpham/Documents/mumblr/frontend/src/components/users/index.js":"33","/Users/vincentpham/Documents/mumblr/frontend/src/store/user.js":"34","/Users/vincentpham/Documents/mumblr/frontend/src/components/users/likes.js":"35","/Users/vincentpham/Documents/mumblr/frontend/src/components/users/posts.js":"36","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/UpdatePostModal.js":"37","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/UpdatePost.js":"38","/Users/vincentpham/Documents/mumblr/frontend/src/store/likes.js":"39","/Users/vincentpham/Documents/mumblr/frontend/src/store/comments.js":"40","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostFooter.js":"41","/Users/vincentpham/Documents/mumblr/frontend/src/store/follows.js":"42","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/ForYou.js":"43","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/trending.js":"44","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/Spotlight.js":"45"},{"size":1330,"mtime":1688024565346,"results":"46","hashOfConfig":"47"},{"size":2715,"mtime":1688112631547,"results":"48","hashOfConfig":"47"},{"size":927,"mtime":1687637140093,"results":"49","hashOfConfig":"47"},{"size":2325,"mtime":1687815797252,"results":"50","hashOfConfig":"47"},{"size":946,"mtime":1687414839843,"results":"51","hashOfConfig":"47"},{"size":1002,"mtime":1688105700059,"results":"52","hashOfConfig":"47"},{"size":1904,"mtime":1688117120947,"results":"53","hashOfConfig":"47"},{"size":2396,"mtime":1689629625308,"results":"54","hashOfConfig":"47"},{"size":2280,"mtime":1688144795774,"results":"55","hashOfConfig":"47"},{"size":2465,"mtime":1687244914294,"results":"56","hashOfConfig":"47"},{"size":3191,"mtime":1688144863179,"results":"57","hashOfConfig":"47"},{"size":2431,"mtime":1688144848509,"results":"58","hashOfConfig":"47"},{"size":2874,"mtime":1688111505095,"results":"59","hashOfConfig":"47"},{"size":745,"mtime":1688065027633,"results":"60","hashOfConfig":"47"},{"size":583,"mtime":1687366937963,"results":"61","hashOfConfig":"47"},{"size":3016,"mtime":1689700777313,"results":"62","hashOfConfig":"47"},{"size":946,"mtime":1688109366813,"results":"63","hashOfConfig":"47"},{"size":767,"mtime":1688113704903,"results":"64","hashOfConfig":"47"},{"size":1702,"mtime":1688116136184,"results":"65","hashOfConfig":"47"},{"size":1118,"mtime":1689632170607,"results":"66","hashOfConfig":"47"},{"size":2356,"mtime":1689699543093,"results":"67","hashOfConfig":"47"},{"size":5586,"mtime":1689702537234,"results":"68","hashOfConfig":"47"},{"size":0,"mtime":1687303254021,"results":"69","hashOfConfig":"47"},{"size":3786,"mtime":1688117161230,"results":"70","hashOfConfig":"47"},{"size":928,"mtime":1687752096264,"results":"71","hashOfConfig":"47"},{"size":1627,"mtime":1687561812392,"results":"72","hashOfConfig":"47"},{"size":383,"mtime":1687752134259,"results":"73","hashOfConfig":"47"},{"size":9701,"mtime":1688144932285,"results":"74","hashOfConfig":"47"},{"size":592,"mtime":1687562607727,"results":"75","hashOfConfig":"47"},{"size":554,"mtime":1687563729933,"results":"76","hashOfConfig":"47"},{"size":8016,"mtime":1688117135389,"results":"77","hashOfConfig":"47"},{"size":7403,"mtime":1688117148611,"results":"78","hashOfConfig":"47"},{"size":6328,"mtime":1688117205255,"results":"79","hashOfConfig":"47"},{"size":1922,"mtime":1689636524207,"results":"80","hashOfConfig":"47"},{"size":774,"mtime":1688110716841,"results":"81","hashOfConfig":"47"},{"size":770,"mtime":1688116016257,"results":"82","hashOfConfig":"47"},{"size":585,"mtime":1687853330565,"results":"83","hashOfConfig":"47"},{"size":9692,"mtime":1688117181863,"results":"84","hashOfConfig":"47"},{"size":2842,"mtime":1689703634260,"results":"85","hashOfConfig":"47"},{"size":1644,"mtime":1688100701862,"results":"86","hashOfConfig":"47"},{"size":15582,"mtime":1689703813957,"results":"87","hashOfConfig":"47"},{"size":1667,"mtime":1689636524206,"results":"88","hashOfConfig":"47"},{"size":775,"mtime":1688109205626,"results":"89","hashOfConfig":"47"},{"size":1133,"mtime":1688117116669,"results":"90","hashOfConfig":"47"},{"size":1159,"mtime":1688117107041,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1mdl8js",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"103"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"103"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"95"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"103"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"103"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"103"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"103"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"103"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"103"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"103"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"103"},"/Users/vincentpham/Documents/mumblr/frontend/src/index.js",[],[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/App.js",["246","247","248","249","250","251","252","253","254"],[],"import { useState, useEffect } from 'react'\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\"\nimport SignupFormPage from './components/SignupFormPage';\nimport Navigation from './components/Navigation';\nimport { useSelector } from \"react-redux\";\nimport Dashboard from './components/Dashboard/dashboard';\nimport TodayDashboard from './components/Dashboard/today';\nimport LoginFormModel from './components/LoginFormModal';\nimport NewPost from './components/posts/NewPost';\nimport NewTextModal from './components/posts/textposts/NewTextPostModal';\nimport NewPhotoModal from './components/posts/NewPhotoPostModal';\nimport UserShowPage from './components/users';\nimport UpdatePostModal from './components/posts/UpdatePostModal';\nimport './app.css'\nfunction App() {\n  const sessionUser = useSelector(state => state.session.user);\n  const [loggedIn, setLoggedIn] = useState(false);\n  let location = useLocation();\n  let background = location.state && location.state.background\n  return (\n    <>\n      <div className='header-container'>\n        <Navigation />\n      </div>\n      <div className='body'>\n\n        <Switch>\n          <Route  path=\"/explore\">\n            <div className=\"dashboard\">\n              <Dashboard />\n            </div>\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"dashboard\">\n              <Dashboard />\n            </div>\n          </Route>\n          <Route path=\"/user/:userid\">\n            <UserShowPage />\n          </Route>\n          \n        </Switch>\n        <Route exact path=\"/new/text\">\n            <NewTextModal />\n          </Route>\n          <Route path=\"/new/photo\">\n            <NewPhotoModal />\n          </Route>\n          <Route path=\"/edit/:postid\">\n            <UpdatePostModal />\n          </Route>\n          <Route path=\"/new\">\n            <NewPost />\n          </Route>\n      </div>\n      {/* <Switch location={background || location}>\n      <Route path='/new/'>\n            <NewPost />\n      </Route>\n          <Route path='/new'>\n            <NewPost />\n          </Route>\n          <Route path='/new/text'>\n            <NewTextModal />\n          </Route>\n          <Route path='/new/photo'>\n            <NewPhotoModal />\n          </Route>\n          <Route path='/edit/:postid'>\n            <UpdatePostModal />\n          </Route>\n      </Switch> */}\n      {/* routes */}\n\n      {/* <Route exact path='/new/text'>\n        <NewTextModal />\n      </Route>\n      <Route exact path='/new/photo'>\n        <NewPhotoModal />\n      </Route>\n      <Route path='/edit/:postid'>\n        <UpdatePostModal />\n      </Route>\n\n      <Route exact path='/new'>\n        <NewPost />\n      </Route> */}\n    </>\n  );\n}\n\nexport default App;\n","/Users/vincentpham/Documents/mumblr/frontend/src/store/csrf.js",[],[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/store/session.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Context/Modal.js",["255"],[],"import React,{ useRef, useState, useContext, useEffect,createContext} from \"react\";\nimport ReactDOM  from \"react-dom\";\nimport './Modal.css'\nconst ModalContext = React.createContext();\n\nconst ModalProvider = ({children})=>{\n    const modalRef = useRef();\n    const [value,setValue] = useState();\n\n    useEffect(()=>{\n        setValue(modalRef.current);\n    },[]);\n\n    return(\n        <>\n        <ModalContext.Provider value={value}>\n            {children}\n        </ModalContext.Provider>\n            <div className='modal-container'ref={modalRef}></div>\n        </>\n    )\n\n\n\n}\n\n\nexport const Modal = ({onClose,children})=>{\n    const modalNode = useContext(ModalContext);\n    if (!modalNode) return null;\n    return ReactDOM.createPortal(\n        <div id='modal'>\n            <div id='modal-background' onClick={onClose}></div>\n            <div id='modal-content'>{children}</div>\n        </div>,modalNode\n    );\n}\n\nexport default ModalProvider;","/Users/vincentpham/Documents/mumblr/frontend/src/store/index.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/LoginForm.js",["256","257","258"],[],"\nimport './index.css'\nimport React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport csrfFetch from '../../store/csrf';\nimport EmailCheck from './EmailCheck';\nimport PasswordLogin from './passwordLogin';\nimport PasswordSignUp from './passwordSignUp';\nconst LoginForm = ({setshowModal})=>{\n    const dispatch = useDispatch();\n    // grab user info from current logged in user\n    // most likely be blank\n    // make closeModal\n    const sessionUser = useSelector(state=> state.session.user);\n    const [email,setEmail] = useState('')\n    const [errors,setErrors] = useState([]);\n    const [emailCheck,setEmailCheck] = useState(false);\n    const [emailExists,setEmailExists] = useState(null);\n    if (sessionUser) return <Redirect to=\"/\" />;\n    const checkEmail = async (email) => {\n        const response = await csrfFetch('/api/check-email',{\n            method:\"POST\",\n            body: JSON.stringify(email)\n        });\n        const exists = await response.json();\n        return exists;\n    }\n    // need to move fetch into on email click\n\n    const onEmailClick =async (email)=>{\n        let response = await checkEmail(email);\n        setEmailExists(response);\n        setEmailCheck(true);\n        \n    };\n\n\n    <ul>\n        {errors.map(error => <li key={error}>{error}</li>)}\n    </ul>\n\n    return (\n        // <ul>\n        //   {errors.map(error => <li key={error}>{error}</li>)}\n        // </ul>\n        <>\n        <div className='loginModal'>\n        {!emailCheck && <EmailCheck setEmail={setEmail} onEmailClick={onEmailClick} />}\n        {emailCheck===true && emailExists && <PasswordLogin email={email} setshowModal={setshowModal}/>}\n        {emailCheck===true && !emailExists && <PasswordSignUp email={email} setshowModal={setshowModal}/>}\n        </div>\n        </>\n    );\n}\n\nexport default LoginForm;","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/index.js",["259","260","261","262"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/SignupFormPage/index.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/EmailCheck.js",["263","264"],[],"import { useState,useEffect } from \"react\"\nimport './emailcheck.css'\nconst EmailCheck = ({setEmail,onEmailClick}) =>{\n        const [initialEmail,setInitialEmail] = useState('');\n        const [emailError,setEmailError] = useState('');\n        const [buttonColor,setButtonColor] = useState('');\n        const [fontColor,setFontColor] = useState('')\n        useEffect(()=>{\n        if (initialEmail.length) {\n            setButtonColor('white');\n        setFontColor('black')} else {\n            setButtonColor('');\n            setFontColor('');\n        } \n        }\n        ,[initialEmail]);\n        const validateEmail = (email) => {\n            const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n            return emailRegex.test(email);\n        }\n\n        const handleEmailSubmit = (event) =>{\n            event.preventDefault();\n            setEmailError('');\n            if (!validateEmail(initialEmail)){\n                setEmailError(\"That's not a valid email address. Please try again.\");\n                return;\n            }\n            onEmailClick(initialEmail);\n            setEmail(initialEmail);\n    \n        }\n        // const handleEmailClick = (event) =>{\n        //     setEmailError([]);\n\n        //     if(!validateEmail(event.target.value)){\n        //         emailError.push(\"That's not a valid email address. Please try again.\");\n                \n        //     }\n        // }\n        return (\n            <>\n            <div className='email-box'>\n                <div className='email-title'>mumblr</div>\n                <form className = 'email-form' onSubmit={handleEmailSubmit}>\n                <div className='email-instructions'><p>Enter your email to login or register:</p></div>\n                <input className= 'email-text' type='text' placeholder='Email' \n                    value={initialEmail} onChange={event=>setInitialEmail(event.target.value)} required\n                    />\n                \n                {<div>{emailError}</div>}\n                    <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='email-button' type='submit' >\n                    Next<i className=\"fa-solid fa-arrow-right icon\" style={{border: 'none', color: `${fontColor}` }}></i> \n                    </button>\n                </form>\n            </div>\n            </>\n        )\n}\nexport default EmailCheck;\n{/* <span>Next <i className=\"fa-solid fa-arrow-right\" style={{color:'#000000'}}></i> </span> */}","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordSignUp.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/passwordLogin.js",["265","266"],[],"import { useState, useEffect} from \"react\"\nimport './index.css'\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport './passwordLogin.css';\nconst PasswordLogin = ({email},{setshowModal}) =>{\n    const dispatch = useDispatch();\n    const [password,setPassword] = useState('');\n    const [errors,setErrors] = useState([]);\n    const [buttonColor,setButtonColor] = useState('');\n    const [fontColor,setFontColor] = useState('');\n    useEffect(()=>{\n        if (password.length){\n            setButtonColor('white');\n            setFontColor('black');\n        } else {\n            setButtonColor('');\n            setFontColor('');\n        }\n    },[password]);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setErrors([]);\n        return dispatch(sessionActions.login({email, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n\n            });\n    }\n    return (\n        <>\n             <div className='passwordlogin-box'>\n                <div className='password-title'>mumblr</div>\n                <form className = 'password-form' onSubmit={handleSubmit}>\n                <div className='password-instructions'><p>Welcome back to your corner of the internet.</p></div>\n                <input className= 'password-text' type='password' placeholder='Password' \n                    value={password} onChange={event=>setPassword(event.target.value)} required\n                    />\n                \n                    <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='password-button' type='submit' >\n                    Log in<i className=\"fa-solid fa-arrow-right icon\" style={{border: 'none', color: `${fontColor}` }}></i> \n                    </button>\n                </form>\n                <ul className='errors'>\n                    {errors.map(error => <li key={error}>{error}</li>)}\n                </ul>\n            </div>\n        </>\n    )\n\n}\n\nexport default PasswordLogin;","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/ProfileButton.js",["267","268"],[],"import './profilebutton.css';\nimport { useState, useEffect } from 'react';\nimport { NavLink,Link } from 'react-router-dom'\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport LoginFormModel from '../LoginFormModal';\nconst Profilebutton = () =>{\n// work on dropdown menu that will bring down menu\nconst user = useSelector(state=>state.session.user)\nconst dispatch = useDispatch();\nconst [showMenu,setShowMenu] = useState(false);\nlet menu;\nconst openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n}\n\nuseEffect(()=>{\n    if (!showMenu) return;\n    const closeMenu=()=>{\n        setShowMenu(false);\n    };\n    document.addEventListener('click',closeMenu);\n    return ()=> document.removeEventListener(\"click\",closeMenu);\n},[showMenu]);\n\nconst logout=(e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n};\n\nlet sessionLinks;\nif(user){\n    sessionLinks=(\n        \n        <ul className='profile-dropdown'>\n            <li className='dropdownlink'>\n                <NavLink to='./likes' className='menu-link'>\n                    <div className='icon'>\n                        <i className=\"fa-solid fa-heart heart icons\" ></i>\n                    </div>\n                    <div className='menu-text'>\n                        <span>Likes</span>\n                        <span>{user.postlikes}</span>\n                    </div>\n                </NavLink>\n                <NavLink to='./followers' className='menu-link'>\n                    <div className='icon'>\n                        <i className=\"fa-solid fa-user-plus heart icons\" ></i>\n                    </div>\n                    <div className='menu-text'>\n                        <span>Followers</span>\n                        <span>{user.followers}</span>\n                    </div>\n                </NavLink>\n            </li>\n         </ul>\n    );\n} else {\n    sessionLinks=(\n        <>\n            {/* will trigger a modal when it is ready */}\n\n            <NavLink to='/signup'>Sign In</NavLink>\n        </>\n    );\n};\n    \n    return (\n        <>\n\n        <div className='profile'>\n            <button onClick={openMenu} style={{ backgroundColor: 'transparent', border: 'none', boxShadow: 'none' }}>\n                <i className=\"fa-solid fa-user\" style={{color:'#696969'}}></i>\n            </button>\n        {showMenu && (\n            <div className='profile-menu'>\n                <div className='profile-title'>\n                <Link to={`/user/${user.id}`} className='account-link'>\n                    <h3 id='account'>Account</h3>\n                </Link>\n                    <button className='logout' onClick={e=>logout(e)}>Sign Out</button>\n                </div>\n                \n                {sessionLinks}\n            </div>\n        )}\n        </div>\n        </>\n    );\n}\n\nexport default Profilebutton;\n","/Users/vincentpham/Documents/mumblr/frontend/src/components/Navigation/PostButton.js",["269","270","271","272","273","274","275"],[],"import { Link } from 'react-router-dom';\nimport './navigation.css'\nimport { useState } from 'react';\nimport NewPost from '../posts/NewPost';\nimport NewTextModal from '../posts/textposts/NewTextPostModal';\nimport NewPhotoModal from '../posts/NewPhotoPostModal';\nimport { Route, Switch,useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nconst PostButton= ()=>{\n    let location = useLocation();\n    let background = location.state && location.state.background\n    return(\n        <>\n        <div>\n            <Link to='/new' className='post-button'>\n                <i className=\"fa-sharp fa-solid fa-pencil\" style={{color:'#696969'}}></i>\n            </Link>\n            \n        </div>\n        </>\n    )\n}\nexport default PostButton;","/Users/vincentpham/Documents/mumblr/frontend/src/components/LoginFormModal/index.js",["276"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/store/posts.js",["277","278"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/loggedout.js",["279","280","281"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/loggedin.js",["282","283","284"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/dashboard.js",["285","286","287","288","289"],[],"import { useSelector,useEffect } from \"react-redux\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport LoggedIn from \"./loggedin\";\nimport LoggedOut from \"./loggedout\";\nimport './dashboardnav.css';\nimport TodayDashboard from \"./today\";\nimport ForYouDashboard from \"./ForYou\";\nimport TrendingDashboard from \"./trending\";\nimport SpotLightDashboard from \"./Spotlight\";\nconst Dashboard = ({})=>{\n    const sessionUser = useSelector(state=> state.session.user)\n\n\n    return (\n        <>\n        <div className='dashboard-main'>\n            <LoggedOut />\n            {/* {sessionUser && <LoggedIn />}\n            {!sessionUser && <LoggedOut />} */}\n        </div>\n        <Switch>\n            <Redirect exact from=\"/explore\" to=\"/explore/today\" />\n\n            <Route path=\"/explore/today\">\n                <TodayDashboard />\n            </Route>\n            <Route path=\"/explore/trending\">\n                <TrendingDashboard />\n            </Route>\n            <Route exact path=\"/explore/spotlight\">\n                <SpotLightDashboard />\n            </Route>\n            {/* <Route exact path=\"/explore/foryou\">\n                <ForYouDashboard />\n            </Route>\n            <Route path=\"/explore/following\">\n                {/* render spotlight */}\n            {/* </Route> */} \n            <Route path=\"/\">\n                <TodayDashboard />\n            </Route>\n        </Switch>\n\n\n\n\n\n\n\n        \n        \n        </>\n    )\n    // if session null, show logged out dashboard\n    // if logged in, show logged in dashboard\n\n    //logged out will have posts made today, trending??, spotlight\n    //today will be posts reblogged by todayonmumblr account\n\n\n}\n\nexport default Dashboard;","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js",["290","291","292","293","294"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/showPost.js",["295","296","297","298"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostHeader.js",["299"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/index.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostText.js",["300","301"],[],"import './styling/posttext.css';\nimport { useState } from 'react';\nconst PostText = ({post}) => {\n    // need to check if post has a title\n    // if post has a title, then that will be the first child of post-paragraph and have bigger font\n    // const [photoCount,setPhotoCount]=useState(1);\n    const styles = {\n        fontSize: '1.625rem',\n        lineHeight: 1.3077,\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        minHeight: '1.5em',\n        marginBottom: '15px',\n      };\n    // const handlePhotoCount = () => {\n    //    if(photoCount<5)setPhotoCount((prevCount)=> prevCount+1);\n    // }\n    const breakdown = (post) => {\n        const array = post.body.split('\\r\\n');\n\n        return array.map((sentence,index)=>{\n        \n                switch (sentence) {\n                    case ('!@%^#^photo1'):\n                        // photoCount+=1;\n                        return(\n                            <div className='image-container'>\n                                <figure className='image-figure'>\n                                    <div className='image-box'>\n                                        <img id='1' src={post.photo1} alt='' className='post-image' ></img>\n                                    </div>\n                                </figure>\n                            </div>\n                        );\n                        case ('!@%^#^photo2'):\n                        return(\n                            <>\n                            <div className='image-container'>\n                                <figure className='image-figure'>\n                                    <div className='image-box'>\n                                        <img id='2' src={post.photo2} alt='' className='post-image' />\n                                    </div>\n                                </figure>\n                            </div>\n                            </>\n                        );\n                    case ('!@%^#^photo3'):\n                        return(\n                            <div className='image-container'>\n                                <figure className='image-figure'>\n                                    <div className='image-box'>\n                                        <img id='3'src={post.photo3} alt='' className='post-image' />\n                                    </div>\n                                </figure>\n                            </div>\n                        );\n                    case ('!@%^#^photo4'):\n                        return(\n                            <div className='image-container'>\n                                <figure className='image-figure'>\n                                    <div className='image-box'>\n                                        <img id='4' src={post.photo4} alt='' className='post-image' />\n                                    </div>\n                                </figure>\n                            </div>\n                        );\n                    default:\n                        return(\n                            <div key={index} className='post-paragraph'>\n                                <p className='textStrings'>{sentence}</p>\n                                <p></p>\n                            </div>\n                        )\n                }\n            })\n          \n    }\n\n    return (\n        <>\n            <div className='posttext-body'>\n            {/* <img src={post.photo1} alt='' className='post-image' /> */}\n                {post.title!=='' &&\n                <p className='post-paragraph'>\n                    <h1 style={{fontSize: '1.625rem',lineHeight: 1.3077 }}>{post.title}</h1>\n                </p>\n                }\n                {breakdown(post)}\n            </div>\n        </>\n    )\n\n}\n\nexport default PostText;","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPost.js",["302","303","304"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostCircle.js",["305","306"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostSelection.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/textposts/NewTextPost.js",["307","308","309","310"],[],"import { useSelector } from \"react-redux\"\nimport { useState, useRef,useEffect } from \"react\"\nimport { createPost } from \"../../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport NewPostInput from \"../NewPostInputs\";\nimport '../styling/newtextpost.css';\nconst NewTextPost = () => {\n    const [bodyCheck,setBodyCheck] = useState(true);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [paragraphs,setParagraphs] = useState({1:''});\n    const [photos,setPhotos]=useState({1:null,2:null,3:null,4:null});\n\n      // each photo will hold a file that will be rendered \n      //when a user uploads a photo, 1 will be populate, then 2, then 3, then 4\n\n      //during update, i will populate these based on the the photos in the state\n      //when a user removes the photo currenly populated in the hash\n      //example, if photo1 is currently being rendered in paragraph 3\n      //and they remove it, i will set photo1 to null\n      //if they add a photo else where, i will check for keys in the photo hash\n      //with null values and then update that key to have that file\n      //i will update the paragraph key to be an identifier for that photo\n      // example:\n      // photo1 was originally in pargraph2, users chooses to remove it and type in\n      // key downs update the paragraph automatically\n      // when a user removes, the photos[1] will be set to null\n      //so paragraph[2] will now be strings\n      // user updates a photo to paragraph[1], pragraph[1] will now contain identifier\n      // handlefile will check for empty nulls, first one it identifies, it was place the file there\n      // paragraph one will have something like photo1 identifer\n      //when i show the text, i will check for the photo being checked in the body text and then \n\n    const sessionUser = useSelector(state=>  state.session.user);\n    useEffect(()=>{\n        const textofpost = Object.values(paragraphs).filter((value)=> typeof value ==='string');\n        if(textofpost.some(paragraph=>paragraph.trim().length>0) ) {\n            setBodyCheck('');\n        } else {\n            setBodyCheck(true);\n        }\n    },[paragraphs]);\n    \n    const handleFile = (event) => {\n        // need to change logic to check for null keys-value pairs\n\n        //need data-type of the input to set paragraph to photo\n        const file = event.currentTarget.files[0];\n        const pindex=event.target.dataset.type;\n        // need pindex to target the current paragraph \n\n        //need to find the keys with values null\n\n        const nullPhotos = Object.keys(photos).filter((photonumber)=>photos[photonumber]===null);\n        const photoToFill = nullPhotos[0];\n        setPhotos({...photos,[photoToFill]:file});\n\n        setParagraphs({...paragraphs,[Object.keys(paragraphs).length+1]: '',[pindex]:`!@%^#^photo${photoToFill}`});\n\n        // this wil let my child component which key to pass to the handleFileRemove in my child component\n        // if its an update, i can get initial index when i check the inital value;\n\n        return photoToFill;\n    }\n\n    const handlePhotoRemove = (key,index) => {\n        setPhotos({...photos,[key]:null})\n        setParagraphs({...paragraphs,[index]:''})\n        //need to pass this down to the children\n    }\n    const handleTitleKeyDown = (event) => {\n        if (event.key==='Enter'){\n            setTimeout(()=>{\n                event.target.nextElementSibling.focus()\n            },0);\n        }\n    \n         setTitle(event.target.innerText);\n    }\n    const handleKeyDown = (event) => {\n    \n        if(event.key !== 'Enter' && event.key!=='ArrowDown' && event.key!=='ArrowUp'){\n            setTimeout(()=>{\n                const pindex = event.target.dataset.type\n            \n                setParagraphs({...paragraphs,[pindex]: event.target.innerText});\n            },0);\n        }\n  \n     \n      \n    \n        if (event.key==='Enter'){\n            event.preventDefault();\n            const newIndex = Object.keys(paragraphs).length+1;\n            setParagraphs({\n                ...paragraphs,\n                [newIndex]: ''\n            })\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                currentElement.nextElementSibling.querySelector('p').focus();\n            },10);\n            \n        }\n        if (event.key==='ArrowDown'){\n            event.preventDefault();\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if(currentElement.nextElementSibling && currentElement.nextElementSibling.querySelector('p') ) {\n                    const nextP = currentElement.nextElementSibling.querySelector('p');\n                    nextP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(nextP);\n                    range.collapse(false);\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            },10);\n            \n        }\n        if (event.key==='ArrowUp'){\n            event.preventDefault();\n\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if (!currentElement.previousElementSibling.matches('h1') && currentElement.previousElementSibling.querySelector('p')) {\n                    const prevP = currentElement.previousElementSibling.querySelector('p');\n                    prevP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(prevP);\n                    range.collapse(false); \n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            },10);\n            \n        }\n    }\n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('post[title]',title);\n        \n        const textState=Object.values(paragraphs).filter((paragraph)=>paragraph!=='');\n        formData.append('post[body]',textState.join('\\n'));\n        formData.append('post[author_id]',sessionUser.id);\n        //handle files\n        Object.keys(photos).forEach((key)=>{\n            let param = `post[photo${key}]`;\n            let photoIdentifier = `!@%^#^photo${key}`\n\n            if (Object.values(paragraphs).includes(photoIdentifier)&& photos[key]) {\n                formData.append(param,photos[key])\n            } else if (!Object.values(paragraphs).includes(photoIdentifier)&& photos[key]){\n                formData.append(param,null);\n            }\n            // if (photos[key]) formData.append(param,photos[key]);\n        }) \n        dispatch(createPost(formData));\n        history.go(-2);\n    }\n\n    const disableButton = () => {\n        return bodyCheck ? '' : 'disabled'\n    }\n\n    \nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className=\"post-username\">{sessionUser.username}</div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button className='post-options'>\n                        <i className='fa-solid fa-gear'></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                        <div className='text-box'>\n                            <div className='textbox-contents'>\n                                <h1 onKeyDown={event=>handleTitleKeyDown(event)} className=\"contentEdit text-title\" contentEditable='true'></h1>\n                                {Object.keys(paragraphs).map((paragraph,index)=>{\n                                return <NewPostInput handleKeyDown={handleKeyDown} index={index+1} handleFile={handleFile} photoState={photos} create={true} handlePhotoRemove={handlePhotoRemove}/>\n                                })}\n                               \n                            </div>\n                        </div>\n                    <div className='text-footer'>\n                        {/* make this button a div to avoid clashing with the submit button */}\n                        <button className='close-text' onClick={()=>history.go(-2)}>Close</button>\n                        <button disabled={bodyCheck} className='text-submit' onClick={handleSubmit}>Post Now</button>\n                    </div>\n                </div>\n\n            </div>\n        \n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewTextPost;","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/textposts/NewTextPostModal.js",["311","312","313","314","315","316","317"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPhotoPostModal.js",["318","319","320","321","322","323"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPhotoPost.js",["324","325","326"],[],"import { useSelector } from \"react-redux\"\nimport { useState, useRef,useEffect } from \"react\"\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport NewPostInput from \"./NewPostInputs\";\nconst NewPhotoPost = () => {\n    const [bodyCheck,setBodyCheck] = useState(true);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [paragraphs,setParagraphs] = useState({1:''});\n    const [photos,setPhotos]=useState({1:null,2:null,3:null,4:null});\n    const sessionUser = useSelector(state=>  state.session.user);\n    \n\n    useEffect(()=>{\n        const textofpost = Object.values(paragraphs).filter((value)=> typeof value ==='string' && !value.includes('!@%^#^photo'));\n        if(textofpost.some(paragraph=>paragraph.trim().length>0) ) {\n            setBodyCheck('');\n        } else {\n            setBodyCheck(true);\n        }\n    },[paragraphs]);\n\n    const handlePhotoRemove = (key,index) => {\n        setPhotos({...photos,[key]:null})\n        setParagraphs({...paragraphs,[index]:''})\n\n        //need to pass this down to the children\n    }\n    const handleFile = (event) => {\n        // need to change logic to check for null keys-value pairs\n\n        //need data-type of the input to set paragraph to photo\n        const file = event.currentTarget.files[0];\n        const pindex=event.target.dataset.type;\n        // need pindex to target the current paragraph \n\n        //need to find the keys with values null\n\n        const nullPhotos = Object.keys(photos).filter((photonumber)=>photos[photonumber]===null);\n        const photoToFill = nullPhotos[0];\n        setPhotos({...photos,[photoToFill]:file});\n\n        setParagraphs({...paragraphs,[Object.keys(paragraphs).length+1]: '',[pindex]:`!@%^#^photo${photoToFill}`});\n\n        \n       \n    }\n    const handleTitleKeyDown = (event) => {\n        if (event.key==='Enter'){\n            setTimeout(()=>{\n                event.target.nextElementSibling.focus()\n            },0);\n        }\n    \n         setTitle(event.target.innerText);\n    }\n    const handleKeyDown = (event) => {\n        \n    \n        if(event.key !== 'Enter' && event.key!=='ArrowDown' && event.key!=='ArrowUp'){\n            setTimeout(()=>{\n                const pindex = event.target.dataset.type\n            \n                setParagraphs({...paragraphs,[pindex]: event.target.innerText});\n            },0);\n        }\n  \n     \n      \n    \n        if (event.key==='Enter'){\n            event.preventDefault();\n            const newIndex = Object.keys(paragraphs).length+1;\n            setParagraphs({\n                ...paragraphs,\n                [newIndex]: ''\n            })\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                currentElement.nextElementSibling.querySelector('p').focus();\n            },10);\n            \n        }\n        if (event.key==='ArrowDown'){\n            event.preventDefault();\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if(currentElement.nextElementSibling && currentElement.nextElementSibling.querySelector('p') ) {\n                    const nextP = currentElement.nextElementSibling.querySelector('p');\n                    nextP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(nextP);\n                    range.collapse(false);\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            },10);\n            \n        }\n        if (event.key==='ArrowUp'){\n            event.preventDefault();\n\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if (!currentElement.previousElementSibling.matches('h1') && currentElement.previousElementSibling.querySelector('p')) {\n                    const prevP = currentElement.previousElementSibling.querySelector('p');\n                    prevP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(prevP);\n                    range.collapse(false); \n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            },10);\n            \n        }\n    }\n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('post[title]',title);\n        \n        const textState=Object.values(paragraphs).filter((paragraph)=>paragraph!=='');\n        formData.append('post[body]',textState.join('\\n'));\n        formData.append('post[author_id]',sessionUser.id);\n        //handle files\n        Object.keys(photos).forEach((key)=>{\n            let param = `post[photo${key}]`;\n            \n            if (photos[key]) formData.append(param,photos[key]);\n        })\n\n        dispatch(createPost(formData));\n        history.go(-2);\n    }\n\n    \nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className=\"post-username\">{sessionUser.username}</div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button className='post-options'>\n                        <i className='fa-solid fa-gear'></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                        <div className='text-box'>\n                            <div className='textbox-contents'>\n                                <h1 onKeyDown={event=>handleTitleKeyDown(event)} className=\"contentEdit text-title\" contentEditable='true'></h1>\n                                {Object.keys(paragraphs).map((paragraph,index)=>{\n                                if(index===0) return <NewPostInput form={'photo'} handleKeyDown={handleKeyDown} index={index} handleFile={handleFile} photoState={photos} create={true} handlePhotoRemove={handlePhotoRemove}/>\n                                return <NewPostInput handleKeyDown={handleKeyDown} index={index} handleFile={handleFile} photoState={photos} create={true}/>\n                                })}\n                               \n                            </div>\n                        </div>\n                    <div className='text-footer'>\n                        {/* make this button a div to avoid clashing with the submit button */}\n                        <button className='close-text' onClick={()=>history.go(-2)}>Close</button>\n                        <button disabled={bodyCheck} className='text-submit' onClick={handleSubmit}>Post Now</button>\n                    </div>\n                </div>\n\n            </div>\n        \n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewPhotoPost;","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPostInputs.js",["327","328","329","330","331","332","333"],[],"//this component will be called in each new text post depending on how many enters they pressed\n// depending on what opion is selected, it will rerender into a new form\n// default will be text\n// state variable will change depending on what is selected\n// each button, onClick will change that state variable to 'photo' or 'video'\n// this component will have those ready to render depending on the statevaraible\n// a menu will be displayed if it is focused on\nimport './newpostinputs.css';\nimport { useState, useRef,useEffect } from \"react\";\nconst NewPostInput = ({ form,handleKeyDown, index,handleFile, photoState,initialValue,create, handlePhotoRemove}) => {\n    const [type, setType] = useState('text');\n    const [showInputMenu, setInputMenu] = useState(create);\n    const [textIcon,setTextIcon] = useState('');\n    const [photoIcon,setPhotoIcon] = useState('');\n    const [videoIcon,setVideoIcon] = useState('');\n    const [linkIcon,setLinkIcon] = useState('');\n    const [focus,setFocus] = useState('');\n    const [photoPreview,setPhotoPreview]=useState(null);\n    const [initialText,setInitialText] = useState('');\n    const [initialTextset,setInitialTextset] = useState(false);\n    const [photoKey, setPhotoKey] = useState(0);\n    // this will let me know which key to set to null in the parent component\n    // parent component will have a handleRemoveFile that will turn the passed in key value pair to null\n\n    const pRef = useRef(null);\n    //this is for setting the menu to true, if the p tag is focused and not empty \n    useEffect(()=>{\n        if (form==='photo') setType('photo')\n    },[])\n\n    \n    useEffect(()=>{\n        if (!initialTextset){\n            if (initialValue && initialValue.includes('!@%^#^photo')){\n                let photoIndex=parseInt(initialValue[initialValue.length-1]); //this will grab the photo number\n                \n                setType('photo');\n                setPhotoPreview(photoState[photoIndex]);\n                setPhotoKey(photoIndex);\n            } else{\n                setInitialText(initialValue);\n            }\n        }\n        setInitialTextset(true);\n\n    },[])\n    const handleInput = (event) => {\n        setTimeout(()=>{\n            if(event.target.innerText.length>0) {       \n                setInputMenu(false)\n            } else setInputMenu(true);\n        },0);\n        \n        handleKeyDown(event);\n\n    }\n\n    // handle case if create is false\n    // i know what photo is being referenced, \n    \n    //\n\n\n    const handleFileInput = (event)=>{\n        //need to set photo preview and call the handleFile prop from parent\n        const photokey = handleFile(event);\n        setPhotoKey(photokey);\n        const file=event.currentTarget.files[0];\n        if (file){\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => setPhotoPreview(fileReader.result);\n        } else setPhotoPreview(null);\n    }\n    const ReturnToText =() =>{\n        return(\n            <div className='b2textcontainer'>\n            <button className='b2textbutton' onClick={()=>{\n                setType('text')\n                setInputMenu(true)}\n            }>\n                <i className='fa-solid fa-xmark'></i>\n            </button>\n            </div>\n        )\n    }\n    const handlePreviewClose =()=>{\n        handlePhotoRemove(photoKey,index);\n        setPhotoPreview(null);\n\n    }\n    const PhotoButton = () => {\n        let preview = null;\n        if (photoPreview) preview = \n        <>\n        <div className='preview-container'>\n\n            <img className='photoPreview' src={photoPreview} sizes='360' loading='lazy' draggable='false' alt='' />\n            <button className='removepreview' onClick={()=>handlePreviewClose()}>\n                <i className='fa-solid fa-xmark'></i>\n            </button>\n        </div>\n        </>\n        return (\n\n            <div className='photo-input-container'>\n                {preview}\n                {!photoPreview &&\n                <div className='photo-input-contents'>\n                    <button className='photofilebutton' onClick={()=>document.getElementById('photo-input').click()}>\n                    <i className=\"fa-solid fa-image fileicon\" ></i>\n                        <span className='filetext'>Upload Imag (Max: 4)</span>\n                    <input data-type={index} type='file' id='photo-input' onChange={event=>handleFileInput(event)}></input>\n                    </button>\n                    <ReturnToText />\n                </div>\n                }\n\n            </div>\n\n        )\n    }\n    // I need a options menu that will only populate if type is text, and user has not typed anything into the innerTag\n    //should i use a useRef that will track the innerText\n    return (\n        <>\n            <div className='input-container'>\n                <div className='inputBody'>\n                    {type === 'text' && <p ref={pRef} key={index} data-type={index} onKeyDown={(event) => handleInput(event)} onFocus={()=>setFocus('block')} onBlur={()=>setFocus('none')} id={`paragraph-${index}`} className='contentEdit text-paragraph' contentEditable='true'>{initialText}</p>}\n                    {type === 'photo' && <PhotoButton />}\n                </div>\n                {type ==='text' && showInputMenu &&\n                <div className='inputmenucontainer'>\n                    <div className='inputmenubody'>\n                        <div className='inputmenucontent'>\n                            {type !== 'text' && <button className='inputbuttons' onClick={() => setType('text')}>\n                                <i className={`fa-solid fa-a fa-lg inputicons ${textIcon}`} style={{ backgroundColor: 'transparent', color: 'RGB(var(--blue))' }}\n                                onMouseEnter={()=>setTextIcon('fa-bounce')} onMouseLeave={()=>setTextIcon('')}></i>\n                            </button>}\n                            {Object.values(photoState).filter((value)=>value===null).length>0 && <button className='inputbuttons' onClick={() => setType('photo')}>\n                                <i className={`fa-solid fa-image fa-lg inputicons ${photoIcon}`} style={{ backgroundColor: 'transparent', color: 'RGB(var(--red))' }}\n                                onMouseEnter={()=>setPhotoIcon('fa-bounce')} onMouseLeave={()=>setPhotoIcon('')}></i>\n                            </button>}\n                            {/* <button className='inputbuttons' onClick={() => setType('link')}>\n                                <i className= {`fa-solid fa-link fa-lg inputicons ${linkIcon}`} style={{ backgroundColor: 'transparent', color: 'RGB(var(--green))' }}\n                                onMouseEnter={()=>setLinkIcon('fa-bounce')} onMouseLeave={()=>setLinkIcon('')}></i>\n                            </button>\n                            <button className='inputbuttons' onClick={() => setType('link')}>\n                                <i className={`fa-solid fa-video fa-lg inputicons ${videoIcon}`} style={{ backgroundColor: 'transparent', color: 'RGB(var(--purple))' }}\n                                onMouseEnter={()=>setVideoIcon('fa-bounce')} onMouseLeave={()=>setVideoIcon('')}></i>\n                            </button> */}\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n        </>\n    )\n\n}\n\nexport default NewPostInput;","/Users/vincentpham/Documents/mumblr/frontend/src/components/users/index.js",["334","335","336","337","338","339","340"],[],"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport * as postActions from '../../store/posts';\nimport * as userActions from '../../store/user';\nimport { Route , Switch,useParams, NavLink,Link } from \"react-router-dom\";\nimport PostsDashboard from \"./posts\";\nimport './index.css';\nimport LikesDashboard from \"./likes\";\nconst UserShowPage =() =>{\n    const dispatch = useDispatch();\n    const params = useParams();\n    const [pageType,setPageType] =useState('false');\n\n\n\n\n    // need sessionUser to determine if it will be a \n    //user or otheruser render\n    // each user will have a profile Pic, and backgroundImage\n    // need to fetch user from backend\n    const user = useSelector(state=> state.users);\n    const sessionUser = useSelector(state=>state.session.user);\n    useEffect(()=>{\n        dispatch(userActions.fetchUser(params.userid))\n\n    },[params]);\n\n    \n    \n    const userPosts = useSelector(state=>state.posts);\n    // if (!user) return (null);\n    if (!userPosts) return(null);\n  \n\n    // if sessionUser matches userId passed in \n    // background image\n    // profile pic, username\n    // profile settings\n    // dashboard that will switch between posts, likes and following\n    // each post will have the ability to edit, delete\n    // ability to search posts\n\n\n    // when not matched with sessionUser\n    // has option to follow \n    // does not have option to edit or delete posts\n    \n    return (\n        \n        <>\n            <div className='show-container'>\n                <div className='show-body'>\n                    <div className='show-contents'>\n                        <div className='profile-container'>\n                            <header className='profile-header'>\n                                <div className='bgimage-frame'>\n                                    <img className='bgimage' src={user.background}/>\n                                </div>\n                                <div className='profile-bio-container'>\n                                    <div className='profilepic-container'>\n                                        <div className='profilepic-body'>\n                                            <div className='profilepic-contents'>\n                                                <div className='profilepic-frame'>\n                                                    <img className='userPic' src={user.profilepic}/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='bio-container'>\n                                        <h1 className='blogname'>{user.username}</h1>\n                                        <div className='bio-container'>\n                                            \n                                        </div>\n                                        <div className='header-buttons-contents'>\n                                        {/* make this button follow if sessionuser != user */}\n                                        { sessionUser && user.username === sessionUser.username &&\n                                            <button className='profileSettings'>\n                                                <span>\n                                                    <i className='fa-solid fa-gear'></i>\n                                                    Account Settings\n                                                </span>\n                                            </button>\n                                        }\n                                            { sessionUser && user.username !== sessionUser.username &&\n                                            <button className='profileSettings'>\n                                                <span>\n                                                    Follow\n                                                </span>\n                                            </button>\n                                            }\n                                            { !sessionUser &&\n                                            <button className='profileSettings'>\n                                                <span>\n                                                    Follow\n                                                </span>\n                                            </button>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </header>\n                            {/* navigation for which posts to see\n                            will be all,posts, likes, reblogs\n                            will be filtered in descending creation\n                            will switch between them with new routes */}\n                            <div className='profilenavigation'>\n                                \n                                <div className='profilelinks'>\n                                    <NavLink className='profilelink' to={`/user/${params.userid}/posts`}>Posts</NavLink>\n                                    <NavLink className='profilelink' to={`/user/${params.userid}/likes`}>Likes</NavLink>\n                                </div>\n                            </div>\n                            <div className='profile-meat'>\n                            <Switch>\n                                <Route path='/user/:userid/posts' >\n                                    <PostsDashboard posts={Object.values(userPosts)} />\n                                </Route>\n                                <Route path='/user/:userid/likes' >\n                                    <LikesDashboard posts={Object.values(userPosts)} />\n                                </Route>\n                            </Switch>\n                            </div>\n                        </div>\n                        <div className='show-contents-right'>\n\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </div>\n        </>\n\n    )\n    \n    //logic to show loading if posts is still being grabbed;\n}\n\nexport default UserShowPage;","/Users/vincentpham/Documents/mumblr/frontend/src/store/user.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/users/likes.js",["341","342","343","344","345","346"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/users/posts.js",["347","348","349","350","351","352"],[],"import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nconst PostsDashboard = ({posts}) =>{\n    const sessionUser = useSelector(state=>state.session.user);\n    const dispatch = useDispatch();\n  \n    // if (sessionUser) return <Redirect to=\"/\" />;\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    return (\n        <>\n        {posts.map ((post)=>{\n        return <ShowPost post={post} profile={true}/>})\n        }\n        </>\n    );\n}\nexport default PostsDashboard;","/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/UpdatePostModal.js",["353","354","355","356","357","358"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/UpdatePost.js",["359","360","361","362","363","364","365","366","367"],[],"import { useSelector } from \"react-redux\"\nimport { useState, useRef,useEffect, useCallback } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect,useParams } from \"react-router-dom\";\nimport { updatePost } from \"../../store/posts\";\nimport NewPostInput from \"./NewPostInputs\";\nimport { fetchUser } from \"../../store/user\";\n\nconst UpdatePost = () => {\n    const {postid} = useParams();\n    const [initialPost,setInitialPost]= useState({});\n    const [bodyCheck,setBodyCheck] = useState(true);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [paragraphs,setParagraphs] = useState({});\n    // each photo will hold a file that will be rendered \n    const [photos,setPhotos]=useState({1:null,2:null,3:null,4:null});\n    const [initialTitle,setInitialTitle] = useState((''));\n    const [initialTitleCheck, setInitialTitleCheck] = useState(false);\n    const [currentPhotoIndex,setCurrentPhotoIndex] = useState(1);\n    \n    // need to fetch the post using the params id in an useeffect\n    useEffect(()=>{\n        dispatch(fetchUser(sessionUser.username));\n    },[dispatch]);\n    const sessionUser = useSelector(state=>  state.session.user);\n    const post = useSelector(state=>state.posts[postid]);\n    \n    useEffect(()=>{\n        populateFields(post);\n    },[post])\n\n  \n\n    const populateFields = (post) => {\n        if (post){\n            const bodyParagraphs = post.body.split('\\r\\n');\n            const initialParagraphs = {};\n            const initialPhotos={1:post.photo1,2:post.photo2,3:post.photo3,4:post.photo4};\n            bodyParagraphs.forEach((paragraph,index)=>{\n                initialParagraphs[index+1]=paragraph;\n            });\n            setParagraphs(initialParagraphs);\n            setPhotos(initialPhotos);\n            \n            setInitialTitle(post.title);\n            setInitialTitleCheck(true);\n        }\n        \n    }\n    \n    useEffect(()=>{\n        if(Object.values(paragraphs).some(paragraph=>paragraph.trim().length>0) ) {\n        setBodyCheck('');\n        } else {\n            setBodyCheck(true);\n        }\n    },[paragraphs]);    \nif (!sessionUser) return <Redirect to=\"/\" />;\nconst handlePhotoRemove = (key,index) => {\n    setPhotos({...photos,[key]:'remove'})\n    setParagraphs({...paragraphs,[index]:''})\n    //need to pass this down to the children\n}\n\nconst handleFile = (event) => {\n        // need to change logic to check for null keys-value pairs\n        \n        //need data-type of the input to set paragraph to photo\n        const file = event.currentTarget.files[0];\n        const pindex=event.target.dataset.type;\n        // need pindex to target the current paragraph \n        \n        //need to find the keys with values null\n        \n        const nullPhotos = Object.keys(photos).filter((photonumber)=>photos[photonumber]===null || photos[photonumber]==='remove');\n        const photoToFill = nullPhotos[0];\n        setPhotos({...photos,[photoToFill]:file});\n\n        setParagraphs({...paragraphs,[Object.keys(paragraphs).length+1]: '',[pindex]:`!@%^#^photo${photoToFill}`});\n\n        return photoToFill;\n    }\n    const handleTitleKeyDown = (event) => {\n        \n    \n         setTimeout(()=>{\n            setTitle(event.target.innerText)\n         },0);\n    }\n    const handleKeyDown = (event) => {\n\n        \n        if(event.key !== 'Enter' && event.key!=='ArrowDown' && event.key!=='ArrowUp'){\n            setTimeout(()=>{\n                const pindex = event.target.dataset.type\n            \n                setParagraphs({...paragraphs,[pindex]: event.target.innerText});\n            },0);\n        }\n  \n     \n      \n    \n        if (event.key==='Enter'){\n            event.preventDefault();\n            const newIndex = Object.keys(paragraphs).length+1;\n            setParagraphs({\n                ...paragraphs,\n                [newIndex]: ''\n            })\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                currentElement.nextElementSibling.querySelector('p').focus();\n            },10);\n            \n        }\n        if (event.key==='ArrowDown'){\n            event.preventDefault();\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if(currentElement.nextElementSibling && currentElement.nextElementSibling.querySelector('p') ) {\n                    const nextP = currentElement.nextElementSibling.querySelector('p');\n                    nextP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(nextP);\n                    range.collapse(false);\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            },10);\n\n        }\n        if (event.key==='ArrowUp'){\n            event.preventDefault();\n\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if (!currentElement.previousElementSibling.matches('h1') && currentElement.previousElementSibling.querySelector('p')) {\n                    const prevP = currentElement.previousElementSibling.querySelector('p');\n                    prevP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(prevP);\n                    range.collapse(false); \n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            },10);\n            \n        }\n\n    }\n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('post[title]',title);\n        \n        const textState=Object.values(paragraphs).filter((paragraph)=>paragraph!=='');\n        formData.append('post[body]',textState.join('\\n'));\n        formData.append('post[author_id]',sessionUser.id);\n        //handle files\n        Object.keys(photos).forEach((key)=>{\n            let param = `post[photo${key}]`;\n            let photoIdentifier = `!@%^#^photo${key}`\n            if (Object.values(paragraphs).includes(photoIdentifier)&& photos[key]) {\n                formData.append(param,photos[key])\n            } \n            // else if (!Object.values(paragraphs).includes(photoIdentifier) && photos[key]){\n                // formData.append(param,'remove');\n            }\n            // formData.append(param,photos[key]);\n            // so if the new body does not paragrapg does not contain any values with\n            // the identifier for the photo, i need to pass in null to the backend\n            // to clear the photo attachment\n        )\n    \n\n\n        \n        \n        dispatch(updatePost(formData,postid));\n        history.go(-2);\n    }\n\n    const disableButton = () => {\n        return bodyCheck ? '' : 'disabled'\n    }\n\n    \nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className=\"post-username\">{sessionUser.username}</div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button className='post-options'>\n                        <i className='fa-solid fa-gear'></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                        <div className='text-box'>\n                            <div className='textbox-contents'>\n                                <h1 onKeyDown={event=>handleTitleKeyDown(event)} className=\"contentEdit text-title\" contentEditable='true'>{initialTitle}</h1>\n                                {Object.keys(paragraphs).map((paragraph,index)=>{\n                                return <NewPostInput handleKeyDown={handleKeyDown} index={index+1} handleFile={handleFile} photoState={photos} initialValue={paragraphs[paragraph]} create={false} handlePhotoRemove={handlePhotoRemove}/>\n                                })}\n                               \n                            </div>\n                        </div>\n                    <div className='text-footer'>\n                        {/* make this button a div to avoid clashing with the submit button */}\n                        <button className='close-text' onClick={()=>history.go(-1)}>Close</button>\n                        <button disabled={bodyCheck} className='text-submit' onClick={handleSubmit}>Update</button>\n                    </div>\n                </div>\n\n            </div>\n        \n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default UpdatePost;","/Users/vincentpham/Documents/mumblr/frontend/src/store/likes.js",["368"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/store/comments.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostFooter.js",["369","370","371","372","373","374","375","376","377","378","379"],[],"/Users/vincentpham/Documents/mumblr/frontend/src/store/follows.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/ForYou.js",[],[],"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/trending.js",["380","381","382","383","384","385"],[],"import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nconst TrendingDashboard = () =>{\n    const sessionUser = useSelector(state=>state.session.user);\n    const dispatch = useDispatch();\n    const randomPost = Math.floor(Math.random()*50)+1;\n    const posts = useSelector(state=>state.posts);\n    // can write a fetch that sorts by likes.count descending. limit 10\n    // select random ones\n   \n    useEffect(()=>{\n        dispatch(postActions.fetchPosts());\n    },[]);\n    const postsToShow=Object.values(posts);\n    const trendingPosts=[];\n    // if (sessionUser) return <Redirect to=\"/\" />;\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    return (\n        <>\n        {postsToShow.map ((post)=>{\n        return <ShowPost post={post} profile={false}/>})\n        }\n        </>\n    );\n\n\n\n\n}\n\nexport default TrendingDashboard;","/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/Spotlight.js",["386","387","388","389","390","391"],[],"import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nimport * as userActions from '../../store/user'\nconst SpotLightDashboard = () =>{\n    const sessionUser = useSelector(state=>state.session.user);\n    const dispatch = useDispatch();\n    const posts = useSelector(state=>state.posts);\n    // can write a fetch that sorts by likes.count descending. limit 10\n    // select random ones\n   \n    useEffect(()=>{\n        dispatch(userActions.fetchUser(10));\n    },[]);\n    const postsToShow=Object.values(posts);\n    const trendingPosts=[];\n    console.log(postsToShow);\n    // if (sessionUser) return <Redirect to=\"/\" />;\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    return (\n        <>\n        {postsToShow.map ((post)=>{\n        return <ShowPost post={post} profile={false}/>})\n        }\n        </>\n    );\n\n\n\n\n}\n\nexport default SpotLightDashboard;",{"ruleId":"392","severity":1,"message":"393","line":1,"column":20,"nodeType":"394","messageId":"395","endLine":1,"endColumn":29},{"ruleId":"392","severity":1,"message":"396","line":2,"column":25,"nodeType":"394","messageId":"395","endLine":2,"endColumn":33},{"ruleId":"392","severity":1,"message":"397","line":3,"column":8,"nodeType":"394","messageId":"395","endLine":3,"endColumn":22},{"ruleId":"392","severity":1,"message":"398","line":7,"column":8,"nodeType":"394","messageId":"395","endLine":7,"endColumn":22},{"ruleId":"392","severity":1,"message":"399","line":8,"column":8,"nodeType":"394","messageId":"395","endLine":8,"endColumn":22},{"ruleId":"392","severity":1,"message":"400","line":16,"column":9,"nodeType":"394","messageId":"395","endLine":16,"endColumn":20},{"ruleId":"392","severity":1,"message":"401","line":17,"column":10,"nodeType":"394","messageId":"395","endLine":17,"endColumn":18},{"ruleId":"392","severity":1,"message":"402","line":17,"column":20,"nodeType":"394","messageId":"395","endLine":17,"endColumn":31},{"ruleId":"392","severity":1,"message":"403","line":19,"column":7,"nodeType":"394","messageId":"395","endLine":19,"endColumn":17},{"ruleId":"392","severity":1,"message":"404","line":1,"column":56,"nodeType":"394","messageId":"395","endLine":1,"endColumn":69},{"ruleId":"392","severity":1,"message":"393","line":3,"column":24,"nodeType":"394","messageId":"395","endLine":3,"endColumn":33},{"ruleId":"392","severity":1,"message":"405","line":11,"column":11,"nodeType":"394","messageId":"395","endLine":11,"endColumn":19},{"ruleId":"392","severity":1,"message":"406","line":17,"column":19,"nodeType":"394","messageId":"395","endLine":17,"endColumn":28},{"ruleId":"392","severity":1,"message":"407","line":2,"column":15,"nodeType":"394","messageId":"395","endLine":2,"endColumn":23},{"ruleId":"392","severity":1,"message":"396","line":5,"column":10,"nodeType":"394","messageId":"395","endLine":5,"endColumn":18},{"ruleId":"392","severity":1,"message":"408","line":5,"column":20,"nodeType":"394","messageId":"395","endLine":5,"endColumn":27},{"ruleId":"392","severity":1,"message":"409","line":18,"column":11,"nodeType":"394","messageId":"395","endLine":18,"endColumn":22},{"ruleId":"410","severity":1,"message":"411","line":18,"column":38,"nodeType":"412","messageId":"413","endLine":18,"endColumn":39,"suggestions":"414"},{"ruleId":"415","severity":1,"message":"416","line":61,"column":1,"nodeType":"417","messageId":"418","endLine":61,"endColumn":97},{"ruleId":"392","severity":1,"message":"419","line":4,"column":8,"nodeType":"394","messageId":"395","endLine":4,"endColumn":17},{"ruleId":"392","severity":1,"message":"396","line":5,"column":10,"nodeType":"394","messageId":"395","endLine":5,"endColumn":18},{"ruleId":"392","severity":1,"message":"399","line":6,"column":8,"nodeType":"394","messageId":"395","endLine":6,"endColumn":22},{"ruleId":"392","severity":1,"message":"420","line":12,"column":5,"nodeType":"394","messageId":"395","endLine":12,"endColumn":9},{"ruleId":"392","severity":1,"message":"407","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":18},{"ruleId":"392","severity":1,"message":"421","line":4,"column":8,"nodeType":"394","messageId":"395","endLine":4,"endColumn":15},{"ruleId":"392","severity":1,"message":"422","line":5,"column":8,"nodeType":"394","messageId":"395","endLine":5,"endColumn":20},{"ruleId":"392","severity":1,"message":"423","line":6,"column":8,"nodeType":"394","messageId":"395","endLine":6,"endColumn":21},{"ruleId":"392","severity":1,"message":"424","line":7,"column":10,"nodeType":"394","messageId":"395","endLine":7,"endColumn":15},{"ruleId":"392","severity":1,"message":"425","line":7,"column":17,"nodeType":"394","messageId":"395","endLine":7,"endColumn":23},{"ruleId":"392","severity":1,"message":"403","line":10,"column":9,"nodeType":"394","messageId":"395","endLine":10,"endColumn":19},{"ruleId":"392","severity":1,"message":"424","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":15},{"ruleId":"392","severity":1,"message":"426","line":1,"column":21,"nodeType":"394","messageId":"395","endLine":1,"endColumn":35},{"ruleId":"392","severity":1,"message":"427","line":11,"column":7,"nodeType":"394","messageId":"395","endLine":11,"endColumn":24},{"ruleId":"392","severity":1,"message":"425","line":3,"column":19,"nodeType":"394","messageId":"395","endLine":3,"endColumn":25},{"ruleId":"392","severity":1,"message":"428","line":5,"column":12,"nodeType":"394","messageId":"395","endLine":5,"endColumn":22},{"ruleId":"392","severity":1,"message":"429","line":5,"column":23,"nodeType":"394","messageId":"395","endLine":5,"endColumn":36},{"ruleId":"392","severity":1,"message":"425","line":3,"column":19,"nodeType":"394","messageId":"395","endLine":3,"endColumn":25},{"ruleId":"392","severity":1,"message":"428","line":5,"column":12,"nodeType":"394","messageId":"395","endLine":5,"endColumn":22},{"ruleId":"392","severity":1,"message":"429","line":5,"column":23,"nodeType":"394","messageId":"395","endLine":5,"endColumn":36},{"ruleId":"392","severity":1,"message":"393","line":1,"column":22,"nodeType":"394","messageId":"395","endLine":1,"endColumn":31},{"ruleId":"392","severity":1,"message":"430","line":4,"column":8,"nodeType":"394","messageId":"395","endLine":4,"endColumn":16},{"ruleId":"392","severity":1,"message":"431","line":8,"column":8,"nodeType":"394","messageId":"395","endLine":8,"endColumn":23},{"ruleId":"432","severity":1,"message":"433","line":11,"column":20,"nodeType":"434","messageId":"435","endLine":11,"endColumn":22},{"ruleId":"392","severity":1,"message":"400","line":12,"column":11,"nodeType":"394","messageId":"395","endLine":12,"endColumn":22},{"ruleId":"392","severity":1,"message":"407","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":28},{"ruleId":"392","severity":1,"message":"396","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":18},{"ruleId":"392","severity":1,"message":"400","line":7,"column":11,"nodeType":"394","messageId":"395","endLine":7,"endColumn":22},{"ruleId":"392","severity":1,"message":"436","line":9,"column":11,"nodeType":"394","messageId":"395","endLine":9,"endColumn":21},{"ruleId":"437","severity":1,"message":"438","line":13,"column":7,"nodeType":"439","endLine":13,"endColumn":9,"suggestions":"440"},{"ruleId":"392","severity":1,"message":"407","line":5,"column":10,"nodeType":"394","messageId":"395","endLine":5,"endColumn":18},{"ruleId":"392","severity":1,"message":"393","line":5,"column":20,"nodeType":"394","messageId":"395","endLine":5,"endColumn":29},{"ruleId":"392","severity":1,"message":"441","line":7,"column":8,"nodeType":"394","messageId":"395","endLine":7,"endColumn":23},{"ruleId":"442","severity":1,"message":"443","line":25,"column":29,"nodeType":"444","endLine":25,"endColumn":63},{"ruleId":"437","severity":1,"message":"445","line":63,"column":7,"nodeType":"439","endLine":63,"endColumn":20,"suggestions":"446"},{"ruleId":"392","severity":1,"message":"407","line":2,"column":10,"nodeType":"394","messageId":"395","endLine":2,"endColumn":18},{"ruleId":"392","severity":1,"message":"447","line":7,"column":11,"nodeType":"394","messageId":"395","endLine":7,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":1,"column":18,"nodeType":"394","messageId":"395","endLine":1,"endColumn":27},{"ruleId":"392","severity":1,"message":"448","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":14},{"ruleId":"392","severity":1,"message":"449","line":4,"column":8,"nodeType":"394","messageId":"395","endLine":4,"endColumn":18},{"ruleId":"392","severity":1,"message":"450","line":5,"column":12,"nodeType":"394","messageId":"395","endLine":5,"endColumn":21},{"ruleId":"392","severity":1,"message":"451","line":5,"column":22,"nodeType":"394","messageId":"395","endLine":5,"endColumn":34},{"ruleId":"392","severity":1,"message":"452","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":26},{"ruleId":"392","severity":1,"message":"396","line":6,"column":10,"nodeType":"394","messageId":"395","endLine":6,"endColumn":18},{"ruleId":"392","severity":1,"message":"453","line":179,"column":11,"nodeType":"394","messageId":"395","endLine":179,"endColumn":24},{"ruleId":"454","severity":1,"message":"455","line":206,"column":33,"nodeType":"444","endLine":206,"endColumn":140},{"ruleId":"392","severity":1,"message":"456","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":21},{"ruleId":"392","severity":1,"message":"457","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":20},{"ruleId":"392","severity":1,"message":"458","line":8,"column":12,"nodeType":"394","messageId":"395","endLine":8,"endColumn":17},{"ruleId":"392","severity":1,"message":"459","line":8,"column":18,"nodeType":"394","messageId":"395","endLine":8,"endColumn":26},{"ruleId":"392","severity":1,"message":"460","line":9,"column":12,"nodeType":"394","messageId":"395","endLine":9,"endColumn":16},{"ruleId":"392","severity":1,"message":"461","line":9,"column":17,"nodeType":"394","messageId":"395","endLine":9,"endColumn":24},{"ruleId":"392","severity":1,"message":"400","line":10,"column":11,"nodeType":"394","messageId":"395","endLine":10,"endColumn":22},{"ruleId":"392","severity":1,"message":"456","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":21},{"ruleId":"392","severity":1,"message":"458","line":8,"column":12,"nodeType":"394","messageId":"395","endLine":8,"endColumn":17},{"ruleId":"392","severity":1,"message":"459","line":8,"column":18,"nodeType":"394","messageId":"395","endLine":8,"endColumn":26},{"ruleId":"392","severity":1,"message":"460","line":9,"column":12,"nodeType":"394","messageId":"395","endLine":9,"endColumn":16},{"ruleId":"392","severity":1,"message":"461","line":9,"column":17,"nodeType":"394","messageId":"395","endLine":9,"endColumn":24},{"ruleId":"392","severity":1,"message":"400","line":10,"column":11,"nodeType":"394","messageId":"395","endLine":10,"endColumn":22},{"ruleId":"392","severity":1,"message":"452","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":26},{"ruleId":"392","severity":1,"message":"396","line":6,"column":10,"nodeType":"394","messageId":"395","endLine":6,"endColumn":18},{"ruleId":"454","severity":1,"message":"455","line":176,"column":33,"nodeType":"444","endLine":176,"endColumn":140},{"ruleId":"392","severity":1,"message":"462","line":15,"column":12,"nodeType":"394","messageId":"395","endLine":15,"endColumn":21},{"ruleId":"392","severity":1,"message":"463","line":15,"column":22,"nodeType":"394","messageId":"395","endLine":15,"endColumn":34},{"ruleId":"392","severity":1,"message":"464","line":16,"column":12,"nodeType":"394","messageId":"395","endLine":16,"endColumn":20},{"ruleId":"392","severity":1,"message":"465","line":16,"column":21,"nodeType":"394","messageId":"395","endLine":16,"endColumn":32},{"ruleId":"392","severity":1,"message":"466","line":17,"column":12,"nodeType":"394","messageId":"395","endLine":17,"endColumn":17},{"ruleId":"437","severity":1,"message":"467","line":29,"column":7,"nodeType":"439","endLine":29,"endColumn":9,"suggestions":"468"},{"ruleId":"437","severity":1,"message":"469","line":46,"column":7,"nodeType":"439","endLine":46,"endColumn":9,"suggestions":"470"},{"ruleId":"392","severity":1,"message":"471","line":4,"column":13,"nodeType":"394","messageId":"395","endLine":4,"endColumn":24},{"ruleId":"392","severity":1,"message":"448","line":6,"column":44,"nodeType":"394","messageId":"395","endLine":6,"endColumn":48},{"ruleId":"392","severity":1,"message":"472","line":13,"column":12,"nodeType":"394","messageId":"395","endLine":13,"endColumn":20},{"ruleId":"392","severity":1,"message":"473","line":13,"column":21,"nodeType":"394","messageId":"395","endLine":13,"endColumn":32},{"ruleId":"437","severity":1,"message":"438","line":27,"column":7,"nodeType":"439","endLine":27,"endColumn":15,"suggestions":"474"},{"ruleId":"442","severity":1,"message":"443","line":58,"column":37,"nodeType":"444","endLine":58,"endColumn":85},{"ruleId":"442","severity":1,"message":"443","line":65,"column":53,"nodeType":"444","endLine":65,"endColumn":101},{"ruleId":"392","severity":1,"message":"393","line":2,"column":10,"nodeType":"394","messageId":"395","endLine":2,"endColumn":19},{"ruleId":"392","severity":1,"message":"407","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":28},{"ruleId":"392","severity":1,"message":"396","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":18},{"ruleId":"392","severity":1,"message":"471","line":5,"column":13,"nodeType":"394","messageId":"395","endLine":5,"endColumn":24},{"ruleId":"392","severity":1,"message":"400","line":7,"column":11,"nodeType":"394","messageId":"395","endLine":7,"endColumn":22},{"ruleId":"392","severity":1,"message":"405","line":8,"column":11,"nodeType":"394","messageId":"395","endLine":8,"endColumn":19},{"ruleId":"392","severity":1,"message":"393","line":2,"column":10,"nodeType":"394","messageId":"395","endLine":2,"endColumn":19},{"ruleId":"392","severity":1,"message":"407","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":28},{"ruleId":"392","severity":1,"message":"396","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":18},{"ruleId":"392","severity":1,"message":"471","line":5,"column":13,"nodeType":"394","messageId":"395","endLine":5,"endColumn":24},{"ruleId":"392","severity":1,"message":"400","line":7,"column":11,"nodeType":"394","messageId":"395","endLine":7,"endColumn":22},{"ruleId":"392","severity":1,"message":"405","line":8,"column":11,"nodeType":"394","messageId":"395","endLine":8,"endColumn":19},{"ruleId":"392","severity":1,"message":"456","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":21},{"ruleId":"392","severity":1,"message":"458","line":8,"column":12,"nodeType":"394","messageId":"395","endLine":8,"endColumn":17},{"ruleId":"392","severity":1,"message":"459","line":8,"column":18,"nodeType":"394","messageId":"395","endLine":8,"endColumn":26},{"ruleId":"392","severity":1,"message":"460","line":9,"column":12,"nodeType":"394","messageId":"395","endLine":9,"endColumn":16},{"ruleId":"392","severity":1,"message":"461","line":9,"column":17,"nodeType":"394","messageId":"395","endLine":9,"endColumn":24},{"ruleId":"392","severity":1,"message":"400","line":10,"column":11,"nodeType":"394","messageId":"395","endLine":10,"endColumn":22},{"ruleId":"392","severity":1,"message":"452","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":26},{"ruleId":"392","severity":1,"message":"475","line":2,"column":38,"nodeType":"394","messageId":"395","endLine":2,"endColumn":49},{"ruleId":"392","severity":1,"message":"476","line":12,"column":12,"nodeType":"394","messageId":"395","endLine":12,"endColumn":23},{"ruleId":"392","severity":1,"message":"477","line":12,"column":24,"nodeType":"394","messageId":"395","endLine":12,"endColumn":38},{"ruleId":"392","severity":1,"message":"478","line":21,"column":12,"nodeType":"394","messageId":"395","endLine":21,"endColumn":29},{"ruleId":"392","severity":1,"message":"479","line":22,"column":12,"nodeType":"394","messageId":"395","endLine":22,"endColumn":29},{"ruleId":"392","severity":1,"message":"480","line":22,"column":30,"nodeType":"394","messageId":"395","endLine":22,"endColumn":50},{"ruleId":"437","severity":1,"message":"481","line":27,"column":7,"nodeType":"439","endLine":27,"endColumn":17,"suggestions":"482"},{"ruleId":"392","severity":1,"message":"453","line":199,"column":11,"nodeType":"394","messageId":"395","endLine":199,"endColumn":24},{"ruleId":"483","severity":1,"message":"484","line":34,"column":105,"nodeType":"485","messageId":"435","endLine":34,"endColumn":107},{"ruleId":"392","severity":1,"message":"396","line":17,"column":16,"nodeType":"394","messageId":"395","endLine":17,"endColumn":24},{"ruleId":"392","severity":1,"message":"486","line":25,"column":12,"nodeType":"394","messageId":"395","endLine":25,"endColumn":20},{"ruleId":"392","severity":1,"message":"402","line":25,"column":22,"nodeType":"394","messageId":"395","endLine":25,"endColumn":33},{"ruleId":"392","severity":1,"message":"460","line":34,"column":12,"nodeType":"394","messageId":"395","endLine":34,"endColumn":16},{"ruleId":"392","severity":1,"message":"461","line":34,"column":17,"nodeType":"394","messageId":"395","endLine":34,"endColumn":24},{"ruleId":"392","severity":1,"message":"487","line":61,"column":19,"nodeType":"394","messageId":"395","endLine":61,"endColumn":25},{"ruleId":"392","severity":1,"message":"488","line":79,"column":11,"nodeType":"394","messageId":"395","endLine":79,"endColumn":30},{"ruleId":"442","severity":1,"message":"443","line":213,"column":41,"nodeType":"444","endLine":213,"endColumn":83},{"ruleId":"392","severity":1,"message":"489","line":291,"column":13,"nodeType":"394","messageId":"395","endLine":291,"endColumn":21},{"ruleId":"442","severity":1,"message":"443","line":301,"column":29,"nodeType":"444","endLine":301,"endColumn":92},{"ruleId":"442","severity":1,"message":"443","line":342,"column":41,"nodeType":"444","endLine":342,"endColumn":90},{"ruleId":"392","severity":1,"message":"407","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":28},{"ruleId":"392","severity":1,"message":"396","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":18},{"ruleId":"392","severity":1,"message":"400","line":7,"column":11,"nodeType":"394","messageId":"395","endLine":7,"endColumn":22},{"ruleId":"392","severity":1,"message":"436","line":9,"column":11,"nodeType":"394","messageId":"395","endLine":9,"endColumn":21},{"ruleId":"437","severity":1,"message":"438","line":16,"column":7,"nodeType":"439","endLine":16,"endColumn":9,"suggestions":"490"},{"ruleId":"392","severity":1,"message":"491","line":18,"column":11,"nodeType":"394","messageId":"395","endLine":18,"endColumn":24},{"ruleId":"392","severity":1,"message":"407","line":2,"column":20,"nodeType":"394","messageId":"395","endLine":2,"endColumn":28},{"ruleId":"392","severity":1,"message":"396","line":4,"column":10,"nodeType":"394","messageId":"395","endLine":4,"endColumn":18},{"ruleId":"392","severity":1,"message":"471","line":5,"column":13,"nodeType":"394","messageId":"395","endLine":5,"endColumn":24},{"ruleId":"392","severity":1,"message":"400","line":8,"column":11,"nodeType":"394","messageId":"395","endLine":8,"endColumn":22},{"ruleId":"437","severity":1,"message":"438","line":16,"column":7,"nodeType":"439","endLine":16,"endColumn":9,"suggestions":"492"},{"ruleId":"392","severity":1,"message":"491","line":18,"column":11,"nodeType":"394","messageId":"395","endLine":18,"endColumn":24},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'SignupFormPage' is defined but never used.","'TodayDashboard' is defined but never used.","'LoginFormModel' is defined but never used.","'sessionUser' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'background' is assigned a value but never used.","'createContext' is defined but never used.","'dispatch' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'useState' is defined but never used.","'NavLink' is defined but never used.","'handleLinks' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["493","494"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'csrfFetch' is defined but never used.","'menu' is defined but never used.","'NewPost' is defined but never used.","'NewTextModal' is defined but never used.","'NewPhotoModal' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'storeCSRFToken' is defined but never used.","'RECEIVE_USER_POST' is assigned a value but never used.","'currentTab' is assigned a value but never used.","'setCurrentTab' is assigned a value but never used.","'LoggedIn' is defined but never used.","'ForYouDashboard' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'randomPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["495"],"'UpdatePostModal' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'closeOptions'. Either include it or remove the dependency array.",["496"],"'styles' is assigned a value but never used.","'Link' is defined but never used.","'PostCircle' is defined but never used.","'isHovered' is assigned a value but never used.","'setIsHovered' is assigned a value but never used.","'useRef' is defined but never used.","'disableButton' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useDispatch' is defined but never used.","'createPost' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'body' is assigned a value but never used.","'setBody' is assigned a value but never used.","'videoIcon' is assigned a value but never used.","'setVideoIcon' is assigned a value but never used.","'linkIcon' is assigned a value but never used.","'setLinkIcon' is assigned a value but never used.","'focus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["497"],"React Hook useEffect has missing dependencies: 'initialTextset', 'initialValue', and 'photoState'. Either include them or remove the dependency array. If 'setInitialText' needs the current value of 'initialValue', you can also switch to useReducer instead of useState and read 'initialValue' in the reducer.",["498"],"'postActions' is defined but never used.","'pageType' is assigned a value but never used.","'setPageType' is assigned a value but never used.",["499"],"'useCallback' is defined but never used.","'initialPost' is assigned a value but never used.","'setInitialPost' is assigned a value but never used.","'initialTitleCheck' is assigned a value but never used.","'currentPhotoIndex' is assigned a value but never used.","'setCurrentPhotoIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sessionUser.username'. Either include it or remove the dependency array.",["500"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'loggedin' is assigned a value but never used.","'likeId' is assigned a value but never used.","'handleCommentDelete' is assigned a value but never used.","'response' is assigned a value but never used.",["501"],"'trendingPosts' is assigned a value but never used.",["502"],{"messageId":"503","fix":"504","desc":"505"},{"messageId":"506","fix":"507","desc":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"509","fix":"521"},{"desc":"509","fix":"522"},"removeEscape",{"range":"523","text":"524"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"525","text":"526"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [dispatch]",{"range":"527","text":"528"},"Update the dependencies array to be: [closeOptions, showOptions]",{"range":"529","text":"530"},"Update the dependencies array to be: [form]",{"range":"531","text":"532"},"Update the dependencies array to be: [initialTextset, initialValue, photoState]",{"range":"533","text":"534"},"Update the dependencies array to be: [dispatch, params]",{"range":"535","text":"536"},"Update the dependencies array to be: [dispatch, sessionUser.username]",{"range":"537","text":"538"},{"range":"539","text":"528"},{"range":"540","text":"528"},[672,673],"",[672,672],"\\",[543,545],"[dispatch]",[2198,2211],"[closeOptions, showOptions]",[1604,1606],"[form]",[2126,2128],"[initialTextset, initialValue, photoState]",[907,915],"[dispatch, params]",[1196,1206],"[dispatch, sessionUser.username]",[648,650],[643,645]]