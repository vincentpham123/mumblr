{"ast":null,"code":"import csrfFetch, { storeCSRFToken } from \"./csrf\";\n\n// consts \n\nconst RECEIVE_POST = \"api/RECEIVE_POST\";\nconst RECEIVE_POSTS = \"api/RECEIVE_POSTS\";\nconst REMOVE_POST = 'api/UPDATE_POST';\n\n// action types\n\nconst receivePost = post => ({\n  type: RECEIVE_POST,\n  post\n});\nconst receivePosts = posts => ({\n  type: RECEIVE_POSTS,\n  posts\n});\nconst deletePost = postId => ({\n  type: REMOVE_POST,\n  postId\n});\n\n// thunk actions\n\nconst fetchPosts = () => async dispatch => {\n  let response = await fetch('/api/posts');\n  const posts = await response.json();\n  dispatch(receivePosts(posts));\n  return posts;\n};\nconst fetchPost = postId => async dispatch => {\n  let response = await fetch(`/api/posts/${postId}`);\n  const post = await post.json();\n  dispatch(receivePost(post));\n  return post;\n};\nconst createPost = post => async dispatch => {\n  let newPost = await csrfFetch();\n};","map":{"version":3,"names":["csrfFetch","storeCSRFToken","RECEIVE_POST","RECEIVE_POSTS","REMOVE_POST","receivePost","post","type","receivePosts","posts","deletePost","postId","fetchPosts","dispatch","response","fetch","json","fetchPost","createPost","newPost"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/posts.js"],"sourcesContent":["import csrfFetch, { storeCSRFToken } from \"./csrf\";\n\n// consts \n\nconst RECEIVE_POST = \"api/RECEIVE_POST\";\nconst RECEIVE_POSTS = \"api/RECEIVE_POSTS\";\nconst REMOVE_POST = 'api/UPDATE_POST';\n\n// action types\n\n\nconst receivePost = (post) => ({\n    type: RECEIVE_POST,\n    post \n})\n\nconst receivePosts = (posts) => ({\n    type: RECEIVE_POSTS,\n    posts\n})\n\nconst deletePost = (postId) =>({\n    type: REMOVE_POST,\n    postId\n})\n\n\n// thunk actions\n\nconst fetchPosts = () => async(dispatch) =>{\n    let response = await fetch('/api/posts');\n\n    const posts = await response.json();\n    dispatch(receivePosts(posts));\n    return posts\n}\n\nconst fetchPost = (postId) => async(dispatch)=>{\n    let response = await fetch(`/api/posts/${postId}`);\n\n    const post = await post.json();\n    dispatch(receivePost(post));\n    return post;\n} \n\nconst createPost = (post) => async(dispatch) =>{\n    let newPost = await csrfFetch()\n}\n\n"],"mappings":"AAAA,OAAOA,SAAS,IAAIC,cAAc,QAAQ,QAAQ;;AAElD;;AAEA,MAAMC,YAAY,GAAG,kBAAkB;AACvC,MAAMC,aAAa,GAAG,mBAAmB;AACzC,MAAMC,WAAW,GAAG,iBAAiB;;AAErC;;AAGA,MAAMC,WAAW,GAAIC,IAAI,KAAM;EAC3BC,IAAI,EAAEL,YAAY;EAClBI;AACJ,CAAC,CAAC;AAEF,MAAME,YAAY,GAAIC,KAAK,KAAM;EAC7BF,IAAI,EAAEJ,aAAa;EACnBM;AACJ,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAIC,MAAM,KAAK;EAC3BJ,IAAI,EAAEH,WAAW;EACjBO;AACJ,CAAC,CAAC;;AAGF;;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EACvC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;EAExC,MAAMN,KAAK,GAAG,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;EACnCH,QAAQ,CAACL,YAAY,CAACC,KAAK,CAAC,CAAC;EAC7B,OAAOA,KAAK;AAChB,CAAC;AAED,MAAMQ,SAAS,GAAIN,MAAM,IAAK,MAAME,QAAQ,IAAG;EAC3C,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaJ,MAAO,EAAC,CAAC;EAElD,MAAML,IAAI,GAAG,MAAMA,IAAI,CAACU,IAAI,CAAC,CAAC;EAC9BH,QAAQ,CAACR,WAAW,CAACC,IAAI,CAAC,CAAC;EAC3B,OAAOA,IAAI;AACf,CAAC;AAED,MAAMY,UAAU,GAAIZ,IAAI,IAAK,MAAMO,QAAQ,IAAI;EAC3C,IAAIM,OAAO,GAAG,MAAMnB,SAAS,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}