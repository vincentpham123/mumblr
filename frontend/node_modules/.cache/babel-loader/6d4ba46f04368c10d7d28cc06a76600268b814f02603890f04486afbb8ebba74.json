{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/users/UserFollowDashoard.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as followActions from '../../store/follows';\nimport FollowShow from \"./UserFollowShow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserFollowDashboard = _ref => {\n  _s();\n  let {\n    type\n  } = _ref;\n  //type will determine if i grab followers or follows \n  const {\n    userId\n  } = useParams();\n  const [usersMap, setUsersMap] = useState([]);\n  const [moreUsers, setMoreUsers] = useState(true);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const observer = useRef();\n  const dispatch = useDispatch();\n  const lastUserRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    if (!moreUsers) return;\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && moreUsers) {\n        setPageNumber(state => state + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  });\n  useEffect(() => {\n    setUsersMap([]);\n    setLoading(true);\n    // dispatch(followActions.clearFollow());\n    if (type === 'follows') {\n      dispatch(followActions.getFollows(userid));\n    } else {\n      //fetch followers \n      dispatch(followActions.getFollowers(userid));\n    }\n  }, [type]);\n  const followState = useSelector(state => state.follows);\n  useEffect(() => {\n    setLoading(true);\n    setUsersMap(state => {\n      const existingFollowIds = state.map(follow => follow.id);\n      const newFollows = Object.values(followState).filter(follow => !existingFollowIds.includes(follow.id));\n      const newState = [];\n      [...state, ...newFollows].forEach(follow => {\n        newState.push(follow);\n      });\n      return newState;\n    });\n    setLoading(false);\n  }, [pageNumber]);\n  console.log(followState, type, userid);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"follow-dash-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"follow-dash-body\",\n        children: Object.values(followState).map((follow, index) => {\n          {/* return(\n              <div ref={lastUserRef} key={follow.id} className='likeslist-container'>\n                  <FollowShow id={follow.userId} type={type} />\n              </div>\n              ) */}\n          if (follow.followerId === userid) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: lastUserRef,\n              className: \"likeslist-container\",\n              children: /*#__PURE__*/_jsxDEV(FollowShow, {\n                id: follow.userId,\n                type: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this)\n            }, follow.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this);\n          }\n          if (follow.userId === userid) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: lastUserRef,\n              className: \"likeslist-container\",\n              children: /*#__PURE__*/_jsxDEV(FollowShow, {\n                id: follow.followerId,\n                type: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)\n            }, follow.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(UserFollowDashboard, \"cBAcRD16x+4CZHPAN4vMwH3N4Tg=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = UserFollowDashboard;\nexport default UserFollowDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserFollowDashboard\");","map":{"version":3,"names":["useParams","useState","useCallback","useEffect","useRef","useDispatch","useSelector","followActions","FollowShow","jsxDEV","_jsxDEV","Fragment","_Fragment","UserFollowDashboard","_ref","_s","type","userId","usersMap","setUsersMap","moreUsers","setMoreUsers","pageNumber","setPageNumber","loading","setLoading","observer","dispatch","lastUserRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","state","observe","getFollows","userid","getFollowers","followState","follows","existingFollowIds","map","follow","id","newFollows","Object","values","filter","includes","newState","forEach","push","console","log","children","className","index","followerId","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/users/UserFollowDashoard.js"],"sourcesContent":["import { useParams } from \"react-router-dom/cjs/react-router-dom.min\"\nimport { useState,useCallback,useEffect,useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as followActions from '../../store/follows';\nimport FollowShow from \"./UserFollowShow\";\n\nconst UserFollowDashboard = ({type}) =>{\n    //type will determine if i grab followers or follows \n    const {userId} = useParams();\n    const [usersMap,setUsersMap] = useState([]);\n    const [moreUsers,setMoreUsers] = useState(true);\n    const [pageNumber,setPageNumber] = useState(1);\n    const [loading,setLoading]=useState(true);\n    const observer = useRef();\n    const dispatch = useDispatch();\n    const lastUserRef = useCallback(node=>{\n        if(loading) return;\n        if (observer.current) observer.current.disconnect();\n        if(!moreUsers) return;\n\n        observer.current = new IntersectionObserver(entries=>{\n            if (entries[0].isIntersecting && moreUsers) {\n                setPageNumber(state=> state+1);\n            }\n        })\n        if (node)observer.current.observe(node);\n    })\n    useEffect(()=>{\n        setUsersMap([]);\n        setLoading(true);\n        // dispatch(followActions.clearFollow());\n        if (type==='follows'){\n            dispatch(followActions.getFollows(userid));\n        } else {\n            //fetch followers \n            dispatch(followActions.getFollowers(userid));\n        }\n    },[type])\n\n    const followState = useSelector(state=> state.follows);\n    useEffect(()=>{\n        setLoading(true);\n        setUsersMap(state=>{\n          \n            const existingFollowIds = state.map((follow)=>follow.id)\n            const newFollows = Object.values(followState).filter(\n                (follow)=> !existingFollowIds.includes(follow.id)\n            )\n            const newState=[];\n            [...state,...newFollows].forEach((follow)=>{\n                newState.push(follow)\n            })\n            return newState;\n        })\n        setLoading(false);\n    },[pageNumber])\n    console.log(followState,type,userid)\n    return(\n        <>\n        <div className='follow-dash-container'>\n            <div className='follow-dash-body'>\n                {Object.values(followState).map((follow,index)=>{\n                    {/* return(\n                        <div ref={lastUserRef} key={follow.id} className='likeslist-container'>\n                            <FollowShow id={follow.userId} type={type} />\n                        </div>\n                        ) */}\n                    if(follow.followerId===userid){\n                        return(\n                        <div ref={lastUserRef} key={follow.id} className='likeslist-container'>\n                            <FollowShow id={follow.userId} type={type} />\n                        </div>\n                        )\n                    } \n                    if (follow.userId===userid){\n                        return(\n                        <div ref={lastUserRef} key={follow.id} className='likeslist-container'>\n                            <FollowShow id={follow.followerId} type={type} />\n                        </div>\n                        )\n                    }\n                })\n                    \n                }\n\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default UserFollowDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}