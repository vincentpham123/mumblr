{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js\",\n  _s = $RefreshSig$();\nimport ShowPost from \"../posts/showPost\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodayDashboard = () => {\n  _s();\n  const sessionUser = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  useEffect(() => {\n    dispatch(postActions.fetchPosts());\n  }, []);\n  const postsToShow = Object.values(posts);\n  // const trendingPosts=postsToShow.sort(()=>.5-Math.random());\n  // let selected = trendingPosts.slice(0,10);\n\n  // if (sessionUser) return <Redirect to=\"/\" />;\n  //all Today dashboard will be in here\n  //select posts that were reblogged by \n  //todayonmumblr\n  // in seeding, need to have posts reblogged by todayonmumblr\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: postsToShow.map(post => {\n      return /*#__PURE__*/_jsxDEV(ShowPost, {\n        post: post,\n        profile: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(TodayDashboard, \"TcPKI1oOhnKE7XxtlQpGTlpWhIA=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = TodayDashboard;\nexport default TodayDashboard;\nvar _c;\n$RefreshReg$(_c, \"TodayDashboard\");","map":{"version":3,"names":["ShowPost","useEffect","useState","useDispatch","useSelector","Redirect","postActions","jsxDEV","_jsxDEV","Fragment","_Fragment","TodayDashboard","_s","sessionUser","state","session","user","dispatch","posts","fetchPosts","postsToShow","Object","values","children","map","post","profile","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js"],"sourcesContent":["import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nconst TodayDashboard = () =>{\n    const sessionUser = useSelector(state=>state.session.user);\n    const dispatch = useDispatch();\n    const posts = useSelector(state=>state.posts);\n    useEffect(()=>{\n        dispatch(postActions.fetchPosts());\n    },[]);\n    const postsToShow=Object.values(posts);\n    // const trendingPosts=postsToShow.sort(()=>.5-Math.random());\n    // let selected = trendingPosts.slice(0,10);\n    \n    // if (sessionUser) return <Redirect to=\"/\" />;\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    return (\n        <>\n        {postsToShow.map ((post)=>{\n        return <ShowPost post={post} profile={false}/>})\n        }\n        </>\n    );\n\n\n\n\n}\n\nexport default TodayDashboard;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjD,MAAMC,cAAc,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACxB,MAAMC,WAAW,GAAGT,WAAW,CAACU,KAAK,IAAEA,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC;EAC1D,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,KAAK,GAAGd,WAAW,CAACU,KAAK,IAAEA,KAAK,CAACI,KAAK,CAAC;EAC7CjB,SAAS,CAAC,MAAI;IACVgB,QAAQ,CAACX,WAAW,CAACa,UAAU,CAAC,CAAC,CAAC;EACtC,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,WAAW,GAACC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;EACtC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,oBACIV,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACCH,WAAW,CAACI,GAAG,CAAGC,IAAI,IAAG;MAC1B,oBAAOjB,OAAA,CAACR,QAAQ;QAACyB,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,CAAC;EAAC,gBAE9C,CAAC;AAMX,CAAC;AAAAlB,EAAA,CA3BKD,cAAc;EAAA,QACIP,WAAW,EACdD,WAAW,EACdC,WAAW;AAAA;AAAA2B,EAAA,GAHvBpB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}