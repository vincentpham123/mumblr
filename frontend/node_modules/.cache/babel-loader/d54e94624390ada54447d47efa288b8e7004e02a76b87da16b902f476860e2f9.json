{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTextPost = () => {\n  _s();\n  const [bodyCheck, setBodyCheck] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [paragraphs, setParagraphs] = useState(['']);\n\n  // will increase everytime enter is pressed\n  //need eventlistener for input of enter\n  //which will increase rows by 1\n  // will also need to increase the height of the text area\n  // will have options for photos, links, possibily videos\n  // need to add photos later after i get just the text creator to work\n\n  useEffect(() => {\n    setBodyCheckparagraphs.some(paragraph => {\n      paragraph.split(' ').length > 1;\n    });\n  }, [paragraphs]);\n  const sessionUser = useSelector(state => state.session.user);\n  const handleInput = (event, index) => {\n    const updatedContent = [...paragraphs];\n    updatedContent[index] = event.target.innerText;\n    setParagraphs(updatedContent);\n  };\n  const handleKeyDown = (event, index) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setParagraphs([...paragraphs, '']);\n      setTimeout(() => {\n        event.target.nextElementSibling.focus();\n      }, 0);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(createPost({\n      title,\n      body,\n      author_id: sessionUser.id\n    }));\n    history.go(-2);\n  };\n  const disableButton = () => {\n    return bodyCheck ? '' : 'disabled';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postheader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-username\",\n              children: sessionUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"post-options\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-gear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newtext-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newtext-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textbox-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"contentEdit text-title\",\n                contentEditable: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), paragraphs.map((paragraph, index) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  onKeyDown: (event, index) => handleKeyDown(event, index),\n                  id: `paragraph-${index}`,\n                  className: \"contentEdit text-paragraph\",\n                  contentEditable: \"true\",\n                  children: paragraph\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 40\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-text\",\n              onClick: () => history.go(-2),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !bodyCheck,\n              className: \"text-submit\",\n              onClick: handleSubmit,\n              children: \"Post Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n\n  // have an option for files, \n  //optional \n};\n_s(NewTextPost, \"sLP4L1dvMlP6FP/9ht3nNUqfjOQ=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = NewTextPost;\nexport default NewTextPost;\nvar _c;\n$RefreshReg$(_c, \"NewTextPost\");","map":{"version":3,"names":["useSelector","useState","useRef","useEffect","createPost","useDispatch","useHistory","Redirect","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTextPost","_s","bodyCheck","setBodyCheck","dispatch","history","title","setTitle","body","setBody","paragraphs","setParagraphs","setBodyCheckparagraphs","some","paragraph","split","length","sessionUser","state","session","user","handleInput","event","index","updatedContent","target","innerText","handleKeyDown","key","preventDefault","setTimeout","nextElementSibling","focus","handleSubmit","author_id","id","go","disableButton","children","className","username","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","map","onKeyDown","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport { useState, useRef,useEffect } from \"react\"\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nconst NewTextPost = () => {\n    const [bodyCheck,setBodyCheck] = useState(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [body,setBody] = useState('');\n    const [paragraphs,setParagraphs] = useState(['']);\n\n    // will increase everytime enter is pressed\n    //need eventlistener for input of enter\n    //which will increase rows by 1\n    // will also need to increase the height of the text area\n    // will have options for photos, links, possibily videos\n    // need to add photos later after i get just the text creator to work\n\n    useEffect(()=>{\n        setBodyCheckparagraphs.some(paragraph=>{\n            paragraph.split(' ').length>1\n        })\n    },[paragraphs])\n    const sessionUser = useSelector(state=>  state.session.user);\n    const handleInput = (event,index) => {\n        const updatedContent = [...paragraphs];\n        updatedContent[index] = event.target.innerText;\n        setParagraphs(updatedContent);\n    }\n\n    const handleKeyDown = (event,index) => {\n        if ( event.key==='Enter'){\n            event.preventDefault();\n            setParagraphs([...paragraphs,''])\n\n            setTimeout(()=>{\n                event.target.nextElementSibling.focus()\n            },0);\n                \n        }\n    }\n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        \n        dispatch(createPost({title,body,author_id: sessionUser.id}))\n        history.go(-2);\n    }\n\n    const disableButton = () => {\n        return bodyCheck ? '' : 'disabled'\n    }\nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className=\"post-username\">{sessionUser.username}</div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button className='post-options'>\n                        <i className='fa-solid fa-gear'></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                        <div className='text-box'>\n                            <div className='textbox-contents'>\n                                <h1 className=\"contentEdit text-title\" contentEditable='true'></h1>\n                                {paragraphs.map((paragraph,index)=>{\n                                return <p  onKeyDown={(event,index)=>handleKeyDown(event,index)} id={`paragraph-${index}`} className='contentEdit text-paragraph' contentEditable='true'>{paragraph}</p>\n                                })}\n                                {/* <div className = 'newText-inputs'>\n                                    <textarea \n                                    className='text-title'\n                                    value={title}\n                                    onChange={(event)=>setTitle(event.target.value)}\n                                    placeholder='title (optional)'\n                                    />\n                                    <textarea\n                                    className='text-body'\n                                    value={body}\n                                    onChange={(event)=>setBody(event.target.value)}\n                                    placeholder='Go ahead, put anything.'\n                                    />\n                                </div> */}\n                            </div>\n                        </div>\n                    <div className='text-footer'>\n                        {/* make this button a div to avoid clashing with the submit button */}\n                        <button className='close-text' onClick={()=>history.go(-2)}>Close</button>\n                        <button disabled={!bodyCheck} className='text-submit' onClick={handleSubmit}>Post Now</button>\n                    </div>\n                </div>\n\n            </div>\n        \n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewTextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}