{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js\",\n  _s = $RefreshSig$();\nimport ShowPost from \"../posts/showPost\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as postActions from \"../../store/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  let randomPost = Math.floor(Math.random * 50) + 1;\n  const [test, setTest] = useState('');\n  const post = useSelector(state => state.posts[2]);\n  //all Today dashboard will be in here\n  //select posts that were reblogged by \n  //todayonmumblr\n  // in seeding, need to have posts reblogged by todayonmumblr\n  useEffect(() => {\n    dispatch(postActions.fetchPost(2));\n  }, [dispatch]);\n  console.log(test);\n  return /*#__PURE__*/_jsxDEV(ShowPost, {\n    post: test\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(TodayDashboard, \"WVfe+gr0BnaJKc3hekY9OweeUUw=\", true, function () {\n  return [useDispatch];\n});\n_c = TodayDashboard;\nexport default TodayDashboard;\nvar _c;\n$RefreshReg$(_c, \"TodayDashboard\");","map":{"version":3,"names":["ShowPost","useEffect","useState","useDispatch","postActions","jsxDEV","_jsxDEV","TodayDashboard","_s","dispatch","randomPost","Math","floor","random","test","setTest","post","useSelector","state","posts","fetchPost","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js"],"sourcesContent":["import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as postActions from \"../../store/posts\";\nconst TodayDashboard = () =>{\n    const dispatch = useDispatch();\n    let randomPost = Math.floor(Math.random*50)+1\n    const [test,setTest] = useState('')\n    const post = useSelector(state=>state.posts[2])\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    useEffect(()=>{\n        dispatch(postActions.fetchPost(2));\n    },[dispatch]);\n    console.log(test);\n    return (\n        <ShowPost post={test} />\n    );\n\n\n\n\n}\n\nexport default TodayDashboard;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,cAAc,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,IAAIO,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,GAAC,EAAE,CAAC,GAAC,CAAC;EAC7C,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMc,IAAI,GAAGC,WAAW,CAACC,KAAK,IAAEA,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/C;EACA;EACA;EACA;EACAlB,SAAS,CAAC,MAAI;IACVQ,QAAQ,CAACL,WAAW,CAACgB,SAAS,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC,EAAC,CAACX,QAAQ,CAAC,CAAC;EACbY,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACjB,oBACIR,OAAA,CAACN,QAAQ;IAACgB,IAAI,EAAEF;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAMhC,CAAC;AAAAlB,EAAA,CApBKD,cAAc;EAAA,QACCJ,WAAW;AAAA;AAAAwB,EAAA,GAD1BpB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}