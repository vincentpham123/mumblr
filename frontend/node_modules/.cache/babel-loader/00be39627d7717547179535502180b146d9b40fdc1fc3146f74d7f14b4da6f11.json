{"ast":null,"code":"// consts\n\nimport csrfFetch from \"./csrf\";\nconst RECEIVE_USER = 'api/RECEIVEUSER';\nconst DELETE_USER = 'api/DELETEUSER';\nconst RECEIVE_USERS = 'api/RECEIVEUSERS';\n\n//action types\n\nconst receiveUser = user => ({\n  type: RECEIVE_USER,\n  user\n});\nconst receiveUsers = users => ({\n  type: RECEIVE_USERS,\n  users\n});\nconst deleteUser = userId => ({\n  type: DELETE_USER,\n  userId\n});\nexport const fetchUsers = () => async dispatch => {\n  let response = await fetch();\n};\nexport const fetchUser = username => async dispatch => {\n  debugger;\n  let response = await csrfFetch(`/api/users/${username}`);\n  if (response.ok) {\n    const user = await response.json();\n    dispatch(receiveUser(user));\n    return user;\n  }\n};\nexport const removeUser = userid => async dispatch => {\n  const response = await csrfFetch(`/api/users/${userid}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    //when a user deletes i will call logout and then destroy\n    dispatch(deleteUser(userid));\n  }\n};\n\n//users reducer\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_USER:\n      newState = action.user;\n      return newState;\n    case DELETE_USER:\n      delete newState[action.user.username];\n      return newState;\n    default:\n      return newState;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["csrfFetch","RECEIVE_USER","DELETE_USER","RECEIVE_USERS","receiveUser","user","type","receiveUsers","users","deleteUser","userId","fetchUsers","dispatch","response","fetch","fetchUser","username","ok","json","removeUser","userid","method","userReducer","state","arguments","length","undefined","action","newState"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/user.js"],"sourcesContent":["\n// consts\n\nimport csrfFetch from \"./csrf\";\n\nconst RECEIVE_USER = 'api/RECEIVEUSER'\nconst DELETE_USER = 'api/DELETEUSER'\nconst RECEIVE_USERS = 'api/RECEIVEUSERS'\n\n//action types\n\nconst receiveUser = (user) => ({\n    type: RECEIVE_USER,\n    user\n})\n\nconst receiveUsers = (users) =>({\n    type: RECEIVE_USERS,\n    users\n})\nconst deleteUser = (userId) => ({\n    type:DELETE_USER,\n    userId\n});\n\nexport const fetchUsers =() => async(dispatch) => {\n    let response = await fetch()\n}\nexport const fetchUser = (username) => async(dispatch) =>{\n    debugger\n    let response = await csrfFetch(`/api/users/${username}`)\n    if (response.ok){\n        const user = await response.json();\n        dispatch(receiveUser(user));\n        return user;\n    }\n\n}\n\nexport const removeUser = (userid) => async (dispatch) => {\n    const response = await csrfFetch(`/api/users/${userid}`,{\n        method: 'DELETE'\n    });\n    if (response.ok){\n        //when a user deletes i will call logout and then destroy\n        dispatch(deleteUser(userid))\n    }\n};\n\n//users reducer\n\nconst userReducer = (state={},action) => {\n    const newState={...state};\n    switch (action.type) {\n        case RECEIVE_USER:\n            newState = action.user;\n            return newState;\n            \n        case DELETE_USER:\n            delete newState[action.user.username];\n            return newState;\n        default:\n            return newState;\n    }\n\n}\n\nexport default userReducer;\n\n\n\n"],"mappings":"AACA;;AAEA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,YAAY,GAAG,iBAAiB;AACtC,MAAMC,WAAW,GAAG,gBAAgB;AACpC,MAAMC,aAAa,GAAG,kBAAkB;;AAExC;;AAEA,MAAMC,WAAW,GAAIC,IAAI,KAAM;EAC3BC,IAAI,EAAEL,YAAY;EAClBI;AACJ,CAAC,CAAC;AAEF,MAAME,YAAY,GAAIC,KAAK,KAAK;EAC5BF,IAAI,EAAEH,aAAa;EACnBK;AACJ,CAAC,CAAC;AACF,MAAMC,UAAU,GAAIC,MAAM,KAAM;EAC5BJ,IAAI,EAACJ,WAAW;EAChBQ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAEA,CAAA,KAAM,MAAMC,QAAQ,IAAK;EAC9C,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,CAAC;AAChC,CAAC;AACD,OAAO,MAAMC,SAAS,GAAIC,QAAQ,IAAK,MAAMJ,QAAQ,IAAI;EACrD;EACA,IAAIC,QAAQ,GAAG,MAAMb,SAAS,CAAE,cAAagB,QAAS,EAAC,CAAC;EACxD,IAAIH,QAAQ,CAACI,EAAE,EAAC;IACZ,MAAMZ,IAAI,GAAG,MAAMQ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCN,QAAQ,CAACR,WAAW,CAACC,IAAI,CAAC,CAAC;IAC3B,OAAOA,IAAI;EACf;AAEJ,CAAC;AAED,OAAO,MAAMc,UAAU,GAAIC,MAAM,IAAK,MAAOR,QAAQ,IAAK;EACtD,MAAMC,QAAQ,GAAG,MAAMb,SAAS,CAAE,cAAaoB,MAAO,EAAC,EAAC;IACpDC,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAIR,QAAQ,CAACI,EAAE,EAAC;IACZ;IACAL,QAAQ,CAACH,UAAU,CAACW,MAAM,CAAC,CAAC;EAChC;AACJ,CAAC;;AAED;;AAEA,MAAME,WAAW,GAAG,SAAAA,CAAA,EAAqB;EAAA,IAApBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,IAACG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChC,MAAME,QAAQ,GAAC;IAAC,GAAGL;EAAK,CAAC;EACzB,QAAQI,MAAM,CAACrB,IAAI;IACf,KAAKL,YAAY;MACb2B,QAAQ,GAAGD,MAAM,CAACtB,IAAI;MACtB,OAAOuB,QAAQ;IAEnB,KAAK1B,WAAW;MACZ,OAAO0B,QAAQ,CAACD,MAAM,CAACtB,IAAI,CAACW,QAAQ,CAAC;MACrC,OAAOY,QAAQ;IACnB;MACI,OAAOA,QAAQ;EACvB;AAEJ,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}