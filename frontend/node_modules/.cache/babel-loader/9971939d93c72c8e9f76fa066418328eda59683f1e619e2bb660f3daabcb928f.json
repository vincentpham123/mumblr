{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js\",\n  _s = $RefreshSig$();\nimport ShowPost from \"../posts/showPost\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as postActions from \"../../store/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDashboard = () => {\n  _s();\n  const sessionUser = useSelector(state => state.sessionUser);\n  const dispatch = useDispatch();\n  const randomPost = Math.floor(Math.random() * 50) + 1;\n  const [test, setTest] = useState('');\n  const post = useSelector(state => state.posts[2]);\n\n  //all Today dashboard will be in here\n  //select posts that were reblogged by \n  //todayonmumblr\n  // in seeding, need to have posts reblogged by todayonmumblr\n  useEffect(() => {\n    dispatch(postActions.fetchPost(2));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ShowPost, {\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(TodayDashboard, \"7pldnQ43jhcMgsN/UDwnoaRv2qc=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = TodayDashboard;\nexport default TodayDashboard;\nvar _c;\n$RefreshReg$(_c, \"TodayDashboard\");","map":{"version":3,"names":["ShowPost","useEffect","useState","useDispatch","useSelector","postActions","jsxDEV","_jsxDEV","TodayDashboard","_s","sessionUser","state","dispatch","randomPost","Math","floor","random","test","setTest","post","posts","fetchPost","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/today.js"],"sourcesContent":["import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as postActions from \"../../store/posts\";\nconst TodayDashboard = () =>{\n    const sessionUser = useSelector(state=>state.sessionUser);\n    const dispatch = useDispatch();\n    const randomPost = Math.floor(Math.random()*50)+1;\n    const [test,setTest] = useState('')\n    const post = useSelector(state=>state.posts[2])\n    \n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    useEffect(()=>{\n        dispatch(postActions.fetchPost(2));\n    },[]);\n    return (\n        <ShowPost post={post} />\n    );\n\n\n\n\n}\n\nexport default TodayDashboard;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,cAAc,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACxB,MAAMC,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACD,WAAW,CAAC;EACzD,MAAME,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC,GAAC,CAAC;EACjD,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMiB,IAAI,GAAGf,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE/C;EACA;EACA;EACA;EACAnB,SAAS,CAAC,MAAI;IACVW,QAAQ,CAACP,WAAW,CAACgB,SAAS,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC,EAAC,EAAE,CAAC;EACL,oBACId,OAAA,CAACP,QAAQ;IAACmB,IAAI,EAAEA;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAMhC,CAAC;AAAAhB,EAAA,CArBKD,cAAc;EAAA,QACIJ,WAAW,EACdD,WAAW,EAGfC,WAAW;AAAA;AAAAsB,EAAA,GALtBlB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}