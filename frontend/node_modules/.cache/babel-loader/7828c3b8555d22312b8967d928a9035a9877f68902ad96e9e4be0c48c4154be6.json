{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTextPost = () => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  // will increase everytime enter is pressed\n  //need eventlistener for input of enter\n  //which will increase rows by 1\n  // will also need to increase the height of the text area\n  // will have options for photos, links, possibily videos\n  // need to add photos later after i get just the text creator to work\n\n  const [rows, setRows] = useState(4);\n  const sessionUser = useSelector(state => state.session.user);\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(createPost({\n      title,\n      body,\n      author_id: sessionUser.id\n    }));\n    history.go(-2);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postheader-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-profile-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newtext-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"newtext-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"newText-inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"text-title\",\n                  value: title,\n                  onChange: event => setTitle(event.target.value),\n                  placeholder: \"title (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"text-body\",\n                  value: body,\n                  onChange: event => setBody(event.target.value),\n                  placeholder: \"Go ahead, put anything.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"closeText\",\n                  onClick: () => history.go(-2),\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-submit\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n\n  // have an option for files, \n  //optional \n};\n_s(NewTextPost, \"hn8EDyFy2pp+t3moCiotC2b/lGE=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = NewTextPost;\nexport default NewTextPost;\nvar _c;\n$RefreshReg$(_c, \"NewTextPost\");","map":{"version":3,"names":["useSelector","useState","createPost","useDispatch","useHistory","Redirect","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTextPost","_s","dispatch","history","title","setTitle","body","setBody","rows","setRows","sessionUser","state","session","user","handleSubmit","event","preventDefault","author_id","id","go","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","onClick","type","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport { useState } from \"react\"\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nconst NewTextPost = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [body,setBody] = useState('');\n    \n    // will increase everytime enter is pressed\n    //need eventlistener for input of enter\n    //which will increase rows by 1\n    // will also need to increase the height of the text area\n    // will have options for photos, links, possibily videos\n    // need to add photos later after i get just the text creator to work\n\n    const [rows,setRows] = useState(4);\n    const sessionUser = useSelector(state=>  state.session.user);\n    \n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        \n        dispatch(createPost({title,body,author_id: sessionUser.id}))\n        history.go(-2);\n    }\nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className='post-profile-pic'></div>\n                    <div className=\"post-username\"></div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button>\n                        {/* on click open modal with true and false\n                        if clicked set setshowoptionsmenu to true and render the modal*/}\n                    </button>\n                </div>\n            </div>\n            {/* start of the text area */}\n            <form onSubmit={handleSubmit}>\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                    <div className = 'newText-inputs'>\n                        <textarea \n                        className='text-title'\n                        value={title}\n                        onChange={(event)=>setTitle(event.target.value)}\n                        placeholder='title (optional)'\n                        />\n                        <textarea\n                        className='text-body'\n                        value={body}\n                        onChange={(event)=>setBody(event.target.value)}\n                        placeholder='Go ahead, put anything.'\n                        />\n                    </div>\n                    <div className='text-footer'>\n                        {/* make this button a  */}\n                        <button className='closeText' onClick={()=>history.go(-2)}>Close</button>\n                        <button className='text-submit' type='submit'>Submit</button>\n                    </div>\n                </div>\n\n            </div>\n            </form>\n        </div>\n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewTextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}