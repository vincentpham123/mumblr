{"ast":null,"code":"import csrfFetch from \"./csrf\";\nconst RECEIVE_FOLLOWS = '/api/RECEIVEFOLLOWS';\nconst DELETE_FOLLOW = '/api/DELETEFOLLOW';\nconst RECEIVE_FOLLOW = '/api/RECEIVEFOLLOW';\n\n//actions\n\nconst receiveFollows = follows => ({\n  type: RECEIVE_FOLLOWS,\n  follows\n});\nconst deleteFollow = followid => ({\n  type: DELETE_FOLLOW,\n  followid\n});\nconst receiveFollow = follow => ({\n  type: RECEIVE_FOLLOW,\n  follow\n});\n\n// thunk actions\n\nexport const createFollow = formData => async dispatch => {\n  let response = await csrfFetch('/api/follows', {\n    method: 'POST',\n    body: formData\n  });\n  if (response.ok) {\n    let data = await response.json();\n    dispatch(receiveFollow(data));\n    return data.id;\n  }\n};\nexport const removeFollow = followId => async dispatch => {\n  let response = await csrfFetch(`/api/follows/${followId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    dispatch(deleteFollow(followId));\n  }\n};","map":{"version":3,"names":["csrfFetch","RECEIVE_FOLLOWS","DELETE_FOLLOW","RECEIVE_FOLLOW","receiveFollows","follows","type","deleteFollow","followid","receiveFollow","follow","createFollow","formData","dispatch","response","method","body","ok","data","json","id","removeFollow","followId"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/follows.js"],"sourcesContent":["import csrfFetch from \"./csrf\";\n\nconst RECEIVE_FOLLOWS ='/api/RECEIVEFOLLOWS'\nconst DELETE_FOLLOW = '/api/DELETEFOLLOW'      \nconst RECEIVE_FOLLOW = '/api/RECEIVEFOLLOW'\n\n//actions\n\nconst receiveFollows = (follows) =>({\ntype: RECEIVE_FOLLOWS,\nfollows\n})\n\nconst deleteFollow = (followid) => ({\n    type: DELETE_FOLLOW,\n    followid\n});\n\nconst receiveFollow = (follow) =>({\n    type: RECEIVE_FOLLOW,\n    follow\n})\n\n\n// thunk actions\n\nexport const createFollow = (formData) => async dispatch => {\n    let response = await csrfFetch('/api/follows',{\n        method: 'POST',\n        body: formData\n    });\n    if (response.ok){\n        let data = await response.json();\n        dispatch(receiveFollow(data));\n        return data.id;\n    }\n}\nexport const removeFollow = (followId) => async dispatch => {\n    let response = await csrfFetch(`/api/follows/${followId}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      dispatch(deleteFollow(followId));\n    }\n  };\n\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,eAAe,GAAE,qBAAqB;AAC5C,MAAMC,aAAa,GAAG,mBAAmB;AACzC,MAAMC,cAAc,GAAG,oBAAoB;;AAE3C;;AAEA,MAAMC,cAAc,GAAIC,OAAO,KAAK;EACpCC,IAAI,EAAEL,eAAe;EACrBI;AACA,CAAC,CAAC;AAEF,MAAME,YAAY,GAAIC,QAAQ,KAAM;EAChCF,IAAI,EAAEJ,aAAa;EACnBM;AACJ,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAIC,MAAM,KAAK;EAC9BJ,IAAI,EAAEH,cAAc;EACpBO;AACJ,CAAC,CAAC;;AAGF;;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK,MAAMC,QAAQ,IAAI;EACxD,IAAIC,QAAQ,GAAG,MAAMd,SAAS,CAAC,cAAc,EAAC;IAC1Ce,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEJ;EACV,CAAC,CAAC;EACF,IAAIE,QAAQ,CAACG,EAAE,EAAC;IACZ,IAAIC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChCN,QAAQ,CAACJ,aAAa,CAACS,IAAI,CAAC,CAAC;IAC7B,OAAOA,IAAI,CAACE,EAAE;EAClB;AACJ,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK,MAAMT,QAAQ,IAAI;EACxD,IAAIC,QAAQ,GAAG,MAAMd,SAAS,CAAE,gBAAesB,QAAS,EAAC,EAAE;IACzDP,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAID,QAAQ,CAACG,EAAE,EAAE;IACfJ,QAAQ,CAACN,YAAY,CAACe,QAAQ,CAAC,CAAC;EAClC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}