{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n// import './passwordLogin.css';\n\nconst passwordSignUp = _ref => {\n  _s();\n  let {\n    email\n  } = _ref;\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [errors, setErrors] = useState([]);\n  const [buttonColor, setButtonColor] = useState('');\n  const [fontColor, setFontColor] = useState('');\n  useEffect(() => {\n    if (password.length) {\n      setButtonColor('white');\n      setFontColor('black');\n    } else {\n      setButtonColor('');\n      setFontColor('');\n    }\n  }, [password]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      email,\n      password\n    })).catch(async res => {\n      var _data;\n      let data;\n      try {\n        data = await res.clone().json();\n      } catch {\n        data = await res.text();\n      }\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  return {/* <div className='passwordlogin-box'>\n            <div className='password-title'>mumblr</div>\n            <form className = 'password-form' onSubmit={handleSubmit}>\n            <div className='password-instructions'><p>Welcome back to your corner of the internet.</p></div>\n            <input className= 'password-text' type='password' placeholder='Password' \n                value={password} onChange={event=>setPassword(event.target.value)} required\n                />\n            \n                <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='email-button' type='submit' >\n                Log in<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n                </button>\n            </form>\n            <ul>\n                {errors.map(error => <li key={error}>{error}</li>)}\n            </ul>\n          </div>\n          </> */};\n};\n_s(passwordSignUp, \"NorKu+KnLEE/gmXGyZWLlBldeBA=\", false, function () {\n  return [useDispatch];\n});\nexport default PasswordLogin;","map":{"version":3,"names":["useState","useEffect","sessionActions","csrfFetch","Redirect","useDispatch","passwordSignUp","_ref","_s","email","dispatch","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","buttonColor","setButtonColor","fontColor","setFontColor","length","handleSubmit","event","preventDefault","login","catch","res","_data","data","clone","json","text","statusText","PasswordLogin"],"sources":["/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormModal/passwordSignUp.js"],"sourcesContent":["import { useState, useEffect} from \"react\"\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n// import './passwordLogin.css';\n\nconst passwordSignUp = ({email}) =>{\n    const dispatch = useDispatch();\n    const [password,setPassword] = useState('');\n    const [confirmPassword,setConfirmPassword] = useState();\n    const [errors,setErrors] = useState([]);\n    const [buttonColor,setButtonColor] = useState('');\n    const [fontColor,setFontColor] = useState('');\n    useEffect(()=>{\n        if (password.length){\n            setButtonColor('white');\n            setFontColor('black');\n        } else {\n            setButtonColor('');\n            setFontColor('');\n        }\n    },[password]);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setErrors([]);\n        return dispatch(sessionActions.login({email, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n\n            });\n    }\n    return (\n        \n             {/* <div className='passwordlogin-box'>\n                <div className='password-title'>mumblr</div>\n                <form className = 'password-form' onSubmit={handleSubmit}>\n                <div className='password-instructions'><p>Welcome back to your corner of the internet.</p></div>\n                <input className= 'password-text' type='password' placeholder='Password' \n                    value={password} onChange={event=>setPassword(event.target.value)} required\n                    />\n                \n                    <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='email-button' type='submit' >\n                    Log in<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n                    </button>\n                </form>\n                <ul>\n                    {errors.map(error => <li key={error}>{error}</li>)}\n                </ul>\n            </div>\n        </> */}\n    )\n\n}\n\nexport default PasswordLogin;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC;;AAEA,MAAMC,cAAc,GAAGC,IAAA,IAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAK,CAAC,GAAAF,IAAA;EAC3B,MAAMG,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,eAAe,EAACC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACvD,MAAM,CAACe,MAAM,EAACC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACiB,WAAW,EAACC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACmB,SAAS,EAACC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC7CC,SAAS,CAAC,MAAI;IACV,IAAIU,QAAQ,CAACU,MAAM,EAAC;MAChBH,cAAc,CAAC,OAAO,CAAC;MACvBE,YAAY,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM;MACHF,cAAc,CAAC,EAAE,CAAC;MAClBE,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC,EAAC,CAACT,QAAQ,CAAC,CAAC;EACb,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtBR,SAAS,CAAC,EAAE,CAAC;IACb,OAAON,QAAQ,CAACR,cAAc,CAACuB,KAAK,CAAC;MAAChB,KAAK;MAAEE;IAAQ,CAAC,CAAC,CAAC,CACnDe,KAAK,CAAC,MAAOC,GAAG,IAAK;MAAA,IAAAC,KAAA;MAClB,IAAIC,IAAI;MACR,IAAI;QACAA,IAAI,GAAG,MAAMF,GAAG,CAACG,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACnC,CAAC,CAAC,MAAM;QACJF,IAAI,GAAG,MAAMF,GAAG,CAACK,IAAI,CAAC,CAAC;MAC3B;MAEA,KAAAJ,KAAA,GAAIC,IAAI,cAAAD,KAAA,eAAJA,KAAA,CAAMb,MAAM,EAAEC,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC,CAAC,KACpC,IAAIc,IAAI,EAAEb,SAAS,CAAC,CAACa,IAAI,CAAC,CAAC,CAAC,KAC5Bb,SAAS,CAAC,CAACW,GAAG,CAACM,UAAU,CAAC,CAAC;IAEpC,CAAC,CAAC;EACV,CAAC;EACD,OAES,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAhBc,CAgBC;AAGf,CAAC;AAAAzB,EAAA,CAxDKF,cAAc;EAAA,QACCD,WAAW;AAAA;AAyDhC,eAAe6B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}