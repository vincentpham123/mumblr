{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormModal/LoginForm.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom';\nimport csrfFetch from '../../store/csrf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  // grab user info from current logged in user\n  // most likely be blank\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [emailCheck, setEmailCheck] = useState(false);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 29\n  }, this);\n  const checkEmail = async email => {\n    const response = await csrfFetch('./api/check_email', {\n      method: \"POST\",\n      body: JSON.stringify(email)\n    });\n    const exists = await response.json();\n    return exists.exists;\n  };\n  const onEmailClick = event => {\n    setEmailCheck(checkEmail(event.target.value));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      var _data;\n      let data;\n      try {\n        data = await res.clone().json();\n      } catch {\n        data = await res.text();\n      }\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"PueNyLU70tlWLBWfipvX5qiVNW8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","sessionActions","Redirect","csrfFetch","jsxDEV","_jsxDEV","LoginForm","_s","dispatch","sessionUser","state","session","user","credential","setCredential","password","setPassword","errors","setErrors","emailCheck","setEmailCheck","to","fileName","_jsxFileName","lineNumber","columnNumber","checkEmail","email","response","method","body","JSON","stringify","exists","json","onEmailClick","event","target","value","handleSubmit","preventDefault","login","catch","res","_data","data","clone","text","statusText","id","onSubmit","children","map","error","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormModal/LoginForm.js"],"sourcesContent":["\nimport './index.css'\nimport React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom'\nimport csrfFetch from '../../store/csrf';\n\nconst LoginForm = ()=>{\n    const dispatch = useDispatch();\n    // grab user info from current logged in user\n    // most likely be blank\n    const sessionUser = useSelector(state=> state.session.user);\n    const [credential,setCredential] = useState('')\n    const [password,setPassword] = useState('')\n    const [errors,setErrors] = useState([]);\n    const [emailCheck,setEmailCheck] = useState(false);\n    if (sessionUser) return <Redirect to=\"/\" />;\n    const checkEmail = async (email) => {\n        const response = await csrfFetch('./api/check_email',{\n            method:\"POST\",\n            body: JSON.stringify(email)\n        });\n        const exists = await response.json();\n        return exists.exists;\n    }\n\n    const onEmailClick =(event)=>{\n        setEmailCheck(checkEmail(event.target.value));\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setErrors([]);\n\n        return dispatch(sessionActions.login({credential, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n\n            });\n    }\n\n\n\n    return(\n        <form id='login-form' onSubmit={handleSubmit}>\n            <ul>\n                {errors.map(error => <li key={error}>{error}</li>)}\n            </ul>\n            \n            \n        </form>\n    )\n}\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}