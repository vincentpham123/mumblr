{"ast":null,"code":"import csrfFetch from \"./csrf\";\nimport { createSelector } from \"reselect\";\nimport { receivePost } from \"./posts\";\nimport { receiveUsers } from \"./user\";\nconst RECEIVE_FOLLOWS = '/api/RECEIVEFOLLOWS';\nconst DELETE_FOLLOW = '/api/DELETEFOLLOW';\nconst RECEIVE_FOLLOW = '/api/RECEIVEFOLLOW';\nconst CLEAR_FOLLOW = '/api/CLEARFOLLOW';\n//actions\n\nexport const receiveFollows = follows => ({\n  type: RECEIVE_FOLLOWS,\n  follows\n});\nexport const deleteFollow = followId => ({\n  type: DELETE_FOLLOW,\n  followId\n});\nexport const receiveFollow = follow => ({\n  type: RECEIVE_FOLLOW,\n  follow\n});\nexport const clearFollow = () => ({\n  type: CLEAR_FOLLOW\n});\n\n// getter \nconst getFollowState = state => state.follows;\n// export const userFollowed = (sessionUser,postAuthorid) => state => {\n//   if (!sessionUser) return [];\n//   return state.follows ? Object.values(state.follows).filter((follow)=> follow.userId == postAuthorid && follow.followerId==sessionUser.id) : [];\n// }\nexport const userFollowed = (sessionUser, postAuthorid) => createSelector([getFollowState], getFollowState => {\n  if (!sessionUser) return [];\n  return getFollowState ? Object.values(getFollowState).filter(follow => follow.userId == postAuthorid && follow.followerId == sessionUser.id) : [];\n});\nexport const followsUser = (id, sessionUser, type) => state => {\n  if (!sessionUser) return [];\n  if (type === 'follows') {\n    return state.follows ? Object.values(state.follows).filter(follow => follow.userId === id && follow.followerId === sessionUser.id) : [];\n  } else {\n    return state.follows ? Object.values(state.follows).filter(follow => follow.followerId === sessionUser.id && follow.userId === id) : [];\n  }\n};\n// export const userFollowedSelector= createSelector(\n//   (state,postAuthorid)=>()\n// )\n// thunk actions\nexport const createFollow = follow => async dispatch => {\n  let response = await csrfFetch('/api/follows', {\n    method: 'POST',\n    body: JSON.stringify(follow)\n  });\n  if (response.ok) {\n    let data = await response.json();\n    dispatch(receiveFollow(data));\n    return data.id;\n  }\n};\nexport const removeFollow = followId => async dispatch => {\n  let response = await csrfFetch(`/api/follows/${followId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    // let data = await response.json();\n    dispatch(deleteFollow(followId));\n  }\n};\nexport const getFollows = userid => async dispatch => {\n  let response = await fetch(`/api/users/${userid}/follows`);\n  if (response.ok) {\n    let data = await response.json();\n    dispatch(receiveFollows(data.follows));\n    dispatch(receiveUsers(data.users));\n    return data;\n  }\n};\nexport const getFollowers = userid => async dispatch => {\n  let response = await fetch(`/api/users/${userid}/followers`);\n  if (response.ok) {\n    let data = await response.json();\n    dispatch(receiveFollows(data.followers));\n    dispatch(receiveUsers(data.users));\n    return data;\n  }\n};\nconst followsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_FOLLOWS:\n      return {\n        ...newState,\n        ...action.follows\n      };\n    case RECEIVE_FOLLOW:\n      newState[action.follow.id] = action.follow;\n      return newState;\n    case DELETE_FOLLOW:\n      delete newState[action.followId];\n      return newState;\n    case CLEAR_FOLLOW:\n      return {};\n    default:\n      return newState;\n  }\n};\nexport default followsReducer;","map":{"version":3,"names":["csrfFetch","createSelector","receivePost","receiveUsers","RECEIVE_FOLLOWS","DELETE_FOLLOW","RECEIVE_FOLLOW","CLEAR_FOLLOW","receiveFollows","follows","type","deleteFollow","followId","receiveFollow","follow","clearFollow","getFollowState","state","userFollowed","sessionUser","postAuthorid","Object","values","filter","userId","followerId","id","followsUser","createFollow","dispatch","response","method","body","JSON","stringify","ok","data","json","removeFollow","getFollows","userid","fetch","users","getFollowers","followers","followsReducer","arguments","length","undefined","action","newState"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/follows.js"],"sourcesContent":["import csrfFetch from \"./csrf\";\nimport { createSelector } from \"reselect\";\nimport { receivePost } from \"./posts\";\nimport { receiveUsers } from \"./user\";\nconst RECEIVE_FOLLOWS ='/api/RECEIVEFOLLOWS'\nconst DELETE_FOLLOW = '/api/DELETEFOLLOW'      \nconst RECEIVE_FOLLOW = '/api/RECEIVEFOLLOW'\nconst CLEAR_FOLLOW = '/api/CLEARFOLLOW'\n//actions\n\nexport const receiveFollows = (follows) =>({\ntype: RECEIVE_FOLLOWS,\nfollows\n})\n\nexport const deleteFollow = (followId) => ({\n    type: DELETE_FOLLOW,\n    followId\n});\n\nexport const receiveFollow = (follow) =>({\n    type: RECEIVE_FOLLOW,\n    follow\n})\nexport const clearFollow = ()=>({\n  type: CLEAR_FOLLOW\n})\n\n// getter \nconst getFollowState=state=>state.follows;\n// export const userFollowed = (sessionUser,postAuthorid) => state => {\n//   if (!sessionUser) return [];\n//   return state.follows ? Object.values(state.follows).filter((follow)=> follow.userId == postAuthorid && follow.followerId==sessionUser.id) : [];\n// }\nexport const userFollowed = (sessionUser,postAuthorid) => createSelector(\n  [getFollowState],\n  (getFollowState)=>{\n    if (!sessionUser) return [];\n    return getFollowState ? Object.values(getFollowState).filter((follow)=>follow.userId==postAuthorid && follow.followerId==sessionUser.id) : [];\n  }\n)\n\nexport const followsUser = (id,sessionUser,type) => state => {\n  if (!sessionUser) return [];\n  if (type==='follows'){\n    return state.follows ? Object.values(state.follows).filter((follow)=> follow.userId===id&& follow.followerId === sessionUser.id) : [];\n  } else{\n    return state.follows ? Object.values(state.follows).filter((follow)=> follow.followerId===sessionUser.id&& follow.userId === id) : [];\n  }\n}\n// export const userFollowedSelector= createSelector(\n//   (state,postAuthorid)=>()\n// )\n// thunk actions\nexport const createFollow = (follow) => async dispatch => {\n    let response = await csrfFetch('/api/follows',{\n        method: 'POST',\n        body: JSON.stringify(follow)\n    });\n    if (response.ok){\n        let data = await response.json();\n        dispatch(receiveFollow(data));\n        return data.id;\n    }\n}\nexport const removeFollow = (followId) => async dispatch => {\n    let response = await csrfFetch(`/api/follows/${followId}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      // let data = await response.json();\n      dispatch(deleteFollow(followId));\n    }\n  };\n\n  export const getFollows = (userid) => async dispatch =>{\n    let response = await fetch(`/api/users/${userid}/follows`)\n    if (response.ok){\n      let data = await response.json();\n      dispatch(receiveFollows(data.follows));\n      dispatch(receiveUsers(data.users));\n      return data;\n    }\n  }\n\n  export const getFollowers = (userid) => async dispatch =>{\n    let response = await fetch(`/api/users/${userid}/followers`)\n    if (response.ok){\n      let data = await response.json();\n      dispatch(receiveFollows(data.followers));\n      dispatch(receiveUsers(data.users));\n      return data;\n    }\n  }\n\n\n\n  const followsReducer = (state = {}, action) => {\n    let newState = { ...state };\n  \n    switch (action.type) {\n      case RECEIVE_FOLLOWS:\n        return { ...newState, ...action.follows };\n      \n      case RECEIVE_FOLLOW:\n        newState[action.follow.id] = action.follow;\n        return newState;\n  \n      case DELETE_FOLLOW:\n        delete newState[action.followId];\n        return newState;\n      case CLEAR_FOLLOW:\n        return {};\n      default:\n        return newState;\n    }\n  };\n  \n  export default followsReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}