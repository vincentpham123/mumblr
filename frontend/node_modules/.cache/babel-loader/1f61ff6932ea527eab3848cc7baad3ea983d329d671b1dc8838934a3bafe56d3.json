{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/Spotlight.js\",\n  _s = $RefreshSig$();\nimport ShowPost from \"../posts/showPost\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nimport * as userActions from '../../store/user';\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpotLightDashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const sessionUser = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const location = useLocation;\n  const [postsMap, setPostsMap] = useState([]);\n  const [change, setChange] = useState(false);\n  // can write a fetch that sorts by likes.count descending. limit 10\n  // select random ones\n\n  useEffect(() => {\n    dispatch(postActions.clearPosts());\n    setLoading(true);\n    dispatch(userActions.fetchUser(1, 'spotlight')).then(() => {\n      setLoading(false);\n    });\n    return () => {\n      dispatch(postActions.clearPosts());\n    };\n  }, []);\n  useEffect(() => {});\n  const postsToShow = Object.values(posts);\n  useEffect(() => {\n    setPostsMap([...postsToShow]);\n    return () => {\n      setPostsMap([]);\n    };\n  }, [postsToShow]);\n  const trendingPosts = [];\n  // if (sessionUser) return <Redirect to=\"/\" />;\n  //all Today dashboard will be in here\n  //select posts that were reblogged by \n  //todayonmumblr\n  // in seeding, need to have posts reblogged by todayonmumblr\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-load-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-load-body\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: 'white'\n          },\n          className: \"fa-solid fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), !change && postsMap.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postMain\",\n        children: /*#__PURE__*/_jsxDEV(ShowPost, {\n          post: post,\n          profile: false\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(SpotLightDashboard, \"zinXOyZp+AIx5oJG2HbC90XXviw=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = SpotLightDashboard;\nexport default SpotLightDashboard;\nvar _c;\n$RefreshReg$(_c, \"SpotLightDashboard\");","map":{"version":3,"names":["ShowPost","useEffect","useState","useDispatch","useSelector","Redirect","postActions","userActions","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotLightDashboard","_s","loading","setLoading","sessionUser","state","session","user","dispatch","posts","location","postsMap","setPostsMap","change","setChange","clearPosts","fetchUser","then","postsToShow","Object","values","trendingPosts","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","post","profile","id","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/Spotlight.js"],"sourcesContent":["import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\nimport * as userActions from '../../store/user'\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\nconst SpotLightDashboard = () =>{\n    const [loading,setLoading] = useState(true);\n    const sessionUser = useSelector(state=>state.session.user);\n    const dispatch = useDispatch();\n    const posts = useSelector(state=>state.posts);\n    const location = useLocation\n    const [postsMap,setPostsMap] = useState([]);\n    const [change,setChange] = useState(false);\n    // can write a fetch that sorts by likes.count descending. limit 10\n    // select random ones\n   \n    useEffect(()=>{\n        dispatch(postActions.clearPosts())\n        setLoading(true);\n        dispatch(userActions.fetchUser(1,'spotlight'))\n        .then(()=>{\n            setLoading(false);\n        })\n        return ()=>{\n            dispatch(postActions.clearPosts())\n        }\n    },[]);\n    useEffect(()=>{\n        \n    })\n    const postsToShow=Object.values(posts);\n    useEffect(()=>{\n        setPostsMap([...postsToShow]);\n        return ()=>{\n            setPostsMap([]);\n        }\n    },[postsToShow])\n    const trendingPosts=[];\n    // if (sessionUser) return <Redirect to=\"/\" />;\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    return (\n        <>\n        { loading &&\n            <div className='post-load-container'>\n                <div className='post-load-body'>\n                    <i style={{color:'white'}}className=\"fa-solid fa-spinner fa-spin\"></i>\n                </div>\n        </div>}\n        {!change && postsMap.map ((post)=>{\n        return (\n            <div className='postMain' key={post.id}>\n                <ShowPost key={post.id} post={post} profile={false}/>\n            </div>\n        )\n        })\n        }\n        </>\n    );\n\n\n\n\n}\n\nexport default SpotLightDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}