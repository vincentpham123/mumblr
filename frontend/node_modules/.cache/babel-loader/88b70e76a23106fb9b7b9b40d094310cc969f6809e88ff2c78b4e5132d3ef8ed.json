{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostFooter.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n//this component will contain \n// notes, a total of all likes, comments, and reblogs\n//notes will be a button that opens a tab menu\n// buttons for comment, reblog and like\n// those will open the menu which is defaulted on comments\n// comment will automatically open the menu since comment is the deafult \n// likes will trigger a like\n\n//in the menu, there will be tabs for comments, reblogs, and likes\n// comment tab will show comments, \n// reblogs will show reblogs \n// likes will show all the user likes\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport * as commentsActions from '../../store/comments';\nimport * as likesActions from '../../store/likes';\nimport './postsfooter.css';\nimport { fetchPost } from \"../../store/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostFooter = _ref => {\n  _s();\n  let {\n    post\n  } = _ref;\n  // this is to pass down logged in status to child components\n  const [loggedin, setLoggedIn] = useState(false);\n  const [showTabMenu, setShowTabMenu] = useState(false);\n  const [errors, setErrors] = useState({\n    like: '',\n    follow: ''\n  });\n  const [tabMenuSelection, setTabMenuSelection] = useState('comments');\n  const [body, setBody] = useState('');\n  // cons [isActive, setIsActive] = useState();\n  const dispatch = useDispatch();\n  // will have a postid passed in from parent\n  //can access the post from the state and grab data\n  const sessionUser = useSelector(state => state.session.user);\n  const liked = useSelector(likesActions.userLike(sessionUser.id, post.id));\n  // to remove any errors \n  useEffect(() => {\n    setTimeout(() => {\n      setErrors({\n        like: '',\n        follow: ''\n      });\n    }, 4000);\n  }, [errors]);\n  const handleLikeButton = event => {\n    event.preventDefault();\n    if (!sessionUser) {\n      setErrors(state => {\n        return {\n          ...state,\n          like: 'Login to Like!'\n        };\n      });\n    }\n    const like = {\n      post_id: post.id,\n      user_id: sessionUser.id\n    };\n    const likeId = dispatch(likesActions.createLike(like));\n  };\n  const handleUnlikeButton = event => {\n    event.preventDefault();\n    dispatch(likesActions.removeLike(liked[0].id));\n  };\n  const handleNotesButtonClick = event => {\n    if (!showTabMenu) {\n      setShowTabMenu(true);\n      dispatch(fetchPost(post.id));\n    } else {\n      setShowTabMenu(false);\n    }\n  };\n  const comments = useSelector(commentsActions.postComments(post.id));\n  const likes = useSelector(likesActions.postLikes(post.id));\n\n  // const FooterButtons = () => {\n  //     // will contain 2 buttons(3 if time)\n  //     return (\n  //         <div className='footerbuttons-container'>\n  //             <div className='footbutton-container'>\n  //                 <button className='commentbutton' onClick={() => setShowTabMenu(true)}>\n  //                     <i className=\"fa-regular fa-comment\"></i>\n  //                 </button>\n  //             </div>\n  //             <div className='footbutton-container'>\n  //                 {liked.length>0 && <button className={`likesbutton  true`} onClick={event => handleUnlikeButton(event)}>\n  //                     <i className=\"fa-solid fa-heart\"></i>\n  //                 </button>\n  //                 }\n  //                 {liked.length===0 &&\n  //                 <button className={`likesbutton false `} onClick={event => handleLikeButton(event)}>\n  //                     <i className=\"fa-solid fa-heart\"></i>\n  //                 </button>\n  //                 }\n  //                 { errors.like &&\n  //                 <div className='like-errors'>\n  //                     <span>\n  //                         {errors.like}\n  //                     </span>\n  //                 </div>\n  //                 }\n  //             </div>\n\n  //         </div>\n  //     )\n  // }\n\n  const Likes = _ref2 => {\n    let {\n      likerpic,\n      likerusername,\n      liker_id\n    } = _ref2;\n    // will have a useSelector to pull likes from the state\n    //will map over the likers for the post and render\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likeslist-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"likeslist-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likeslist-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liker-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"liker-profilepic-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"liker-profilepic-body\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"liker-link\",\n                  to: `/user/${liker_id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"liker-pic\",\n                    src: likerpic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"liker-information\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"liker-username\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: likerusername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"userFollow\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Follow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postfoot-container\",\n      children: /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"postfoot-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postfootbuttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(NotesButtons, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FooterButtons, {\n            post: post,\n            errors: errors,\n            handleLikeButton: handleLikeButton,\n            handleUnlikeButton: handleUnlikeButton,\n            setShowTabMenu: setShowTabMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posttabmenu-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postnavmenu-body\",\n            children: [showTabMenu && /*#__PURE__*/_jsxDEV(FooterTabsMenu, {\n              post: post,\n              setTabMenuSelection: setTabMenuSelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 45\n            }, this), showTabMenu && tabMenuSelection === 'comments' && /*#__PURE__*/_jsxDEV(CommentTextArea, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 80\n            }, this), showTabMenu && tabMenuSelection === 'comments' && comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-area\",\n              children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comments, {\n                username: comment.commenter.username,\n                profilepic: comment.commenter.profilepic,\n                body: comment.body,\n                id: comment.commenter.id,\n                comment_id: comment.id\n              }, comment.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), showTabMenu && tabMenuSelection === 'likes' && likes.map(like => {\n              return /*#__PURE__*/_jsxDEV(Likes, {\n                likerpic: like.liker.profilepic,\n                likerusername: like.liker.username,\n                liker_id: like.liker.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 44\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PostFooter, \"EQJqPkt1/kafEOHahaG8NPSFiEU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = PostFooter;\nconst CommentTextArea = _ref3 => {\n  _s2();\n  let {\n    post\n  } = _ref3;\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [body, setBody] = useState('');\n  const handleCommentSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('comment[body]', body);\n    formData.append('comment[user_id]', sessionUser.id);\n    formData.append('comment[post_id]', post.id);\n    let response = dispatch(commentsActions.createComment(formData));\n    setBody('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sessionUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commenttext-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commenttext-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-profile-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profilepic-frame1\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"reply-profilepic\",\n              src: sessionUser.profilepic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textarea-container\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: body,\n              onChange: event => setBody(event.target.value),\n              placeholder: \"type here\",\n              maxLength: \"475\",\n              rows: \"1\",\n              className: \"reply-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleCommentSubmit(event),\n            className: \"reply-button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }, this)\n  }, void 0, false);\n};\n_s2(CommentTextArea, \"QpuTMlfftxqW/BLJXuCz7mVl5wQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = CommentTextArea;\nexport default PostFooter;\nconst Comments = _ref4 => {\n  _s3();\n  let {\n    comment_id,\n    id,\n    username,\n    profilepic,\n    body\n  } = _ref4;\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const handleCommentDelete = event => {\n    event.preventDefault();\n    dispatch(commentsActions.removeComment(comment_id));\n  };\n  // need to take in commenterusername, commenter profilepic, and comment body\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentsshow-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commenter-profilepic\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commenter-profilepic-frame\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/user/${id}`,\n                  className: \"commenterlink\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"commenterimage\",\n                    src: profilepic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commenttext-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commenter-username\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"commenter-username-text\",\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"replies-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reply-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reply-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"reply\",\n                      children: [\" \", body]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), sessionUser && sessionUser.id === id && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment-delete\",\n          onClick: event => handleCommentDelete(event),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-dumpster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s3(Comments, \"nFBhheYJvdsZZh9fWooJ3YO5e9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c3 = Comments;\nconst NotesButtons = _ref5 => {\n  _s4();\n  let {\n    post\n  } = _ref5;\n  const [showTabMenu, setShowTabMenu] = useState(false);\n  const dispatch = useDispatch();\n  const handleNotesButtonClick = event => {\n    if (!showTabMenu) {\n      setShowTabMenu(true);\n      dispatch(fetchPost(post.id));\n    } else {\n      setShowTabMenu(false);\n    }\n  };\n  // depending on if this was clicked or not will change what is in the button contents\n  // this button is strictly for close and opening the tabs menu\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notebutton-container\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"notebutton-body\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notebutton-contents\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notesbutton\",\n          onClick: () => handleNotesButtonClick(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notesbutton-body\",\n            children: [!showTabMenu && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"shownotesbutton-container\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  clasName: \"show-notes-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"show-notes-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"show-notes-text\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"notes-count\",\n                        children: post.commentcount + post.likescount\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 53\n                      }, this), \"notes\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this)\n            }, void 0, false), showTabMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notesbutton-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notesbutton-text\",\n                children: \"Close Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 9\n  }, this);\n};\n_s4(NotesButtons, \"hP90Ed93WWPLU6ytQK+TY7SdZzs=\", false, function () {\n  return [useDispatch];\n});\n_c4 = NotesButtons;\nconst FooterTabsMenu = _ref6 => {\n  let {\n    post,\n    setTabMenuSelection\n  } = _ref6;\n  // this will contain the tabs for the menu\n  // it will have 2 separate tabs depending on which one is clicked\n  // one will render the comments from the post using the postId and gathering the comments\n  // the other will render users who likes, which will be gathered from the likes in the state\n  // where the post_id matches the post_id in likes state \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tabsmenu-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabsmenu-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabsmenu-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'tabnavbutton',\n          onClick: () => setTabMenuSelection('comments'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-regular fa-comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tabnavbutton-contents\",\n            children: post.commentcount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tabnavbutton\",\n          onClick: () => setTabMenuSelection('likes'),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tabnavbutton-contents\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-heart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this), post.likescount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 9\n  }, this);\n};\n_c5 = FooterTabsMenu;\nconst FooterButtons = _ref7 => {\n  _s5();\n  let {\n    post,\n    errors,\n    setShowTabMenu,\n    handleLikeButton,\n    handleUnlikeButton\n  } = _ref7;\n  const sessionUser = useSelector(state => state.session.user);\n  const liked = useSelector(likesActions.userLike(sessionUser.id, post.id));\n\n  // will contain 2 buttons(3 if time)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footerbuttons-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footbutton-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"commentbutton\",\n        onClick: () => setShowTabMenu(true),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-regular fa-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footbutton-container\",\n      children: [liked.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `likesbutton  true`,\n        onClick: event => handleUnlikeButton(event),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-heart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 36\n      }, this), liked.length === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `likesbutton false `,\n        onClick: event => handleLikeButton(event),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-heart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this), errors.like && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like-errors\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.like\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 9\n  }, this);\n};\n_s5(FooterButtons, \"amhHdzXE/P3y10+G0/fD0ukueeE=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c6 = FooterButtons;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PostFooter\");\n$RefreshReg$(_c2, \"CommentTextArea\");\n$RefreshReg$(_c3, \"Comments\");\n$RefreshReg$(_c4, \"NotesButtons\");\n$RefreshReg$(_c5, \"FooterTabsMenu\");\n$RefreshReg$(_c6, \"FooterButtons\");","map":{"version":3,"names":["useSelector","useDispatch","useState","useEffect","Link","Redirect","commentsActions","likesActions","fetchPost","jsxDEV","_jsxDEV","Fragment","_Fragment","PostFooter","_ref","_s","post","loggedin","setLoggedIn","showTabMenu","setShowTabMenu","errors","setErrors","like","follow","tabMenuSelection","setTabMenuSelection","body","setBody","dispatch","sessionUser","state","session","user","liked","userLike","id","setTimeout","handleLikeButton","event","preventDefault","post_id","user_id","likeId","createLike","handleUnlikeButton","removeLike","handleNotesButtonClick","comments","postComments","likes","postLikes","Likes","_ref2","likerpic","likerusername","liker_id","className","children","to","src","fileName","_jsxFileName","lineNumber","columnNumber","NotesButtons","FooterButtons","FooterTabsMenu","CommentTextArea","length","map","comment","Comments","username","commenter","profilepic","comment_id","liker","_c","_ref3","_s2","handleCommentSubmit","formData","FormData","append","response","createComment","value","onChange","target","placeholder","maxLength","rows","onClick","_c2","_ref4","_s3","handleCommentDelete","removeComment","class","_c3","_ref5","_s4","clasName","commentcount","likescount","_c4","_ref6","_c5","_ref7","_s5","_c6","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/PostFooter.js"],"sourcesContent":["\n\n//this component will contain \n// notes, a total of all likes, comments, and reblogs\n//notes will be a button that opens a tab menu\n// buttons for comment, reblog and like\n// those will open the menu which is defaulted on comments\n// comment will automatically open the menu since comment is the deafult \n// likes will trigger a like\n\n//in the menu, there will be tabs for comments, reblogs, and likes\n// comment tab will show comments, \n// reblogs will show reblogs \n// likes will show all the user likes\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport * as commentsActions from '../../store/comments';\nimport * as likesActions from '../../store/likes';\nimport './postsfooter.css'\nimport { fetchPost } from \"../../store/posts\";\n\nconst PostFooter = ({ post }) => {\n    // this is to pass down logged in status to child components\n    const [loggedin, setLoggedIn] = useState(false);\n    const [showTabMenu, setShowTabMenu] = useState(false);\n    const [errors,setErrors] = useState(\n        {\n            like:'',\n            follow: '',\n        }\n    );\n    const [tabMenuSelection, setTabMenuSelection] = useState('comments');\n    const [body,setBody] = useState('');\n    // cons [isActive, setIsActive] = useState();\n    const dispatch = useDispatch();\n    // will have a postid passed in from parent\n    //can access the post from the state and grab data\n    const sessionUser = useSelector(state => state.session.user);\n    const liked = useSelector(likesActions.userLike(sessionUser.id,post.id));\n    // to remove any errors \n    useEffect(\n        ()=>{\n        setTimeout(()=>{\n            setErrors(\n                {\n                    like:'',\n                    follow:''\n                }\n            )},4000)\n        }\n    ,[errors])\n    const handleLikeButton = (event) => {\n        event.preventDefault();\n        if(!sessionUser){\n            setErrors(state=>{\n                return {...state,like: 'Login to Like!'}\n            });\n        } \n            const like = { post_id: post.id, user_id: sessionUser.id }\n            const likeId=dispatch(likesActions.createLike(like));\n           \n    }\n    const handleUnlikeButton = (event) =>{\n        event.preventDefault();\n        dispatch(likesActions.removeLike(liked[0].id))\n    }\n    const handleNotesButtonClick = (event) => {\n        if (!showTabMenu) {\n            setShowTabMenu(true);\n            dispatch(fetchPost(post.id));\n        } else {\n            setShowTabMenu(false);\n        }\n\n        \n    }\n   \n\n    const comments = useSelector(commentsActions.postComments(post.id));\n    const likes = useSelector(likesActions.postLikes(post.id));\n\n    \n    // const FooterButtons = () => {\n    //     // will contain 2 buttons(3 if time)\n    //     return (\n    //         <div className='footerbuttons-container'>\n    //             <div className='footbutton-container'>\n    //                 <button className='commentbutton' onClick={() => setShowTabMenu(true)}>\n    //                     <i className=\"fa-regular fa-comment\"></i>\n    //                 </button>\n    //             </div>\n    //             <div className='footbutton-container'>\n    //                 {liked.length>0 && <button className={`likesbutton  true`} onClick={event => handleUnlikeButton(event)}>\n    //                     <i className=\"fa-solid fa-heart\"></i>\n    //                 </button>\n    //                 }\n    //                 {liked.length===0 &&\n    //                 <button className={`likesbutton false `} onClick={event => handleLikeButton(event)}>\n    //                     <i className=\"fa-solid fa-heart\"></i>\n    //                 </button>\n    //                 }\n    //                 { errors.like &&\n    //                 <div className='like-errors'>\n    //                     <span>\n    //                         {errors.like}\n    //                     </span>\n    //                 </div>\n    //                 }\n    //             </div>\n\n    //         </div>\n    //     )\n    // }\n\n    const Likes = ({ likerpic, likerusername,liker_id }) => {\n        // will have a useSelector to pull likes from the state\n        //will map over the likers for the post and render\n\n        return (\n            <div className='likeslist-container'>\n                <div className='likeslist-body'>\n                    <div className='likeslist-content'>\n                        {/* this is where i will map over the likers. will be pulled from the likes where post_id matches the post */}\n                        <div className='liker-container'>\n                            <div className='liker-profilepic-container'>\n                                <div className=\"liker-profilepic-body\">\n                                    <Link className='liker-link' to={`/user/${liker_id}`}>\n                                        <img className='liker-pic' src={likerpic}></img>\n                                    </Link>\n                                </div>\n\n                            </div>\n                            <div className=\"liker-information\">\n                                <div className='liker-username'>\n                                    <span>{likerusername}</span>\n                                </div>\n                                <button className='userFollow'>\n                                    {/* onClick will trigger a follow for the sessionUser */}\n                                    <span>Follow</span>\n                                </button>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n    return (\n        <>\n            <div className='postfoot-container'>\n                <footer className='postfoot-body'>\n                    <div className='postfootbuttons-container'>\n                        {/* will contain a the buttons */}\n                        <NotesButtons post={post}/>\n                        <FooterButtons \n                            post={post} \n                            errors={errors} \n                            handleLikeButton={handleLikeButton} \n                            handleUnlikeButton={handleUnlikeButton}\n                            setShowTabMenu={setShowTabMenu}\n                        />\n                    </div>\n                    <div className='posttabmenu-container'>\n                        <div className='postnavmenu-body'>\n                            {showTabMenu && <FooterTabsMenu post={post} setTabMenuSelection={setTabMenuSelection}/>}\n                            \n                            {showTabMenu && tabMenuSelection === 'comments' && <CommentTextArea post={post}/>}\n                            {/* depending on what is clicked, will set the tab */}\n                            {/* <CommentTextArea sessionUser={sessionUser}/> */}\n                            {showTabMenu && tabMenuSelection === 'comments' && comments.length > 0 && (\n                                <div className='comments-area'>\n                                    {comments.map((comment) => (\n                                        <Comments\n                                            key={comment.id}\n                                            username={comment.commenter.username}\n                                            profilepic={comment.commenter.profilepic}\n                                            body={comment.body}\n                                            id={comment.commenter.id}\n                                            comment_id={comment.id}\n                                        />\n                                    ))}\n                                </div>\n                            )}\n                            {showTabMenu && tabMenuSelection === 'likes' &&\n                                likes.map((like) => {\n                                    return <Likes likerpic={like.liker.profilepic} likerusername={like.liker.username} liker_id={like.liker.id} />\n                                })}\n                        </div>\n\n                    </div>\n                </footer>\n\n            </div>\n        </>\n    )\n}\nconst CommentTextArea = ({post}) => {\n    const dispatch = useDispatch();\n    const sessionUser=useSelector(state=>state.session.user);\n    const [body,setBody] = useState('');\n    const handleCommentSubmit=(event)=>{\n        event.preventDefault();\n        const formData=new FormData();\n        formData.append('comment[body]', body)\n        formData.append('comment[user_id]',sessionUser.id)\n        formData.append('comment[post_id]',post.id);\n\n        let response = dispatch(commentsActions.createComment(formData));\n        setBody('');\n\n    }\n    return (\n        <>\n            {sessionUser && <div className='commenttext-container'>\n                <div className='commenttext-body'>\n                    <div className='comment-profile-pic'>\n                        <div className='profilepic-frame1'>\n                            <img className='reply-profilepic' src={sessionUser.profilepic}></img>\n                        </div>\n                    </div>\n                    <div className='reply-container'>\n                        <div className='textarea-container'>\n                            <textarea value={body} onChange={(event)=>setBody(event.target.value)} placeholder='type here' maxLength='475' rows='1' className='reply-textarea'></textarea>\n                        </div>\n                        <button onClick={(event)=>handleCommentSubmit(event)} className='reply-button'>\n                            <span>Reply</span>\n                        </button>\n\n                    </div>\n\n                </div>\n            </div>}\n        </>\n    )\n}\nexport default PostFooter;\n\nconst Comments = ({ comment_id, id,username, profilepic, body }) => {\n    const dispatch = useDispatch();\n    const sessionUser=useSelector(state=> state.session.user);\n    const handleCommentDelete = (event)=>{\n        event.preventDefault();\n        dispatch(commentsActions.removeComment(comment_id));\n    }\n    // need to take in commenterusername, commenter profilepic, and comment body\n    return (\n        <>\n            \n            <div className='commentsshow-container'>\n                {/* will need to map over every comment related to the post and return it */}\n                {/* comment show */}\n                <div className='comment-container'>\n                    <div className='comment-body'>\n                        <div className='comment-content'>\n                            <div className='commenter-profilepic'>\n                                <div className='commenter-profilepic-frame'>\n                                    {/* will need to link to a user's profile, can grab grom the the comment map */}\n                                    <Link to={`/user/${id}`} className='commenterlink'>\n                                        <img className='commenterimage' src={profilepic}></img>\n                                    </Link>\n                                </div>\n\n                            </div>\n                            <div className='commenttext-container'>\n                                <div className='commenter-username'>\n                                    <span className='commenter-username-text'>\n                                        {username}\n                                        {/* fill in with commenter username from state */}\n                                    </span>\n\n                                </div>\n                                <div className='replies-container'>\n                                    <div className='reply-body'>\n                                        <div className='reply-content'>\n                                            <p className='reply'> {body}</p>\n                                        </div>\n\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n\n                    </div>\n\n                </div>\n                { sessionUser && sessionUser.id === id && \n                <span>\n                    <button className='comment-delete' onClick={event=> handleCommentDelete(event)}>\n                        <i class=\"fa-solid fa-dumpster\"></i>\n                    </button>\n                </span>\n                }\n            </div>\n\n        </>\n    )\n}\n\nconst NotesButtons = ({post}) => {\n    const [showTabMenu, setShowTabMenu] = useState(false);\n    const dispatch = useDispatch();\n    const handleNotesButtonClick = (event) => {\n        if (!showTabMenu) {\n            setShowTabMenu(true);\n            dispatch(fetchPost(post.id));\n        } else {\n            setShowTabMenu(false);\n        }\n\n        \n    }\n    // depending on if this was clicked or not will change what is in the button contents\n    // this button is strictly for close and opening the tabs menu\n    return (\n        <div className='notebutton-container'>\n            <span className='notebutton-body'>\n                <span className='notebutton-contents'>\n                    <button className='notesbutton' onClick={() => handleNotesButtonClick()}>\n                        <span className='notesbutton-body'>\n                            {!showTabMenu &&\n                                <>\n                                    <span className='shownotesbutton-container'>\n                                        <span clasName='show-notes-body'>\n                                            <div className='show-notes-content'>\n                                                <span className='show-notes-text'>\n                                                    <span className='notes-count'>\n                                                        {post.commentcount + post.likescount}\n                                                    </span>\n                                                    notes\n                                                </span>\n\n                                            </div>\n\n                                        </span>\n\n                                    </span>\n                                </>\n\n\n                            }\n                            {showTabMenu && <div className='notesbutton-content'>\n\n                                <i className=\"fa-solid fa-x\"></i>\n                                <span className='notesbutton-text'>Close Notes</span>\n                            </div>}\n\n                        </span>\n                    </button>\n\n                </span>\n\n            </span>\n        </div>\n\n    )\n}\nconst FooterTabsMenu = ({post,setTabMenuSelection}) => {\n    // this will contain the tabs for the menu\n    // it will have 2 separate tabs depending on which one is clicked\n    // one will render the comments from the post using the postId and gathering the comments\n    // the other will render users who likes, which will be gathered from the likes in the state\n    // where the post_id matches the post_id in likes state \n    return (\n        <div className='tabsmenu-container'>\n            <div className='tabsmenu-body'>\n                <div className='tabsmenu-navigation'>\n                    <button className={'tabnavbutton'} onClick={() => setTabMenuSelection('comments')}>\n                        <i className=\"fa-regular fa-comment\"></i>\n                        <span className='tabnavbutton-contents'>\n                            {post.commentcount}\n                        </span>\n                    </button>\n                    <button className='tabnavbutton' onClick={() => setTabMenuSelection('likes')}>\n                        <span className='tabnavbutton-contents'>\n                            <i className=\"fa-solid fa-heart\"></i>\n                            {post.likescount}\n                        </span>\n                    </button>\n\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst FooterButtons = ({post,errors,setShowTabMenu,handleLikeButton,handleUnlikeButton}) => {\n    const sessionUser = useSelector(state=> state.session.user);\n    const liked = useSelector(likesActions.userLike(sessionUser.id,post.id));\n\n    // will contain 2 buttons(3 if time)\n    return (\n        <div className='footerbuttons-container'>\n            <div className='footbutton-container'>\n                <button className='commentbutton' onClick={() => setShowTabMenu(true)}>\n                    <i className=\"fa-regular fa-comment\"></i>\n                </button>\n            </div>\n            <div className='footbutton-container'>\n                {liked.length>0 && <button className={`likesbutton  true`} onClick={event => handleUnlikeButton(event)}>\n                    <i className=\"fa-solid fa-heart\"></i>\n                </button>\n                }\n                {liked.length===0 &&\n                <button className={`likesbutton false `} onClick={event => handleLikeButton(event)}>\n                    <i className=\"fa-solid fa-heart\"></i>\n                </button>\n                }\n                { errors.like &&\n                <div className='like-errors'>\n                    <span>\n                        {errors.like}\n                    </span>\n                </div>\n                }\n            </div>\n\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}