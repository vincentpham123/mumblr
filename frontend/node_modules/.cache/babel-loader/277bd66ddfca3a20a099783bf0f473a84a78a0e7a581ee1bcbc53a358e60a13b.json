{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/textposts/NewTextPost.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { createPost } from \"../../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport NewPostInput from \"../NewPostInputs\";\nimport '../styling/newtextpost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTextPost = () => {\n  _s();\n  const [bodyCheck, setBodyCheck] = useState(true);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [paragraphs, setParagraphs] = useState({\n    1: ''\n  });\n  const [photos, setPhotos] = useState({\n    1: null,\n    2: null,\n    3: null,\n    4: null\n  });\n  const [errors, setErrors] = useState([]);\n\n  // each photo will hold a file that will be rendered \n  //when a user uploads a photo, 1 will be populate, then 2, then 3, then 4\n\n  //during update, i will populate these based on the the photos in the state\n  //when a user removes the photo currenly populated in the hash\n  //example, if photo1 is currently being rendered in paragraph 3\n  //and they remove it, i will set photo1 to null\n  //if they add a photo else where, i will check for keys in the photo hash\n  //with null values and then update that key to have that file\n  //i will update the paragraph key to be an identifier for that photo\n  // example:\n  // photo1 was originally in pargraph2, users chooses to remove it and type in\n  // key downs update the paragraph automatically\n  // when a user removes, the photos[1] will be set to null\n  //so paragraph[2] will now be strings\n  // user updates a photo to paragraph[1], pragraph[1] will now contain identifier\n  // handlefile will check for empty nulls, first one it identifies, it was place the file there\n  // paragraph one will have something like photo1 identifer\n  //when i show the text, i will check for the photo being checked in the body text and then \n\n  const sessionUser = useSelector(state => state.session.user);\n  useEffect(() => {\n    const textofpost = Object.values(paragraphs).filter(value => typeof value === 'string');\n    if (textofpost.some(paragraph => paragraph.trim().length > 0)) {\n      setBodyCheck('');\n    } else {\n      setBodyCheck(true);\n    }\n  }, [paragraphs]);\n  const handleFile = event => {\n    // need to change logic to check for null keys-value pairs\n\n    //need data-type of the input to set paragraph to photo\n    const file = event.currentTarget.files[0];\n    const pindex = event.target.dataset.type;\n    // need pindex to target the current paragraph \n\n    //need to find the keys with values null\n\n    const nullPhotos = Object.keys(photos).filter(photonumber => photos[photonumber] === null);\n    const photoToFill = nullPhotos[0];\n    setPhotos({\n      ...photos,\n      [photoToFill]: file\n    });\n    setParagraphs({\n      ...paragraphs,\n      [Object.keys(paragraphs).length + 1]: '',\n      [pindex]: `!@%^#^photo${photoToFill}`\n    });\n\n    // this wil let my child component which key to pass to the handleFileRemove in my child component\n    // if its an update, i can get initial index when i check the inital value;\n\n    return photoToFill;\n  };\n  const handlePhotoRemove = (key, index) => {\n    setPhotos({\n      ...photos,\n      [key]: null\n    });\n    setParagraphs({\n      ...paragraphs,\n      [index]: ''\n    });\n    //need to pass this down to the children\n  };\n\n  const handleAddParagraph = event => {\n    event.preventDefault();\n    const newIndex = Object.keys(paragraphs).length + 1;\n    setParagraphs({\n      ...paragraphs,\n      [newIndex]: ''\n    });\n  };\n  const handleTitleKeyDown = event => {\n    if (event.key === 'Enter') {\n      setTimeout(() => {\n        event.target.nextElementSibling.focus();\n      }, 0);\n    }\n    setTitle(event.target.innerText);\n  };\n  const handleKeyDown = event => {\n    if (event.key !== 'Enter' && event.key !== 'ArrowDown' && event.key !== 'ArrowUp') {\n      setTimeout(() => {\n        const pindex = event.target.dataset.type;\n        setParagraphs({\n          ...paragraphs,\n          [pindex]: event.target.innerText\n        });\n      }, 0);\n    }\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const newIndex = Object.keys(paragraphs).length + 1;\n      setParagraphs({\n        ...paragraphs,\n        [newIndex]: ''\n      });\n      setTimeout(() => {\n        let currentElement = event.target;\n        while (currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')) {\n          currentElement = currentElement.parentNode;\n        }\n        currentElement.nextElementSibling.querySelector('p').focus();\n      }, 10);\n    }\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setTimeout(() => {\n        let currentElement = event.target;\n        while (currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')) {\n          currentElement = currentElement.parentNode;\n        }\n        if (currentElement.nextElementSibling && currentElement.nextElementSibling.querySelector('p')) {\n          const nextP = currentElement.nextElementSibling.querySelector('p');\n          nextP.focus();\n          const range = document.createRange();\n          range.selectNodeContents(nextP);\n          range.collapse(false);\n          const selection = window.getSelection();\n          selection.removeAllRanges();\n          selection.addRange(range);\n        }\n        ;\n      }, 10);\n    }\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setTimeout(() => {\n        let currentElement = event.target;\n        while (currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')) {\n          currentElement = currentElement.parentNode;\n        }\n        if (!currentElement.previousElementSibling.matches('h1') && currentElement.previousElementSibling.querySelector('p')) {\n          const prevP = currentElement.previousElementSibling.querySelector('p');\n          prevP.focus();\n          const range = document.createRange();\n          range.selectNodeContents(prevP);\n          range.collapse(false);\n          const selection = window.getSelection();\n          selection.removeAllRanges();\n          selection.addRange(range);\n        }\n      }, 10);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('post[title]', title);\n    const textState = Object.values(paragraphs).filter(paragraph => paragraph !== '');\n    formData.append('post[body]', textState.join('\\n'));\n    formData.append('post[author_id]', sessionUser.id);\n    //handle files\n    Object.keys(photos).forEach(key => {\n      let param = `post[photo${key}]`;\n      let photoIdentifier = `!@%^#^photo${key}`;\n      if (Object.values(paragraphs).includes(photoIdentifier) && photos[key]) {\n        formData.append(param, photos[key]);\n      } else if (!Object.values(paragraphs).includes(photoIdentifier) && photos[key]) {\n        formData.append(param, null);\n      }\n      // if (photos[key]) formData.append(param,photos[key]);\n    });\n\n    dispatch(createPost(formData)).then(() => {\n      history.push(`/user/${sessionUser.id}/posts`);\n    }).catch(async res => {\n      var _data;\n      let data;\n      try {\n        data = await res.clone().json();\n      } catch {\n        data = await res.text();\n      }\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  const disableButton = () => {\n    return bodyCheck ? '' : 'disabled';\n  };\n  if (!sessionUser) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-load-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-load-body\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        style: {\n          color: 'white'\n        },\n        className: \"fa-solid fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postheader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createpost-pic\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sessionUser.profilepic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-username\",\n              children: sessionUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"post-options\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-gear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newtext-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newtext-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textbox-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                onKeyDown: event => handleTitleKeyDown(event),\n                className: \"contentEdit text-title\",\n                contentEditable: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), Object.keys(paragraphs).map((paragraph, index) => {\n                return /*#__PURE__*/_jsxDEV(NewPostInput, {\n                  handleKeyDown: handleKeyDown,\n                  index: index + 1,\n                  handleFile: handleFile,\n                  photoState: photos,\n                  create: true,\n                  handlePhotoRemove: handlePhotoRemove\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 40\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-paragraph-button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => handleAddParagraph(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-text\",\n              onClick: () => history.go(-2),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: bodyCheck,\n              className: \"text-submit\",\n              onClick: handleSubmit,\n              children: \"Post Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"login-errors\",\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n\n  // have an option for files, \n  //optional \n};\n_s(NewTextPost, \"5c7lX2Qg+eWtKZjaBF67xvMaqus=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = NewTextPost;\nexport default NewTextPost;\nvar _c;\n$RefreshReg$(_c, \"NewTextPost\");","map":{"version":3,"names":["useSelector","useState","useRef","useEffect","createPost","useDispatch","useHistory","Redirect","NewPostInput","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTextPost","_s","bodyCheck","setBodyCheck","dispatch","history","title","setTitle","paragraphs","setParagraphs","photos","setPhotos","errors","setErrors","sessionUser","state","session","user","textofpost","Object","values","filter","value","some","paragraph","trim","length","handleFile","event","file","currentTarget","files","pindex","target","dataset","type","nullPhotos","keys","photonumber","photoToFill","handlePhotoRemove","key","index","handleAddParagraph","preventDefault","newIndex","handleTitleKeyDown","setTimeout","nextElementSibling","focus","innerText","handleKeyDown","currentElement","parentNode","matches","querySelector","nextP","range","document","createRange","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","previousElementSibling","prevP","handleSubmit","formData","FormData","append","textState","join","id","forEach","param","photoIdentifier","includes","then","push","catch","res","_data","data","clone","json","text","statusText","disableButton","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","src","profilepic","username","onKeyDown","contentEditable","map","photoState","create","onClick","go","disabled","error","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/textposts/NewTextPost.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport { useState, useRef,useEffect } from \"react\"\nimport { createPost } from \"../../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport NewPostInput from \"../NewPostInputs\";\nimport '../styling/newtextpost.css';\nconst NewTextPost = () => {\n    const [bodyCheck,setBodyCheck] = useState(true);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [paragraphs,setParagraphs] = useState({1:''});\n    const [photos,setPhotos]=useState({1:null,2:null,3:null,4:null});\n    const [errors,setErrors]=useState([]);\n\n      // each photo will hold a file that will be rendered \n      //when a user uploads a photo, 1 will be populate, then 2, then 3, then 4\n\n      //during update, i will populate these based on the the photos in the state\n      //when a user removes the photo currenly populated in the hash\n      //example, if photo1 is currently being rendered in paragraph 3\n      //and they remove it, i will set photo1 to null\n      //if they add a photo else where, i will check for keys in the photo hash\n      //with null values and then update that key to have that file\n      //i will update the paragraph key to be an identifier for that photo\n      // example:\n      // photo1 was originally in pargraph2, users chooses to remove it and type in\n      // key downs update the paragraph automatically\n      // when a user removes, the photos[1] will be set to null\n      //so paragraph[2] will now be strings\n      // user updates a photo to paragraph[1], pragraph[1] will now contain identifier\n      // handlefile will check for empty nulls, first one it identifies, it was place the file there\n      // paragraph one will have something like photo1 identifer\n      //when i show the text, i will check for the photo being checked in the body text and then \n\n    const sessionUser = useSelector(state=>  state.session.user);\n    useEffect(()=>{\n        const textofpost = Object.values(paragraphs).filter((value)=> typeof value ==='string');\n        if(textofpost.some(paragraph=>paragraph.trim().length>0) ) {\n            setBodyCheck('');\n        } else {\n            setBodyCheck(true);\n        }\n    },[paragraphs]);\n    \n    const handleFile = (event) => {\n        // need to change logic to check for null keys-value pairs\n\n        //need data-type of the input to set paragraph to photo\n        const file = event.currentTarget.files[0];\n        const pindex=event.target.dataset.type;\n        // need pindex to target the current paragraph \n\n        //need to find the keys with values null\n\n        const nullPhotos = Object.keys(photos).filter((photonumber)=>photos[photonumber]===null);\n        const photoToFill = nullPhotos[0];\n        setPhotos({...photos,[photoToFill]:file});\n\n        setParagraphs({...paragraphs,[Object.keys(paragraphs).length+1]: '',[pindex]:`!@%^#^photo${photoToFill}`});\n\n        // this wil let my child component which key to pass to the handleFileRemove in my child component\n        // if its an update, i can get initial index when i check the inital value;\n\n        return photoToFill;\n    }\n\n    const handlePhotoRemove = (key,index) => {\n        setPhotos({...photos,[key]:null})\n        setParagraphs({...paragraphs,[index]:''})\n        //need to pass this down to the children\n    }\n    const handleAddParagraph = (event) =>{\n        event.preventDefault();\n            const newIndex = Object.keys(paragraphs).length+1;\n            setParagraphs({\n                ...paragraphs,\n                [newIndex]: ''\n            })\n    }\n    const handleTitleKeyDown = (event) => {\n        if (event.key==='Enter'){\n            setTimeout(()=>{\n                event.target.nextElementSibling.focus()\n            },0);\n        }\n    \n         setTitle(event.target.innerText);\n    }\n    const handleKeyDown = (event) => {\n    \n        if(event.key !== 'Enter' && event.key!=='ArrowDown' && event.key!=='ArrowUp'){\n            setTimeout(()=>{\n                const pindex = event.target.dataset.type\n            \n                setParagraphs({...paragraphs,[pindex]: event.target.innerText});\n            },0);\n        }\n  \n     \n      \n    \n        if (event.key==='Enter'){\n            event.preventDefault();\n            const newIndex = Object.keys(paragraphs).length+1;\n            setParagraphs({\n                ...paragraphs,\n                [newIndex]: ''\n            })\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                currentElement.nextElementSibling.querySelector('p').focus();\n            },10);\n            \n        }\n        if (event.key==='ArrowDown'){\n            event.preventDefault();\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if(currentElement.nextElementSibling && currentElement.nextElementSibling.querySelector('p') ) {\n                    const nextP = currentElement.nextElementSibling.querySelector('p');\n                    nextP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(nextP);\n                    range.collapse(false);\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            },10);\n            \n        }\n        if (event.key==='ArrowUp'){\n            event.preventDefault();\n\n            setTimeout(()=>{\n                let currentElement=event.target;\n                while(currentElement.parentNode && !currentElement.parentNode.matches('.textbox-contents')){\n                    currentElement=currentElement.parentNode;\n                }\n                if (!currentElement.previousElementSibling.matches('h1') && currentElement.previousElementSibling.querySelector('p')) {\n                    const prevP = currentElement.previousElementSibling.querySelector('p');\n                    prevP.focus();\n                    const range = document.createRange();\n                    range.selectNodeContents(prevP);\n                    range.collapse(false); \n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            },10);\n            \n        }\n    }\n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('post[title]',title);\n        \n        const textState=Object.values(paragraphs).filter((paragraph)=>paragraph!=='');\n        formData.append('post[body]',textState.join('\\n'));\n        formData.append('post[author_id]',sessionUser.id);\n        //handle files\n        Object.keys(photos).forEach((key)=>{\n            let param = `post[photo${key}]`;\n            let photoIdentifier = `!@%^#^photo${key}`\n\n            if (Object.values(paragraphs).includes(photoIdentifier)&& photos[key]) {\n                formData.append(param,photos[key])\n            } else if (!Object.values(paragraphs).includes(photoIdentifier)&& photos[key]){\n                formData.append(param,null);\n            }\n            // if (photos[key]) formData.append(param,photos[key]);\n        }) \n        dispatch(createPost(formData))\n        .then(()=>{\n                \n            history.push(`/user/${sessionUser.id}/posts`);\n\n        })\n        .catch(async res=>{\n            let data;\n            try{\n                data = await res.clone().json();\n            } catch{\n                data = await res.text();\n            }\n            if (data?.errors) setErrors(data.errors);\n            else if (data) setErrors([data]);\n            else setErrors([res.statusText]);\n        })\n    }\n\n    const disableButton = () => {\n        return bodyCheck ? '' : 'disabled'\n    }\n\n    if(!sessionUser) return(\n        <div className='post-load-container'>\n            <div className='post-load-body'>\n                <i style={{color:'white'}}className=\"fa-solid fa-spinner fa-spin\"></i>\n            </div>\n        </div>\n    );\nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n                <div className='createpost-pic'>\n                    <img src={sessionUser.profilepic}>\n                    </img>\n\n                </div>\n                <div className='postheader-left'>\n                    <div className=\"post-username\">{sessionUser.username}</div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button className='post-options'>\n                        <i className='fa-solid fa-gear'></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                        <div className='text-box'>\n                            <div className='textbox-contents'>\n                                <h1 onKeyDown={event=>handleTitleKeyDown(event)} className=\"contentEdit text-title\" contentEditable='true'></h1>\n                                {Object.keys(paragraphs).map((paragraph,index)=>{\n                                return <NewPostInput key={index} handleKeyDown={handleKeyDown} index={index+1} handleFile={handleFile} photoState={photos} create={true} handlePhotoRemove={handlePhotoRemove}/>\n                                })}\n                               \n                            </div>\n                        </div>\n                    <div className='add-paragraph-button'>\n                        <button onClick={(event)=>handleAddParagraph(event)}>\n                        </button>\n                    </div>\n                    <div className='text-footer'>\n                        {/* make this button a div to avoid clashing with the submit button */}\n                        <button className='close-text' onClick={()=>history.go(-2)}>Close</button>\n                        <button disabled={bodyCheck} className='text-submit' onClick={handleSubmit}>Post Now</button>\n                    </div>\n                </div>\n\n            </div>\n            {errors.length>0&& \n            <ul>\n                 {errors.map(error => <li className='login-errors' key={error}>{error}</li>)}\n             </ul>}\n        \n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewTextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}