{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/users/UserDashBoard.js\",\n  _s = $RefreshSig$();\nimport ShowPost from \"../posts/showPost\";\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useParams, Link } from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\n//instead of using fetchPosts, will use User posts with Params\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserDashboard = _ref => {\n  _s();\n  let {\n    type\n  } = _ref;\n  const {\n    userid\n  } = useParams();\n  //params will contain id\n\n  const sessionUser = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const [postsMap, setPostsMap] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [error, setError] = useState(false);\n  const [morePosts, setMorePosts] = useState(true);\n  const observer = useRef();\n  const lastPostElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    if (!morePosts) return;\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && morePosts) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, morePosts]);\n  useEffect(() => {\n    setPostsMap([]);\n    dispatch(postActions.clearPosts());\n    dispatch(postActions.fetchPosts(pageNumber, type, userid)).then(res => {\n      setPostsMap([]);\n      setMorePosts(res.postsleft.postsLeft);\n    });\n  }, [type]);\n  const posts = useSelector(state => state.posts);\n\n  //will trigger a dispatch for more data when\n  // pagenumber changes\n  useEffect(() => {\n    setError(false);\n    // dispatch(postActions.clearPosts());\n    dispatch(postActions.fetchPosts(pageNumber, type, userid)).then(res => {\n      setMorePosts(res.postsleft.postsLeft);\n    });\n  }, [pageNumber]);\n  const postsToShow = Object.values(posts);\n\n  // if (sessionUser) return <Redirect to=\"/\" />;\n  //all Today dashboard will be in here\n  //select posts that were reblogged by \n  //todayonmumblr\n  // in seeding, need to have posts reblogged by todayonmumblr\n  if (!posts) {\n    console.log('loading');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [posts === 'test' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this), type === 'likes' && loading && postsMap.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noposts-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Empty :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Follow some Users to populate For You page!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-otter fa-bounce\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), type === 'userposts' && loading && postsMap.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nouserposts-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Empty :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"A Blog Post will fix that!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-post-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new\",\n          className: \"empty-post-link\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-sharp fa-solid fa-pencil animation-pencil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), postsMap.map((post, index) => {\n      if (postsMap.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastPostElementRef,\n          className: \"postMain\",\n          children: /*#__PURE__*/_jsxDEV(ShowPost, {\n            post: post,\n            profile: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postMain\",\n          children: /*#__PURE__*/_jsxDEV(ShowPost, {\n            post: post,\n            profile: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this);\n      }\n    }), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-load-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-load-body\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-spinner fa-spin userload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UserDashboard, \"bugOk6Oxe/U5clEwfoauDUnoxdo=\", false, function () {\n  return [useParams, useSelector, useDispatch, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["ShowPost","useEffect","useState","useRef","useCallback","useDispatch","useSelector","Redirect","useParams","Link","postActions","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDashboard","_ref","_s","type","userid","sessionUser","state","session","user","dispatch","postsMap","setPostsMap","pageNumber","setPageNumber","loading","setLoading","hasMore","setHasMore","error","setError","morePosts","setMorePosts","observer","lastPostElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","clearPosts","fetchPosts","then","res","postsleft","postsLeft","posts","postsToShow","Object","values","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","to","map","post","index","ref","profile","id","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/users/UserDashBoard.js"],"sourcesContent":["import ShowPost from \"../posts/showPost\";\nimport { useEffect,useState,useRef,useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect,useParams,Link} from \"react-router-dom\";\nimport * as postActions from \"../../store/posts\";\n//instead of using fetchPosts, will use User posts with Params\n\nconst UserDashboard = ({type}) =>{\n    const {userid} = useParams();\n    //params will contain id\n    \n    const sessionUser = useSelector(state=>state.session.user);\n    const dispatch = useDispatch();\n    const [postsMap,setPostsMap] = useState([]);\n    const [pageNumber,setPageNumber]=useState(1);\n    const [loading,setLoading] = useState(true);\n    const [hasMore,setHasMore] = useState(false);\n    const [error,setError] = useState(false);\n    const [morePosts,setMorePosts]=useState(true);\n    const observer = useRef();\n    const lastPostElementRef = useCallback(node=>{\n        if(loading) return ;\n        if(observer.current) observer.current.disconnect();\n        if(!morePosts) return;\n        \n        observer.current = new IntersectionObserver(entries =>{\n            if (entries[0].isIntersecting && morePosts) {\n                setPageNumber(prevPageNumber=> prevPageNumber +1 )\n            }\n        })\n        if (node) observer.current.observe(node);\n    },[loading,morePosts]);\n    useEffect(()=>{\n        setPostsMap([]);\n        dispatch(postActions.clearPosts())\n        dispatch(postActions.fetchPosts(pageNumber,type,userid))\n            .then(res=>{\n                setPostsMap([]);\n                setMorePosts(res.postsleft.postsLeft);\n            })\n    },[type])\n   \n    const posts = useSelector(state=>state.posts);\n\n    //will trigger a dispatch for more data when\n    // pagenumber changes\n    useEffect(()=>{\n        setError(false);\n        // dispatch(postActions.clearPosts());\n        dispatch(postActions.fetchPosts(pageNumber,type,userid))\n            .then( (res) =>{\n                setMorePosts(res.postsleft.postsLeft);\n            })\n    },[pageNumber]);\n    \n\n\n    const postsToShow=Object.values(posts);\n    \n    // if (sessionUser) return <Redirect to=\"/\" />;\n    //all Today dashboard will be in here\n    //select posts that were reblogged by \n    //todayonmumblr\n    // in seeding, need to have posts reblogged by todayonmumblr\n    if (!posts){\n        console.log('loading')\n    }\n    return (\n        <>\n        {posts==='test' && <div><h1>Loading</h1></div> }\n        {type==='likes' && loading && postsMap.length==0 &&\n            <div className='noposts-message'>\n                <h2>Empty :(</h2>\n                <h2>Follow some Users to populate For You page!!!</h2>\n                <i className=\"fa-solid fa-otter fa-bounce\"></i>\n            </div>\n        }\n        {type==='userposts' && loading && postsMap.length==0 &&\n            <div className='nouserposts-message'>\n                <h2>Empty :(</h2>\n                <h2>A Blog Post will fix that!</h2>\n                <div className='empty-post-button'>\n                    <Link to='/new' className='empty-post-link'>\n                        <i className=\"fa-sharp fa-solid fa-pencil animation-pencil\" ></i>\n                    </Link>\n                </div>\n            </div>\n        }\n\n        {postsMap.map ((post,index)=>{\n            if (postsMap.length === index +1 ) {\n                return (\n                    <div ref={lastPostElementRef} key={post.id} className='postMain'>\n                    <ShowPost  post={post} profile={true}/>\n                    </div>)\n            } else {\n                return( \n                    <div className='postMain' key={post.id}>\n                        <ShowPost  post={post} profile={true}/>\n                    </div>\n                )\n            }\n        })}\n        {loading &&  \n            <div className='post-load-container'>\n                <div className='post-load-body'>\n                    <i className=\"fa-solid fa-spinner fa-spin userload\"></i>\n                </div>\n            </div>}\n        </>\n    );\n\n\n\n\n}\n\nexport default UserDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}