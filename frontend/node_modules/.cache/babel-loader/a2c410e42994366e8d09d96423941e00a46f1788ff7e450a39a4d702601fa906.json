{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/dashboardnav.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useEffect } from \"react-redux\";\nimport * as sessionActions from '../store/session';\nimport LoggedIn from \"./loggedin\";\nimport LoggedOut from \"./loggedout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = _ref => {\n  _s();\n  let {} = _ref;\n  const sessionUser = useSelector(state => state.session.user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-main\",\n      children: [sessionUser && /*#__PURE__*/_jsxDEV(LoggedIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 29\n      }, this), !sessionUser && /*#__PURE__*/_jsxDEV(LoggedOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  // if session null, show logged out dashboard\n  // if logged in, show logged in dashboard\n\n  //logged out will have posts made today, trending??, spotlight\n  //today will be posts reblogged by todayonmumblr account\n};\n_s(Dashboard, \"i57EYJ1RY8nGiLTGt2kHe9E7U1c=\", false, function () {\n  return [useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useSelector","useEffect","sessionActions","LoggedIn","LoggedOut","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_ref","_s","sessionUser","state","session","user","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/Dashboard/dashboardnav.js"],"sourcesContent":["import { useSelector,useEffect } from \"react-redux\";\nimport * as sessionActions from '../store/session';\nimport LoggedIn from \"./loggedin\";\nimport LoggedOut from \"./loggedout\";\n\nconst Dashboard = ({})=>{\n    const sessionUser = useSelector(state=> state.session.user)\n\n\n    return (\n        <>\n        <div className='dashboard-main'>\n            {sessionUser && <LoggedIn />}\n            {!sessionUser && <LoggedOut />}\n        </div>\n        </>\n    )\n    // if session null, show logged out dashboard\n    // if logged in, show logged in dashboard\n\n    //logged out will have posts made today, trending??, spotlight\n    //today will be posts reblogged by todayonmumblr account\n\n\n}\n\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,WAAW,EAACC,SAAS,QAAQ,aAAa;AACnD,OAAO,KAAKC,cAAc,MAAM,kBAAkB;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,SAAS,GAAGC,IAAA,IAAM;EAAAC,EAAA;EAAA,IAAL,CAAC,CAAC,GAAAD,IAAA;EACjB,MAAME,WAAW,GAAGZ,WAAW,CAACa,KAAK,IAAGA,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC;EAG3D,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACAV,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAD,QAAA,GAC1BJ,WAAW,iBAAIN,OAAA,CAACH,QAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3B,CAACT,WAAW,iBAAIN,OAAA,CAACF,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC,gBACJ,CAAC;EAEP;EACA;;EAEA;EACA;AAGJ,CAAC;AAAAV,EAAA,CAnBKF,SAAS;EAAA,QACST,WAAW;AAAA;AAAAsB,EAAA,GAD7Bb,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}