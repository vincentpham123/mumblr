{"ast":null,"code":"// consts\n\nimport csrfFetch from \"./csrf\";\nimport { receivePost, receiveUserPosts } from \"./posts\";\nconst RECEIVE_USER = 'api/RECEIVEUSER';\nconst DELETE_USER = 'api/DELETEUSER';\nconst RECEIVE_USERS = 'api/RECEIVEUSERS';\n\n//action types\n\nexport const receiveUser = payload => ({\n  type: RECEIVE_USER,\n  user: payload\n});\nexport const receiveUsers = users => ({\n  type: RECEIVE_USERS,\n  users\n});\nexport const deleteUser = userId => ({\n  type: DELETE_USER,\n  userId\n});\n\n//gett\nexport const getUser = id => state => {\n  return state !== null && state !== void 0 && state.users ? state.users[id] : null;\n};\nexport const fetchUsers = () => async dispatch => {\n  let response = await fetch(`/api/users`);\n  if (response.ok) {\n    const users = await response.json();\n    dispatch(receiveUsers(users));\n    return users;\n  }\n};\nexport const fetchUser = id => async dispatch => {\n  // debugger\n  let response = await fetch(`/api/users/${id}`);\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(receiveUser(data.user));\n    dispatch(receiveUserPosts(data.posts));\n    return data;\n  }\n};\nexport const fetchUserFollows = id => async dispatch => {};\nexport const removeUser = userid => async dispatch => {\n  const response = await csrfFetch(`/api/users/${userid}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    //when a user deletes i will call logout and then destroy\n    dispatch(deleteUser(userid));\n  }\n};\nexport const updateUser = (formData, userid) => async dispatch => {\n  const response = await csrfFetch(`/api/users/${userid}`, {\n    method: 'PATCH',\n    body: formData\n  });\n  const data = await response.json();\n  dispatch(receiveUser(data.user));\n  dispatch(receiveUserPosts(data.posts));\n};\n//users reducer\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users\n      };\n    case RECEIVE_USER:\n      newState[action.user.id] = action.user;\n      return newState;\n    case DELETE_USER:\n      delete newState[action.user.username];\n      return newState;\n    default:\n      return newState;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["csrfFetch","receivePost","receiveUserPosts","RECEIVE_USER","DELETE_USER","RECEIVE_USERS","receiveUser","payload","type","user","receiveUsers","users","deleteUser","userId","getUser","id","state","fetchUsers","dispatch","response","fetch","ok","json","fetchUser","data","posts","fetchUserFollows","removeUser","userid","method","updateUser","formData","body","userReducer","arguments","length","undefined","action","newState","username"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/user.js"],"sourcesContent":["\n// consts\n\nimport csrfFetch from \"./csrf\";\nimport { receivePost, receiveUserPosts } from \"./posts\";\nconst RECEIVE_USER = 'api/RECEIVEUSER'\nconst DELETE_USER = 'api/DELETEUSER'\nconst RECEIVE_USERS = 'api/RECEIVEUSERS'\n\n//action types\n\nexport const receiveUser = (payload) => ({\n    type: RECEIVE_USER,\n    user: payload\n})\n\nexport const receiveUsers = (users) =>({\n    type: RECEIVE_USERS,\n    users\n})\nexport const deleteUser = (userId) => ({\n    type:DELETE_USER,\n    userId\n});\n\n//gett\nexport const getUser = id => state =>{\n    return state?.users ? state.users[id] : null;\n    \n}\nexport const fetchUsers =() => async(dispatch) => {\n    let response = await fetch(`/api/users`)\n    if (response.ok){\n        const users = await response.json();\n        dispatch(receiveUsers(users));\n        return users;\n    }\n}\nexport const fetchUser = (id) => async(dispatch) =>{\n    // debugger\n    let response = await fetch(`/api/users/${id}`)\n    if (response.ok){\n        const data = await response.json();\n        dispatch(receiveUser(data.user));\n        dispatch(receiveUserPosts(data.posts));\n        return data;\n    }\n\n}\n\nexport const fetchUserFollows = (id) => async dispatch =>{\n\n}\n\nexport const removeUser = (userid) => async (dispatch) => {\n    const response = await csrfFetch(`/api/users/${userid}`,{\n        method: 'DELETE'\n    });\n    if (response.ok){\n        //when a user deletes i will call logout and then destroy\n        dispatch(deleteUser(userid))\n    }\n};\n\nexport const updateUser = (formData,userid) => async dispatch => {\n    const response = await csrfFetch(`/api/users/${userid}`,{\n        method: 'PATCH',\n        body: formData\n    })\n\n        const data = await response.json();\n        dispatch(receiveUser(data.user));\n        dispatch(receiveUserPosts(data.posts));\n    \n    \n}\n//users reducer\n\nconst userReducer = (state={},action) => {\n    const newState={...state};\n    switch (action.type) {\n        case RECEIVE_USERS:\n            return {...state, ...action.users}; \n\n        case RECEIVE_USER:\n            newState[action.user.id]=action.user;\n            return newState;\n        case DELETE_USER:\n            delete newState[action.user.username];\n            return newState;\n        default:\n            return newState;\n    }\n\n}\n\nexport default userReducer;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}