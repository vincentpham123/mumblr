{"ast":null,"code":"import csrfFetch, { storeCSRFToken } from \"./csrf\";\nimport { receiveLikes } from \"./likes\";\nimport { receiveComments } from './comments';\nimport { receiveUsers } from \"./user\";\nimport { receiveFollows } from \"./follows\";\n// consts \n\nconst RECEIVE_POST = \"api/RECEIVE_POST\";\nconst RECEIVE_POSTS = \"api/RECEIVE_POSTS\";\nconst REMOVE_POST = 'api/UPDATE_POST';\nconst RECEIVE_USER_POST = \"api/USERNAME/RECEIVE_POSTS\";\n\n// action types\n\nexport const receivePost = post => ({\n  type: RECEIVE_POST,\n  post\n});\nexport const receivePosts = posts => ({\n  type: RECEIVE_POSTS,\n  posts\n});\nexport const deletePost = postId => ({\n  type: REMOVE_POST,\n  postId\n});\n\n//getter\n\nexport const userPosts = username => state => {\n  return state.posts ? Object.values(state.posts).filter(post => post.author.username === username) : null;\n};\n\n// thunk actions\n\nexport const fetchPosts = pagenumber => async dispatch => {\n  let response = await fetch('/api/posts', {\n    body: J\n  });\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(receivePosts(data.posts));\n    dispatch(receiveUsers(data.users));\n    dispatch(receiveFollows(data.follows));\n    dispatch(receiveLikes(data.likes));\n    return data;\n  }\n};\nexport const fetchPost = postId => async dispatch => {\n  let response = await fetch(`/api/posts/${postId}`);\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(receivePost(data.posts));\n    dispatch(receiveComments(data.comments));\n    dispatch(receiveLikes(data.likes));\n    return data;\n  }\n};\nexport const createPost = post => async dispatch => {\n  const newPost = await csrfFetch('/api/posts', {\n    method: 'POST',\n    body: post\n  });\n  if (newPost.ok) {\n    const data = await newPost.json();\n    dispatch(receivePost(data.posts));\n    dispatch(receiveComments(data.comments));\n    dispatch(receiveLikes(data.likes));\n    return data;\n  }\n};\nexport const updatePost = (formData, postid) => async dispatch => {\n  const post = await csrfFetch(`/api/posts/${postid}`, {\n    method: 'PATCH',\n    body: formData\n  });\n  if (post.ok) {\n    const data = await post.json();\n    dispatch(receivePost(data));\n    return data;\n  } else {\n    const error = await post.json();\n    throw new Error(error.message);\n  }\n};\nexport const removePost = postId => async dispatch => {\n  const post = await csrfFetch(`/api/posts/${postId}`, {\n    method: 'DELETE'\n  });\n  if (post.ok) {\n    dispatch(deletePost(postId));\n    // dispatch(receivePosts())\n  }\n};\n\n// posts reducer\n\nconst postsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_POST:\n      newState[action.post.id] = action.post;\n      return newState;\n    case RECEIVE_POSTS:\n      return {\n        ...action.posts\n      };\n    case REMOVE_POST:\n      delete newState[action.postId];\n      return newState;\n    default:\n      return newState;\n  }\n};\nexport default postsReducer;","map":{"version":3,"names":["csrfFetch","storeCSRFToken","receiveLikes","receiveComments","receiveUsers","receiveFollows","RECEIVE_POST","RECEIVE_POSTS","REMOVE_POST","RECEIVE_USER_POST","receivePost","post","type","receivePosts","posts","deletePost","postId","userPosts","username","state","Object","values","filter","author","fetchPosts","pagenumber","dispatch","response","fetch","body","J","ok","data","json","users","follows","likes","fetchPost","comments","createPost","newPost","method","updatePost","formData","postid","error","Error","message","removePost","postsReducer","arguments","length","undefined","action","newState","id"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/posts.js"],"sourcesContent":["import csrfFetch, { storeCSRFToken } from \"./csrf\";\nimport { receiveLikes } from \"./likes\";\nimport {receiveComments} from './comments';\nimport { receiveUsers } from \"./user\";\nimport { receiveFollows } from \"./follows\";\n// consts \n\nconst RECEIVE_POST = \"api/RECEIVE_POST\";\nconst RECEIVE_POSTS = \"api/RECEIVE_POSTS\";\nconst REMOVE_POST = 'api/UPDATE_POST';\nconst RECEIVE_USER_POST = \"api/USERNAME/RECEIVE_POSTS\";\n\n// action types\n\n\nexport const receivePost = (post) => ({\n    type: RECEIVE_POST,\n    post \n})\n\nexport const receivePosts = (posts) => ({\n    type: RECEIVE_POSTS,\n    posts\n})\n\nexport const deletePost = (postId) =>({\n    type: REMOVE_POST,\n    postId\n})\n\n//getter\n\nexport const userPosts = (username) => (state) => {\n    return state.posts ? Object.values(state.posts).filter((post)=>post.author.username===username) : null;\n}\n\n// thunk actions\n\nexport const fetchPosts = (pagenumber) => async(dispatch) =>{\n    let response = await fetch('/api/posts',{\n        body: J\n    });\n    if (response.ok){\n    const data = await response.json();\n    dispatch(receivePosts(data.posts));\n    dispatch(receiveUsers(data.users));\n    dispatch(receiveFollows(data.follows));\n    dispatch(receiveLikes(data.likes));\n    return data\n    }\n}\n\nexport const fetchPost = (postId) => async(dispatch)=>{\n    let response = await fetch(`/api/posts/${postId}`);\n\n    if (response.ok){\n    const data = await response.json();\n    dispatch(receivePost(data.posts));\n    dispatch(receiveComments(data.comments));\n    dispatch(receiveLikes(data.likes));\n    return data;\n    }\n} \n\nexport const createPost = (post) => async(dispatch) =>{\n    const newPost = await csrfFetch('/api/posts',{\n        method:'POST',\n        body: post\n    });\n    if (newPost.ok){\n    const data = await newPost.json();\n    dispatch(receivePost(data.posts));\n    dispatch(receiveComments(data.comments));\n    dispatch(receiveLikes(data.likes));\n    return data;\n    }\n}\n\nexport const updatePost = (formData,postid)=> async(dispatch) => {\n   \n    const post = await csrfFetch(`/api/posts/${postid}`,{\n        method:'PATCH',\n        body: formData\n    });\n    if (post.ok){\n        const data = await post.json();\n        dispatch(receivePost(data));\n        return data;\n    } else{\n        const error = await post.json();\n        throw new Error(error.message)\n    }\n}\n\nexport const removePost = postId => async dispatch =>{\n    const post = await csrfFetch(`/api/posts/${postId}`, {\n        method: 'DELETE'\n    });\n    if (post.ok){\n        dispatch(deletePost(postId))\n        // dispatch(receivePosts())\n    }\n};\n\n// posts reducer\n\nconst postsReducer = (state={},action)=>{\n    const newState={...state};\n    switch (action.type) {\n        case RECEIVE_POST:\n            newState[action.post.id] = action.post;\n            return newState;\n        case RECEIVE_POSTS:\n            return {...action.posts};\n        case REMOVE_POST:\n            delete newState[action.postId];\n            return newState;\n        default:\n            return newState;\n    }\n}\nexport default postsReducer;\n\n    \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}