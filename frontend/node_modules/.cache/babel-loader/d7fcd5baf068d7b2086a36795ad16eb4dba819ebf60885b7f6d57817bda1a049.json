{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/users/index.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport * as postActions from '../../store/posts';\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserShowPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  // need sessionUser to determine if it will be a \n  //user or otheruser render\n  // each user will have a profile Pic, and backgroundImage\n  // need to fetch user from backend\n  const username = user.username;\n  useEffect(() => {\n    dispatch(postActions.fetchPosts());\n  }, []);\n  const sessionUser = useSelector(state => state.session.user);\n  const posts = useSelector(postActions.userPosts(userId));\n\n  // if sessionUser matches userId passed in \n  // background image\n  // profile pic, username\n  // profile settings\n  //dashboard that will switch between posts, likes and following\n  // each post will have the ability to edit, delete\n  //ability to search posts\n\n  //when not matched with sessionUser\n  // has option to follow \n  // does not have option to edit or delete posts\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"profile-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bgimage-frame\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"bgimage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile-bio-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profilepic-frame\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bio-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"blogName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bio-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"bio\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"header-buttons-contents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profilenavigation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \":username/all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \":username/posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \":username/likes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \":username/reblogs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"show-contents-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n\n  //logic to show loaing if posts is still being grabbed;\n};\n_s(UserShowPage, \"dKFE5hW/Ee7btZtLizNr6HSEYgY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = UserShowPage;\nexport default UserShowPage;\nvar _c;\n$RefreshReg$(_c, \"UserShowPage\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","postActions","Route","Switch","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","UserShowPage","_s","dispatch","username","user","fetchPosts","sessionUser","state","session","posts","userPosts","userId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/users/index.js"],"sourcesContent":["\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport * as postActions from '../../store/posts';\nimport { Route , Switch,useParams } from \"react-router-dom\";\nconst UserShowPage =() =>{\n    const dispatch = useDispatch();\n    // need sessionUser to determine if it will be a \n    //user or otheruser render\n    // each user will have a profile Pic, and backgroundImage\n    // need to fetch user from backend\n    const username = user.username;\n    useEffect(()=>{\n        dispatch(postActions.fetchPosts());\n    },[]);\n    const sessionUser = useSelector(state=>state.session.user)\n    const posts = useSelector(postActions.userPosts(userId));\n\n    // if sessionUser matches userId passed in \n    // background image\n    // profile pic, username\n    // profile settings\n    //dashboard that will switch between posts, likes and following\n    // each post will have the ability to edit, delete\n    //ability to search posts\n\n\n    //when not matched with sessionUser\n    // has option to follow \n    // does not have option to edit or delete posts\n    \n    return (\n        <>\n            <div className='show-container'>\n                <div className='show-body'>\n                    <div className='show-contents'>\n                        <div className='profile-container'>\n                            <header className='profile-container'>\n                                <div className='bgimage-frame'>\n                                    <img className='bgimage' />\n                                </div>\n                                <div className='profile-bio-container'>\n                                    <div className='profilepic-frame'>\n                                        <img />\n                                    </div>\n                                    <div className='bio-container'>\n                                        <h1 className='blogName'></h1>\n                                        <div className='bio-container'>\n                                            <p  className='bio'></p>\n                                        </div>\n                                        <div className='header-buttons-contents'>\n                                            {/* button for follow  */}\n                                        </div>\n                                    </div>\n                                </div>\n                            </header>\n                            {/* navigation for which posts to see\n                            will be all,posts, likes, reblogs\n                            will be filtered in descending creation\n                            will switch between them with new routes */}\n                            <div className='profilenavigation'></div>\n                            <Switch>\n                                <Route path=':username/all' >\n                                    {/* render all page */}\n                                </Route>\n                                <Route path=':username/posts' >\n                                    {/* render posts */}\n                                </Route>\n                                <Route path=':username/likes' >\n                                    {/* render likes */}\n                                </Route>\n                                <Route path=':username/reblogs' >\n                                    {/* render likes */}\n                                </Route>\n                            </Switch>\n                        </div>\n                        <div className='show-contents-right'>\n\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </div>\n        </>\n\n    )\n    \n    //logic to show loaing if posts is still being grabbed;\n}\n\nexport default UserShowPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}