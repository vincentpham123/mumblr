{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\nimport postsReducer from './posts';\nimport userReducer from './user';\nimport likesReducer from './likes';\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  posts: postsReducer,\n  users: userReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","postsReducer","userReducer","likesReducer","rootReducer","session","posts","users","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/index.js"],"sourcesContent":["import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\nimport postsReducer from './posts';\nimport userReducer from './user';\nimport likesReducer from './likes';\nconst rootReducer =combineReducers({\n    session: sessionReducer,\n    posts: postsReducer,\n    users: userReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAO,OAAO;AAC5E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,YAAY,MAAM,SAAS;AAClC,OAAOC,WAAW,MAAM,QAAQ;AAChC,OAAOC,YAAY,MAAM,SAAS;AAClC,MAAMC,WAAW,GAAER,eAAe,CAAC;EAC/BS,OAAO,EAAEL,cAAc;EACvBM,KAAK,EAAEL,YAAY;EACnBM,KAAK,EAAEL;AACX,CAAC,CAAC;AAEF,IAAIM,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACvCH,QAAQ,GAAGX,eAAe,CAACE,KAAK,CAAC;AACrC,CAAC,MAAM;EACH,MAAMa,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GAClBC,MAAM,CAACC,oCAAoC,IAAInB,OAAO;EAC5DU,QAAQ,GAAGO,gBAAgB,CAAClB,eAAe,CAACE,KAAK,EAAEa,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAOxB,WAAW,CAACS,WAAW,EAAEe,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeU,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}