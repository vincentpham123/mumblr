{"ast":null,"code":"// consts\n\nimport csrfFetch from \"./csrf\";\nconst RECEIVE_USER = 'api/RECEIVEUSER';\nconst DELETE_USER = 'api/DELETEUSER';\n\n//action types\n\nconst receiveUser = user => ({\n  type: RECEIVE_USER,\n  user\n});\nconst deleteUser = userId => ({\n  type: DELETE_USER,\n  userId\n});\nexport const fetchUser = userid => async dispatch => {\n  let response = await fetch(`/api/users/${userid}`);\n  if (response.ok) {\n    const user = await response.json();\n    dispatch(receiveUser(user));\n    return user;\n  }\n};\nexport const removeUser = userid => async dispatch => {\n  const response = await csrfFetch(`api/users/${userid}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    //when a user deletes i will call logout and then destroy\n    dispatch(deleteUser(userid));\n  }\n};\n\n//users reducer\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...state\n  };\n  switch (action.type) {\n    case value:\n      break;\n    default:\n      break;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["csrfFetch","RECEIVE_USER","DELETE_USER","receiveUser","user","type","deleteUser","userId","fetchUser","userid","dispatch","response","fetch","ok","json","removeUser","method","userReducer","state","arguments","length","undefined","action","newState","value"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/user.js"],"sourcesContent":["\n// consts\n\nimport csrfFetch from \"./csrf\";\n\nconst RECEIVE_USER = 'api/RECEIVEUSER'\nconst DELETE_USER = 'api/DELETEUSER'\n\n\n//action types\n\nconst receiveUser = (user) => ({\n    type: RECEIVE_USER,\n    user\n})\n\nconst deleteUser = (userId) => ({\n    type:DELETE_USER,\n    userId\n});\n\n\nexport const fetchUser = (userid) => async(dispatch) =>{\n    let response = await fetch(`/api/users/${userid}`)\n    if (response.ok){\n        const user = await response.json();\n        dispatch(receiveUser(user));\n        return user;\n    }\n\n}\n\nexport const removeUser = (userid) => async (dispatch) => {\n    const response = await csrfFetch(`api/users/${userid}`,{\n        method: 'DELETE'\n    });\n    if (response.ok){\n        //when a user deletes i will call logout and then destroy\n        dispatch(deleteUser(userid))\n    }\n};\n\n//users reducer\n\nconst userReducer = (state={},action) => {\n    const newState={...state};\n    switch (action.type) {\n        case value:\n            \n            break;\n    \n        default:\n            break;\n    }\n\n}\n\nexport default userReducer;\n\n\n\n"],"mappings":"AACA;;AAEA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,YAAY,GAAG,iBAAiB;AACtC,MAAMC,WAAW,GAAG,gBAAgB;;AAGpC;;AAEA,MAAMC,WAAW,GAAIC,IAAI,KAAM;EAC3BC,IAAI,EAAEJ,YAAY;EAClBG;AACJ,CAAC,CAAC;AAEF,MAAME,UAAU,GAAIC,MAAM,KAAM;EAC5BF,IAAI,EAACH,WAAW;EAChBK;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMC,SAAS,GAAIC,MAAM,IAAK,MAAMC,QAAQ,IAAI;EACnD,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaH,MAAO,EAAC,CAAC;EAClD,IAAIE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMT,IAAI,GAAG,MAAMO,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,QAAQ,CAACP,WAAW,CAACC,IAAI,CAAC,CAAC;IAC3B,OAAOA,IAAI;EACf;AAEJ,CAAC;AAED,OAAO,MAAMW,UAAU,GAAIN,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACtD,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAE,aAAYS,MAAO,EAAC,EAAC;IACnDO,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAIL,QAAQ,CAACE,EAAE,EAAC;IACZ;IACAH,QAAQ,CAACJ,UAAU,CAACG,MAAM,CAAC,CAAC;EAChC;AACJ,CAAC;;AAED;;AAEA,MAAMQ,WAAW,GAAG,SAAAA,CAAA,EAAqB;EAAA,IAApBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,IAACG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChC,MAAME,QAAQ,GAAC;IAAC,GAAGL;EAAK,CAAC;EACzB,QAAQI,MAAM,CAACjB,IAAI;IACf,KAAKmB,KAAK;MAEN;IAEJ;MACI;EACR;AAEJ,CAAC;AAED,eAAeP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}