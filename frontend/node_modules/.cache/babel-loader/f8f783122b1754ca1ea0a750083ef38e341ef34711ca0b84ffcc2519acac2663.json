{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPost.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport PostCircle from './PostCircle';\nimport { Modal } from '../Context/Modal';\nimport PostSelection from './PostSelection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPost = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n\n  // post selection will pass in postType and the correct component\n  // will be rendered based on the selection\n  // have useEffect that will trigger when postType is selected\n  // will set a variable equal to the type selected\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(PostSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NewPost, \"a6VKJDcssUjqH9B7h9lsMLjsVRc=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["useState","useEffect","Link","useHistory","PostCircle","Modal","PostSelection","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPost","_s","showModal","setShowModal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewPost.js"],"sourcesContent":["import {useState,useEffect} from 'react';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport PostCircle from './PostCircle';\nimport { Modal } from '../Context/Modal';\nimport PostSelection from './PostSelection';\nconst NewPost = () =>{\n    const [showModal,setShowModal] = useState(false);\n    \n    // post selection will pass in postType and the correct component\n    // will be rendered based on the selection\n    // have useEffect that will trigger when postType is selected\n    // will set a variable equal to the type selected\n    return (\n        <>\n            <Modal >\n                <PostSelection />\n            </Modal>\n        </>\n    )\n}\n\nexport default NewPost;"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AAExC,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC5C,MAAMC,OAAO,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEhD;EACA;EACA;EACA;EACA,oBACIQ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACH,KAAK;MAAAU,QAAA,eACFP,OAAA,CAACF,aAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACV,CAAC;AAEX,CAAC;AAAAP,EAAA,CAdKD,OAAO;AAAAS,EAAA,GAAPT,OAAO;AAgBb,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}