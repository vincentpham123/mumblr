{"ast":null,"code":"import csrfFetch from \"./csrf\";\nconst RECEIVE_COMMENT = 'api/RECEIVECOMMENT';\nconst DELETE_COMMENT = 'api/DELETECOMMENT';\nconst RECEIVE_COMMENTS = 'api/RECEIVECOMMENTS';\n\n//actions\nconst receiveComments = payload = {\n  type: RECEIVE_COMMENTS,\n  payload\n};\nconst receiveComment = payload => ({\n  type: RECEIVE_COMMENT,\n  payload\n});\nconst deleteComment = commentId => ({\n  type: DELETE_COMMENT,\n  commentId\n});\n\n//thunk actions\n\nexport const createComment = comment => async dispatch => {\n  let response = await csrfFetch('/api/comments', {\n    body: JSON.stringify(comment),\n    method: 'POST'\n  });\n  if (response.ok) {\n    let data = response.json();\n    dispatch(receiveComment(data));\n  }\n};\nexport const removeComment = commentId => async dispatch => {\n  let response = await csrfFetch('/api/comments', {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    dispatch(deleteComment(commentId));\n  }\n};\nconst commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_COMMENTS:\n      return {\n        ...action.payload.posts\n      };\n    case RECEIVE_COMMENT:\n      newState[action.payload.id] = action.payload;\n      return newState;\n    case DELETE_COMMENT:\n      delete newState[action.commentId];\n      return newState;\n    default:\n      return newState;\n  }\n};\nexport default commentsReducer;","map":{"version":3,"names":["csrfFetch","RECEIVE_COMMENT","DELETE_COMMENT","RECEIVE_COMMENTS","receiveComments","payload","type","receiveComment","deleteComment","commentId","createComment","comment","dispatch","response","body","JSON","stringify","method","ok","data","json","removeComment","commentsReducer","state","arguments","length","undefined","action","newState","posts","id"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/store/comments.js"],"sourcesContent":["import csrfFetch from \"./csrf\"\n\nconst RECEIVE_COMMENT = 'api/RECEIVECOMMENT'\nconst DELETE_COMMENT = 'api/DELETECOMMENT'\nconst RECEIVE_COMMENTS= 'api/RECEIVECOMMENTS'\n\n//actions\nconst receiveComments = (payload)= ({\n    type: RECEIVE_COMMENTS,\n    payload\n})\nconst receiveComment = (payload)=>({\n    type: RECEIVE_COMMENT,\n    payload \n})\n\nconst deleteComment = (commentId) => ({\n    type: DELETE_COMMENT,\n    commentId\n})\n\n\n//thunk actions\n\nexport const createComment = (comment) =>async dispatch=> {\n    let response = await csrfFetch('/api/comments',{\n        body: JSON.stringify(comment),\n        method: 'POST'\n    })\n\n    if (response.ok){\n        let data = response.json();\n        dispatch(receiveComment(data));\n    }\n}\n\n\nexport const removeComment = (commentId) => async dispatch =>{\n    let response = await csrfFetch('/api/comments',{\n    method:'DELETE'});\n\n    if (response.ok){\n        dispatch(deleteComment(commentId))\n    }\n\n}\n\nconst commentsReducer = (state={},action)=>{\n    let newState={...state};\n\n    switch (action.type) {\n        case(RECEIVE_COMMENTS):\n            return {...action.payload.posts};\n\n        case (RECEIVE_COMMENT):\n            newState[action.payload.id]=action.payload;\n            return newState;\n        case (DELETE_COMMENT):\n            delete newState[action.commentId];\n            return newState\n        default:\n            return newState;\n    }\n}\n\nexport default commentsReducer;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,eAAe,GAAG,oBAAoB;AAC5C,MAAMC,cAAc,GAAG,mBAAmB;AAC1C,MAAMC,gBAAgB,GAAE,qBAAqB;;AAE7C;AACA,MAAMC,eAAe,GAAIC,OAAO,GAAI;EAChCC,IAAI,EAAEH,gBAAgB;EACtBE;AACJ,CAAE;AACF,MAAME,cAAc,GAAIF,OAAO,KAAI;EAC/BC,IAAI,EAAEL,eAAe;EACrBI;AACJ,CAAC,CAAC;AAEF,MAAMG,aAAa,GAAIC,SAAS,KAAM;EAClCH,IAAI,EAAEJ,cAAc;EACpBO;AACJ,CAAC,CAAC;;AAGF;;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAO,IAAI,MAAMC,QAAQ,IAAG;EACtD,IAAIC,QAAQ,GAAG,MAAMb,SAAS,CAAC,eAAe,EAAC;IAC3Cc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC;IAC7BM,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAC;IACZ,IAAIC,IAAI,GAAGN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1BR,QAAQ,CAACL,cAAc,CAACY,IAAI,CAAC,CAAC;EAClC;AACJ,CAAC;AAGD,OAAO,MAAME,aAAa,GAAIZ,SAAS,IAAK,MAAMG,QAAQ,IAAG;EACzD,IAAIC,QAAQ,GAAG,MAAMb,SAAS,CAAC,eAAe,EAAC;IAC/CiB,MAAM,EAAC;EAAQ,CAAC,CAAC;EAEjB,IAAIJ,QAAQ,CAACK,EAAE,EAAC;IACZN,QAAQ,CAACJ,aAAa,CAACC,SAAS,CAAC,CAAC;EACtC;AAEJ,CAAC;AAED,MAAMa,eAAe,GAAG,SAAAA,CAAA,EAAmB;EAAA,IAAlBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,IAACG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpC,IAAIE,QAAQ,GAAC;IAAC,GAAGL;EAAK,CAAC;EAEvB,QAAQI,MAAM,CAACrB,IAAI;IACf,KAAKH,gBAAgB;MACjB,OAAO;QAAC,GAAGwB,MAAM,CAACtB,OAAO,CAACwB;MAAK,CAAC;IAEpC,KAAM5B,eAAe;MACjB2B,QAAQ,CAACD,MAAM,CAACtB,OAAO,CAACyB,EAAE,CAAC,GAACH,MAAM,CAACtB,OAAO;MAC1C,OAAOuB,QAAQ;IACnB,KAAM1B,cAAc;MAChB,OAAO0B,QAAQ,CAACD,MAAM,CAAClB,SAAS,CAAC;MACjC,OAAOmB,QAAQ;IACnB;MACI,OAAOA,QAAQ;EACvB;AACJ,CAAC;AAED,eAAeN,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}