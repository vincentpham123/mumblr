{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTextPost = _ref => {\n  _s();\n  let {\n    toClose\n  } = _ref;\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  // will increase everytime enter is pressed\n  //need eventlistener for input of enter\n  //which will increase rows by 1\n  // will also need to increase the height of the text area\n  // will have options for photos, links, possibily videos\n  // need to add photos later after i get just the text creator to work\n\n  const [rows, setRows] = useState(4);\n  const sessionUser = useSelector(state => state.session.user);\n  useEffect(() => {});\n  const handleSubmit = event => {\n    event.preventDefault();\n    return dispatchEvent(createPost({\n      title,\n      body,\n      author_id: sessionUser.id\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postheader-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-profile-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newtext-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newtext-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"newText-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"text-title\",\n                value: title,\n                onChange: event => setTitle(event.target.value),\n                placeholder: \"title (optional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"text-body\",\n                value: body,\n                onChange: event => setBody(event.target.value),\n                placeholder: \"Go ahead, put anything.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"closeText\",\n                onClick: () => history.go(-2),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-submit\",\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-post-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"text-form\",\n          onClick: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n\n  // have an option for files, \n  //optional \n};\n_s(NewTextPost, \"x1mGcaHnvHCTyCWs1IAVfgY/T9c=\", false, function () {\n  return [useHistory, useSelector];\n});\n_c = NewTextPost;\nexport default NewTextPost;\nvar _c;\n$RefreshReg$(_c, \"NewTextPost\");","map":{"version":3,"names":["useSelector","useState","createPost","useDispatch","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTextPost","_ref","_s","toClose","history","title","setTitle","body","setBody","rows","setRows","sessionUser","state","session","user","useEffect","handleSubmit","event","preventDefault","dispatchEvent","author_id","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","onClick","go","type","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport { useState } from \"react\"\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nconst NewTextPost = ({toClose}) => {\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [body,setBody] = useState('');\n    \n    // will increase everytime enter is pressed\n    //need eventlistener for input of enter\n    //which will increase rows by 1\n    // will also need to increase the height of the text area\n    // will have options for photos, links, possibily videos\n    // need to add photos later after i get just the text creator to work\n\n    const [rows,setRows] = useState(4);\n    const sessionUser = useSelector(state=>  state.session.user);\n    \n    useEffect(()=>{\n\n    })\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        \n        return dispatchEvent(createPost({title,body,author_id: sessionUser.id}))\n\n}\nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className='post-profile-pic'></div>\n                    <div className=\"post-username\"></div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button>\n                        {/* on click open modal with true and false\n                        if clicked set setshowoptionsmenu to true and render the modal*/}\n                    </button>\n                </div>\n            </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                    <div className = 'newText-inputs'>\n                        <textarea \n                        className='text-title'\n                        value={title}\n                        onChange={(event)=>setTitle(event.target.value)}\n                        placeholder='title (optional'\n                        />\n                        <textarea\n                        className='text-body'\n                        value={body}\n                        onChange={(event)=>setBody(event.target.value)}\n                        placeholder='Go ahead, put anything.'\n                        />\n                    </div>\n                    <div className='text-footer'>\n                        <button className='closeText' onClick={()=>history.go(-2)}>Close</button>\n                        <button className='text-submit' type='submit'></button>\n                    </div>\n                </div>\n\n            </div>\n            \n            \n        </div>\n            <div className='text-post-body'>\n                <form className='text-form' onClick={handleSubmit}>\n                        <div className></div>\n                </form>\n            </div>\n        </div>\n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewTextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}