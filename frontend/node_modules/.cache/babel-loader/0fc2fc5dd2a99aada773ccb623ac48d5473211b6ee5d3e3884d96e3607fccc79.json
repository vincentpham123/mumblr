{"ast":null,"code":"import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport * as postActions from '../../store/posts';\nimport * as userActions from '../../store/user';\nimport { Route, Switch, useParams } from \"react-router-dom\";\nconst UserShowPage = () => {\n  // const dispatch = useDispatch();\n  // const params = useParams();\n  // const username = params.username;\n  // // need sessionUser to determine if it will be a \n  // //user or otheruser render\n  // // each user will have a profile Pic, and backgroundImage\n  // // need to fetch user from backend\n  // useEffect(()=>{\n  //     dispatch(userActions.fetchUser(username))\n  //     dispatch(postActions.fetchPosts());\n  // },[]);\n  // const sessionUser = useSelector(state=>state.session.user);\n  // const user = useSelector(state=> state.user);\n  // const posts = useSelector(postActions.userPosts(user.id));\n\n  // if sessionUser matches userId passed in \n  // background image\n  // profile pic, username\n  // profile settings\n  //dashboard that will switch between posts, likes and following\n  // each post will have the ability to edit, delete\n  //ability to search posts\n\n  //when not matched with sessionUser\n  // has option to follow \n  // does not have option to edit or delete posts\n\n  return null\n  // <>\n  //     <div className='show-container'>\n  //         <div className='show-body'>\n  //             <div className='show-contents'>\n  //                 <div className='profile-container'>\n  //                     <header className='profile-container'>\n  //                         <div className='bgimage-frame'>\n  //                             <img className='bgimage' />\n  //                         </div>\n  //                         <div className='profile-bio-container'>\n  //                             <div className='profilepic-frame'>\n  //                                 <img />\n  //                             </div>\n  //                             <div className='bio-container'>\n  //                                 <h1 className='blogName'></h1>\n  //                                 <div className='bio-container'>\n  //                                     <p  className='bio'></p>\n  //                                 </div>\n  //                                 <div className='header-buttons-contents'>\n  //                                     {/* button for follow  */}\n  //                                 </div>\n  //                             </div>\n  //                         </div>\n  //                     </header>\n  //                     {/* navigation for which posts to see\n  //                     will be all,posts, likes, reblogs\n  //                     will be filtered in descending creation\n  //                     will switch between them with new routes */}\n  //                     <div className='profilenavigation'></div>\n  //                     <Switch>\n  //                         <Route path=':username/all' >\n  //                             {/* render all page */}\n  //                         </Route>\n  //                         <Route path=':username/posts' >\n  //                             {/* render posts */}\n  //                         </Route>\n  //                         <Route path=':username/likes' >\n  //                             {/* render likes */}\n  //                         </Route>\n  //                         <Route path=':username/reblogs' >\n  //                             {/* render likes */}\n  //                         </Route>\n  //                     </Switch>\n  //                 </div>\n  //                 <div className='show-contents-right'>\n\n  //                 </div>\n  //             </div>\n\n  //         </div>\n\n  //     </div>\n  // </>\n  ;\n\n  //logic to show loaing if posts is still being grabbed;\n};\n_c = UserShowPage;\nexport default UserShowPage;\nvar _c;\n$RefreshReg$(_c, \"UserShowPage\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","postActions","userActions","Route","Switch","useParams","UserShowPage","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/users/index.js"],"sourcesContent":["\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport * as postActions from '../../store/posts';\nimport * as userActions from '../../store/user';\nimport { Route , Switch,useParams } from \"react-router-dom\";\nconst UserShowPage =() =>{\n    // const dispatch = useDispatch();\n    // const params = useParams();\n    // const username = params.username;\n    // // need sessionUser to determine if it will be a \n    // //user or otheruser render\n    // // each user will have a profile Pic, and backgroundImage\n    // // need to fetch user from backend\n    // useEffect(()=>{\n    //     dispatch(userActions.fetchUser(username))\n    //     dispatch(postActions.fetchPosts());\n    // },[]);\n    // const sessionUser = useSelector(state=>state.session.user);\n    // const user = useSelector(state=> state.user);\n    // const posts = useSelector(postActions.userPosts(user.id));\n\n    // if sessionUser matches userId passed in \n    // background image\n    // profile pic, username\n    // profile settings\n    //dashboard that will switch between posts, likes and following\n    // each post will have the ability to edit, delete\n    //ability to search posts\n\n\n    //when not matched with sessionUser\n    // has option to follow \n    // does not have option to edit or delete posts\n    \n    return (\n        null\n        // <>\n        //     <div className='show-container'>\n        //         <div className='show-body'>\n        //             <div className='show-contents'>\n        //                 <div className='profile-container'>\n        //                     <header className='profile-container'>\n        //                         <div className='bgimage-frame'>\n        //                             <img className='bgimage' />\n        //                         </div>\n        //                         <div className='profile-bio-container'>\n        //                             <div className='profilepic-frame'>\n        //                                 <img />\n        //                             </div>\n        //                             <div className='bio-container'>\n        //                                 <h1 className='blogName'></h1>\n        //                                 <div className='bio-container'>\n        //                                     <p  className='bio'></p>\n        //                                 </div>\n        //                                 <div className='header-buttons-contents'>\n        //                                     {/* button for follow  */}\n        //                                 </div>\n        //                             </div>\n        //                         </div>\n        //                     </header>\n        //                     {/* navigation for which posts to see\n        //                     will be all,posts, likes, reblogs\n        //                     will be filtered in descending creation\n        //                     will switch between them with new routes */}\n        //                     <div className='profilenavigation'></div>\n        //                     <Switch>\n        //                         <Route path=':username/all' >\n        //                             {/* render all page */}\n        //                         </Route>\n        //                         <Route path=':username/posts' >\n        //                             {/* render posts */}\n        //                         </Route>\n        //                         <Route path=':username/likes' >\n        //                             {/* render likes */}\n        //                         </Route>\n        //                         <Route path=':username/reblogs' >\n        //                             {/* render likes */}\n        //                         </Route>\n        //                     </Switch>\n        //                 </div>\n        //                 <div className='show-contents-right'>\n\n        //                 </div>\n        //             </div>\n\n\n        //         </div>\n\n        //     </div>\n        // </>\n\n    )\n    \n    //logic to show loaing if posts is still being grabbed;\n}\n\nexport default UserShowPage;"],"mappings":"AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAC/C,SAASC,KAAK,EAAGC,MAAM,EAACC,SAAS,QAAQ,kBAAkB;AAC3D,MAAMC,YAAY,GAAEA,CAAA,KAAK;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA,OACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;;EAEA;EACA;EAAA;;EAIJ;AACJ,CAAC;AAAAC,EAAA,GAzFKD,YAAY;AA2FlB,eAAeA,YAAY;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}