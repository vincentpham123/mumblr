{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useState, useRef } from \"react\";\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTextPost = () => {\n  _s();\n  const inputRef = useRef(null);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [paragraphs, setParagraphs] = useState(['']);\n\n  // will increase everytime enter is pressed\n  //need eventlistener for input of enter\n  //which will increase rows by 1\n  // will also need to increase the height of the text area\n  // will have options for photos, links, possibily videos\n  // need to add photos later after i get just the text creator to work\n\n  const [rows, setRows] = useState(4);\n  const sessionUser = useSelector(state => state.session.user);\n  const handleInput = (event, index) => {\n    const updatedContent = [...paragraphs];\n    updatedContent[index] = event.target.innerText;\n    setParagraphs(updatedContent);\n  };\n  const handleKeyDown = (event, index) => {\n    if (paragraphs.length < 11 && event.key === 'Enter') {\n      event.preventDefault();\n      setParagraphs([...paragraphs, '']);\n      event.target.nextElementSibling.focus();\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(createPost({\n      title,\n      body,\n      author_id: sessionUser.id\n    }));\n    history.go(-2);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postheader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-username\",\n              children: sessionUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postheader-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"postOptions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newtext-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newtext-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"contentEdit text-title\",\n            contentEditable: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), paragraphs.map((paragraph, index) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              onKeyDown: (event, index) => handleKeyDown(event, index),\n              className: \"contentEdit text-paragraph\",\n              contentEditable: \"true\",\n              children: paragraph\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 35\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"closeText\",\n              onClick: () => history.go(-2),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-submit\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n\n  // have an option for files, \n  //optional \n};\n_s(NewTextPost, \"l8LROwrABB7hjJ18GAWB2c/Wsa4=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = NewTextPost;\nexport default NewTextPost;\nvar _c;\n$RefreshReg$(_c, \"NewTextPost\");","map":{"version":3,"names":["useSelector","useState","useRef","createPost","useDispatch","useHistory","Redirect","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTextPost","_s","inputRef","dispatch","history","title","setTitle","body","setBody","paragraphs","setParagraphs","rows","setRows","sessionUser","state","session","user","handleInput","event","index","updatedContent","target","innerText","handleKeyDown","length","key","preventDefault","nextElementSibling","focus","handleSubmit","author_id","id","go","children","className","username","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","map","paragraph","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/mumblr/frontend/src/components/posts/NewTextPost.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport { useState, useRef } from \"react\"\nimport { createPost } from \"../../store/posts\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport './styling/newtextpost.css';\nconst NewTextPost = () => {\n    const inputRef = useRef(null)\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [title,setTitle] = useState('');\n    const [body,setBody] = useState('');\n    const [paragraphs,setParagraphs] = useState(['']);\n\n    // will increase everytime enter is pressed\n    //need eventlistener for input of enter\n    //which will increase rows by 1\n    // will also need to increase the height of the text area\n    // will have options for photos, links, possibily videos\n    // need to add photos later after i get just the text creator to work\n\n    const [rows,setRows] = useState(4);\n    const sessionUser = useSelector(state=>  state.session.user);\n    const handleInput = (event,index) => {\n        const updatedContent = [...paragraphs];\n        updatedContent[index] = event.target.innerText;\n        setParagraphs(updatedContent);\n    }\n\n    const handleKeyDown = (event,index) => {\n        if ( paragraphs.length<11 && event.key==='Enter'){\n            event.preventDefault();\n            setParagraphs([...paragraphs,''])\n            event.target.nextElementSibling.focus();\n        }\n    }\n    \n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        \n        dispatch(createPost({title,body,author_id: sessionUser.id}))\n        history.go(-2);\n    }\nreturn (\n    <>\n    <div className='text-post-container'>\n        <div className='postheader-container'>\n            <div className='postHeader-body'>\n            {/* for the left side of the header */}\n                <div className='postheader-left'>\n                    <div className=\"post-username\">{sessionUser.username}</div>\n                </div>\n                {/* button for the options on the right */}\n                <div className='postheader-right'>\n                    <button className='postOptions'>\n                        {/* on click open modal with true and false\n                        if clicked set setshowoptionsmenu to true and render the modal*/}\n                    </button>\n                </div>\n            </div>\n        </div>\n            {/* start of the text area */}\n            <div className='newtext-container'>\n                <div className = 'newtext-body'>\n                        <h1 className=\"contentEdit text-title\" contentEditable='true'></h1>\n                        {paragraphs.map((paragraph,index)=>{\n                           return <p onKeyDown={(event,index)=>handleKeyDown(event,index)} className='contentEdit text-paragraph' contentEditable='true'>{paragraph}</p>\n                        })}\n                        {/* <div className = 'newText-inputs'>\n                            <textarea \n                            className='text-title'\n                            value={title}\n                            onChange={(event)=>setTitle(event.target.value)}\n                            placeholder='title (optional)'\n                            />\n                            <textarea\n                            className='text-body'\n                            value={body}\n                            onChange={(event)=>setBody(event.target.value)}\n                            placeholder='Go ahead, put anything.'\n                            />\n                        </div> */}\n                    <div className='text-footer'>\n                        {/* make this button a div to avoid clashing with the submit button */}\n                        <button className='closeText' onClick={()=>history.go(-2)}>Close</button>\n                        <button className='text-submit' onClick={handleSubmit}>Submit</button>\n                    </div>\n                </div>\n\n            </div>\n        \n    </div>\n            \n            \n        \n    </>\n)\n\n    // have an option for files, \n    //optional \n}\n\nexport default NewTextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}