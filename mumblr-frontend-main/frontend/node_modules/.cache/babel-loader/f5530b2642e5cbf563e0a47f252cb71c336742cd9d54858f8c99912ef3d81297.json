{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport './passwordLogin.css';\nconst passwordSignUp = _ref => {\n  let {\n    email\n  } = _ref;\n} // const dispatch = useDispatch();\n// const [password,setPassword] = useState('');\n// const [confirmPassword,setConfirmPassword] = useState();\n// const [errors,setErrors] = useState([]);\n// const [buttonColor,setButtonColor] = useState('');\n// const [fontColor,setFontColor] = useState('');\n// useEffect(()=>{\n//     if (password.length){\n//         setButtonColor('white');\n//         setFontColor('black');\n//     } else {\n//         setButtonColor('');\n//         setFontColor('');\n//     }\n// },[password]);\n// const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     setErrors([]);\n//     return dispatch(sessionActions.login({email, password}))\n//         .catch(async (res) => {\n//             let data;\n//             try {\n//                 data = await res.clone().json();\n//             } catch {\n//                 data = await res.text();\n//             }\n\n//             if (data?.errors) setErrors(data.errors);\n//             else if (data) setErrors([data]);\n//             else setErrors([res.statusText]);\n\n//         });\n// }\n// return (\n//     <>\n//          <div className='passwordlogin-box'>\n//             <div className='password-title'>mumblr</div>\n//             <form className = 'password-form' onSubmit={handleSubmit}>\n//             <div className='password-instructions'><p>Welcome back to your corner of the internet.</p></div>\n//             <input className= 'password-text' type='password' placeholder='Password' \n//                 value={password} onChange={event=>setPassword(event.target.value)} required\n//                 />\n\n//                 <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='email-button' type='submit' >\n//                 Log in<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n//                 </button>\n//             </form>\n//             <ul>\n//                 {errors.map(error => <li key={error}>{error}</li>)}\n//             </ul>\n//         </div>\n//     </>\n// )\n;\n\nexport default PasswordLogin;","map":{"version":3,"names":["useState","useEffect","sessionActions","csrfFetch","Redirect","useDispatch","passwordSignUp","_ref","email","PasswordLogin"],"sources":["/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormModal/passwordSignUp.js"],"sourcesContent":["import { useState, useEffect} from \"react\"\nimport * as sessionActions from '../../store/session';\nimport csrfFetch from \"../../store/csrf\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport './passwordLogin.css';\n\nconst passwordSignUp = ({email}) =>{\n    // const dispatch = useDispatch();\n    // const [password,setPassword] = useState('');\n    // const [confirmPassword,setConfirmPassword] = useState();\n    // const [errors,setErrors] = useState([]);\n    // const [buttonColor,setButtonColor] = useState('');\n    // const [fontColor,setFontColor] = useState('');\n    // useEffect(()=>{\n    //     if (password.length){\n    //         setButtonColor('white');\n    //         setFontColor('black');\n    //     } else {\n    //         setButtonColor('');\n    //         setFontColor('');\n    //     }\n    // },[password]);\n    // const handleSubmit = (event) => {\n    //     event.preventDefault();\n\n    //     setErrors([]);\n    //     return dispatch(sessionActions.login({email, password}))\n    //         .catch(async (res) => {\n    //             let data;\n    //             try {\n    //                 data = await res.clone().json();\n    //             } catch {\n    //                 data = await res.text();\n    //             }\n\n    //             if (data?.errors) setErrors(data.errors);\n    //             else if (data) setErrors([data]);\n    //             else setErrors([res.statusText]);\n\n    //         });\n    // }\n    // return (\n    //     <>\n    //          <div className='passwordlogin-box'>\n    //             <div className='password-title'>mumblr</div>\n    //             <form className = 'password-form' onSubmit={handleSubmit}>\n    //             <div className='password-instructions'><p>Welcome back to your corner of the internet.</p></div>\n    //             <input className= 'password-text' type='password' placeholder='Password' \n    //                 value={password} onChange={event=>setPassword(event.target.value)} required\n    //                 />\n                \n    //                 <button style={{ backgroundColor:`${buttonColor}`,color:`${fontColor}`}} className='email-button' type='submit' >\n    //                 Log in<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', color: `${fontColor}` }}></i> \n    //                 </button>\n    //             </form>\n    //             <ul>\n    //                 {errors.map(error => <li key={error}>{error}</li>)}\n    //             </ul>\n    //         </div>\n    //     </>\n    // )\n\n}\n\nexport default PasswordLogin;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,qBAAqB;AAE5B,MAAMC,cAAc,GAAGC,IAAA,IAAY;EAAA,IAAX;IAACC;EAAK,CAAC,GAAAD,IAAA;AAwD/B,CAAC,CAvDG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAED,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}