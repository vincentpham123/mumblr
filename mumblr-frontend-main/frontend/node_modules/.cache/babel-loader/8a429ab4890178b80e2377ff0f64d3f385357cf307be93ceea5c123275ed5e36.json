{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormModal/EmailCheck.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailCheck = _ref => {\n  _s();\n  let {\n    setEmail,\n    onEmailClick,\n    setEmailExists\n  } = _ref;\n  const [initialEmail, setInitialEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [buttonColor, setButtonColor] = useState('');\n  const [fontColor, setFontColor] = useState('');\n  useEffect(() => {\n    if (initialEmail.length) {\n      setButtonColor('white');\n      setFontColor('black');\n    } else {\n      setButtonColor('');\n      setFontColor;\n    }\n  }, [initialEmail]);\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const handleEmailSubmit = event => {\n    event.preventDefault();\n    if (!validateEmail(initialEmail)) {\n      setEmailError(\"That's not a valid email address. Please try again.\");\n    }\n    onEmailClick(initialEmail);\n  };\n  // const handleEmailClick = (event) =>{\n  //     setEmailError([]);\n\n  //     if(!validateEmail(event.target.value)){\n  //         emailError.push(\"That's not a valid email address. Please try again.\");\n\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-title\",\n        children: \"mumblr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"email-form\",\n        onSubmit: handleEmailSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-instructions\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter your email to login or register:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"email-text\",\n          type: \"text\",\n          placeholder: \"Username or Email\",\n          value: initialEmail,\n          onChange: event => setInitialEmail(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${buttonColor}`\n          },\n          className: \"email-button\",\n          type: \"submit\",\n          children: [\"Next\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-arrow-right\",\n            style: {\n              border: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n};\n_s(EmailCheck, \"r66McbgpsaMsRnbt0o4z1NmerII=\");\n_c = EmailCheck;\nexport default EmailCheck;\n{/* <span>Next <i className=\"fa-solid fa-arrow-right\" style={{color:'#000000'}}></i> </span> */}\nvar _c;\n$RefreshReg$(_c, \"EmailCheck\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailCheck","_ref","_s","setEmail","onEmailClick","setEmailExists","initialEmail","setInitialEmail","emailError","setEmailError","buttonColor","setButtonColor","fontColor","setFontColor","length","validateEmail","email","emailRegex","test","handleEmailSubmit","event","preventDefault","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","backgroundColor","border","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormModal/EmailCheck.js"],"sourcesContent":["import { useState,useEffect } from \"react\"\nimport './index.css'\nconst EmailCheck = ({setEmail,onEmailClick,setEmailExists}) =>{\n        const [initialEmail,setInitialEmail] = useState('');\n        const [emailError,setEmailError] = useState('');\n        const [buttonColor,setButtonColor] = useState('');\n        const [fontColor,setFontColor] = useState('')\n        useEffect(()=>{\n        if (initialEmail.length) {\n            setButtonColor('white');\n        setFontColor('black')} else {\n            setButtonColor('');\n            setFontColor\n        } \n        }\n        ,[initialEmail]);\n        const validateEmail = (email) => {\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n            return emailRegex.test(email);\n        }\n\n        const handleEmailSubmit = (event) =>{\n            event.preventDefault();\n\n            \n            if (!validateEmail(initialEmail)){\n                setEmailError(\"That's not a valid email address. Please try again.\");\n    \n            }\n\n            onEmailClick(initialEmail);\n    \n        }\n        // const handleEmailClick = (event) =>{\n        //     setEmailError([]);\n\n        //     if(!validateEmail(event.target.value)){\n        //         emailError.push(\"That's not a valid email address. Please try again.\");\n                \n        //     }\n        // }\n        return (\n            <>\n            <div className='email-box'>\n                <div className='email-title'>mumblr</div>\n                <form className = 'email-form' onSubmit={handleEmailSubmit}>\n                <div className='email-instructions'><p>Enter your email to login or register:</p></div>\n                <input className= 'email-text' type='text' placeholder='Username or Email' \n                    value={initialEmail} onChange={event=>setInitialEmail(event.target.value)} required\n                    />\n                \n                    <button style={{ backgroundColor:`${buttonColor}`}} className='email-button' type='submit' >\n                    Next<i className=\"fa-solid fa-arrow-right\" style={{border: 'none', }}></i> \n                    </button>\n                </form>\n            </div>\n                {<div>{emailError}</div>}\n            </>\n        )\n}\nexport default EmailCheck;\n{/* <span>Next <i className=\"fa-solid fa-arrow-right\" style={{color:'#000000'}}></i> </span> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}