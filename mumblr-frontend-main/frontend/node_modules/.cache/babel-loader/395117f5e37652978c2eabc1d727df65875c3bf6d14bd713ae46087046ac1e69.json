{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormPage/index.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginFormPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  // grab user info from current logged in user\n  // most likely be blank\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 29\n  }, this);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      var _data;\n      let data;\n      try {\n        data = await res.clone().json();\n      } catch {\n        data = await res.text();\n      }\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username or Email\",\n      value: credential,\n      onChange: event => setCredential(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"password\",\n      value: credential,\n      onChange: event => setCredential(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginFormPage, \"a6jOefQrogjJUgG0dk88wjDAmVw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LoginFormPage;\nexport default LoginFormPage;\nvar _c;\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","sessionActions","Redirect","jsxDEV","_jsxDEV","LoginFormPage","_s","dispatch","sessionUser","state","session","user","credential","setCredential","password","setPassword","errors","setErrors","to","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","event","preventDefault","login","catch","res","_data","data","clone","json","text","statusText","id","onSubmit","children","map","error","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/LoginFormPage/index.js"],"sourcesContent":["\nimport './index.css'\nimport React,{useState} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom'\nconst LoginFormPage = ()=>{\n    const dispatch = useDispatch();\n    // grab user info from current logged in user\n    // most likely be blank\n    const sessionUser = useSelector(state=> state.session.user);\n    const [credential,setCredential] = useState('')\n    const [password,setPassword] = useState('')\n    const [errors,setErrors] = useState([]);\n\n    if (sessionUser) return <Redirect to=\"/\" />;\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setErrors([]);\n\n        return dispatch(sessionActions.login({credential, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n\n            });\n    }\n\n\n\n    return(\n        <form id='login-form' onSubmit={handleSubmit}>\n            <ul>\n                {errors.map(error => <li key={error}>{error}</li>)}\n            </ul>\n            <input type='text' placeholder='Username or Email' \n            value={credential} onChange={event=>setCredential(event.target.value)} required\n            /> <input placeholder=\"password\" \n            value={credential} onChange={event=>setCredential(event.target.value)} required\n            />\n            \n        </form>\n    )\n}\n\nexport default LoginFormPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}