{"ast":null,"code":"var _jsxFileName = \"/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/SignupFormPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupFormPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 29\n  }, this);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors([]);\n    if (password === confirmPassword) {\n      return dispatch(sessionActions.signup({\n        email,\n        username,\n        password\n      })).catch(async res => {\n        var _data;\n        let data;\n        try {\n          data = await res.clone().json();\n        } catch {\n          data = await res.text();\n        }\n        if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n      });\n    }\n    return setErrors(['Confirm Password field must be the same as the Password field']);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: event => setUsername(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"confirm password\",\n      value: confirmPassword,\n      onChange: event => setConfirmPassword(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupFormPage, \"4yRJgn5op42A+dj8PyilVos8zGY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SignupFormPage;\nexport default SignupFormPage;\nvar _c;\n$RefreshReg$(_c, \"SignupFormPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","sessionActions","Redirect","jsxDEV","_jsxDEV","SignupFormPage","_s","dispatch","sessionUser","state","session","user","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","to","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","event","preventDefault","signup","catch","res","_data","data","clone","json","text","statusText","id","onSubmit","children","map","error","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/vincentpham/Documents/GitHub/fullstack/frontend_react/frontend/src/components/SignupFormPage/index.js"],"sourcesContent":["\nimport React,{useState} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as sessionActions from '../../store/session';\nimport { Redirect } from 'react-router-dom'\n\n\nconst SignupFormPage = () => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password,setPassword] = useState('');\n    const [confirmPassword,setConfirmPassword] = useState('');\n    const [errors,setErrors] = useState([]);\n    if (sessionUser) return <Redirect to='/' />\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setErrors([]);\n        if(password===confirmPassword){\n        return dispatch(sessionActions.signup({email,username,password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data=await res.clone().json();\n                }\n                catch {\n                    data = await res.text();\n                }\n\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n        <form id='login-form' onSubmit={handleSubmit}>\n            <ul>\n                {errors.map(error => <li key={error}>{error}</li>)}\n            </ul>\n            <input type='text' placeholder='Email' \n            value={email} onChange={event=>setEmail(event.target.value)} required\n            /> <input type='text' placeholder='username' \n            value={username} onChange={event=>setUsername(event.target.value)} required\n            /> <input type='password' placeholder=\"password\" \n            value={password} onChange={event=>setPassword(event.target.value)} required\n            /> <input type='password' placeholder=\"confirm password\" \n            value={confirmPassword} onChange={event=>setConfirmPassword(event.target.value)} required\n            /> \n            <button type=\"submit\">Sign Up</button>\n        \n        </form>\n    )\n\n}\nexport default SignupFormPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}